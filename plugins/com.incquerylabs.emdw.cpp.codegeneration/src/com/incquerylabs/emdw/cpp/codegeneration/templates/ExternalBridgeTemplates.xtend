package com.incquerylabs.emdw.cpp.codegeneration.templates

import com.ericsson.xtumlrt.oopl.cppmodel.CPPExternalBridge
import com.ericsson.xtumlrt.oopl.cppmodel.CPPOperation
import org.eclipse.incquery.runtime.api.IncQueryEngine
import com.ericsson.xtumlrt.oopl.cppmodel.CPPFormalParameter

class ExternalBridgeTemplates extends CPPTemplate {
	extension val NamespaceTemplates namespaceTemplates
	extension val HeaderGuardTemplates headerGuardTemplates
	extension val IncludeTemplates includeTemplates
	OperationTemplates operationTemplates 
	
	new(IncQueryEngine engine) {
		super(engine)
		namespaceTemplates = new NamespaceTemplates
		headerGuardTemplates = new HeaderGuardTemplates
		includeTemplates = new IncludeTemplates
		operationTemplates = new OperationTemplates(engine)
	}
	
	def externalBridgeHeaderTemplate(CPPExternalBridge cppExternalBridge) {
		val headerGuardPostfix = "HEADER"
		'''
		/******************************************************************************
		 *
		 * E X T E R N A L   B R I D G E   H E A D E R
		 *
		 * NAME: «cppExternalBridge.cppName»
		 *
		 *
«««		 TODO: generated by [...]
		 *
		 ******************************************************************************/
		
		«startHeaderGuard(cppExternalBridge, headerGuardPostfix)»
		
		«cppExternalBridge.headerFile.inclusions»
		
		«cppExternalBridge.namespaceOpenerTemplate»
		
		«cppExternalBridge.operationDeclarations»
		
		«cppExternalBridge.namespaceCloserTemplate»
		
		«closeHeaderGuard(cppExternalBridge, headerGuardPostfix)»
		'''
	}
	
	def externalBridgeBodyTemplate(CPPExternalBridge cppExternalBridge) {
		'''
		/******************************************************************************
		 *
		 * E X T E R N A L   B R I D G E   B O D Y
		 *
		 * NAME: «cppExternalBridge.cppName»
		 *
		 *
«««		 TODO: generated by [...]
		 *
		 ******************************************************************************/
		
		«cppExternalBridge.bodyFile.inclusions»
		
		«cppExternalBridge.operationDefinitions»
		'''
	}
	
	def operationDeclarations(CPPExternalBridge cppExternalBridge) {
		val operations = cppExternalBridge.subElements.filter(CPPOperation).sortBy[cppName]
		'''
		«FOR operation : operations»
			«operationTemplates.operationSignature(operation, false, true, false, false)»;
		«ENDFOR»
		'''
	}
	
	def operationDefinitions(CPPExternalBridge cppExternalBridge) {
		val operations = cppExternalBridge.subElements.filter(CPPOperation).sortBy[cppName]
		'''
		«FOR operation : operations»
			«operationTemplates.operationSignature(operation, true, true, false, false)» {
				return «cppExternalBridge.cppExternalNamespace»::«operation.cppName»(«operation.operationParameters»);
			}
		«ENDFOR»
		'''
	}
	
	def operationParameters(CPPOperation cppOperation) {
		val parameters = cppOperation.subElements.filter(CPPFormalParameter)
		'''«FOR parameter : parameters SEPARATOR ","»«parameter.cppName»«ENDFOR»'''
	}
}
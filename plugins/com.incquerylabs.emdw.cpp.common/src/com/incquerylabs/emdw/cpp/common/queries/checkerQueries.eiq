/*******************************************************************************
 * Copyright (c) 2015-2016, IncQuery Labs Ltd. and Ericsson AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Akos Horvath, Abel Hegedus, Zoltan Ujhelyi, Daniel Segesdi, Tamas Borbas, Robert Doczi, Peter Lunk - initial API and implementation
 *******************************************************************************/
package com.incquerylabs.emdw.cpp.common.queries

import "http://www.ericsson.com/xtumlrt/oopl/cpp"
import "http://www.ericsson.com/xtumlrt/oopl"
import "http://www.eclipse.org/papyrusrt/xtumlrt/xtuml"
import "http://www.eclipse.org/papyrusrt/xtumlrt/common"
import "http://incquerylabs.com/emdw/umlintegration/trace"
import "http://www.eclipse.org/uml2/5.0.0/UML" as uml

pattern umlPrimitiveTypeByQualifiedName(
	primitiveType : uml::PrimitiveType, 
	qualifiedName
) {
	uml::PrimitiveType.qualifiedName(primitiveType, qualifiedName);
}

pattern ooplSequenceImplementation(
	impl : OOPLSequenceImplementation, 
	orderedness : SequenceOrderednessKind,
	uniqueness : SequenceUniquenessKind
) {
	OOPLSequenceImplementation.orderedness(impl, orderedness);
	OOPLSequenceImplementation.uniqueness(impl, uniqueness);
}

pattern ooplClassRefAssocImplementation(
	impl : OOPLClassRefAssocCollectionImplementation, 
	kind : AssociativeCollectionKind
) {
	OOPLClassRefAssocCollectionImplementation.kind(impl, kind);
}

pattern ooplClassRefSimpleImplementation(
	impl : OOPLClassRefSimpleCollectionImplementation, 
	kind : SimpleCollectionKind
) {
	OOPLClassRefSimpleCollectionImplementation.kind(impl, kind);
}

pattern cppBasicTypeForUmlPrimitiveType(
	primitiveType,
	basicType : CPPBasicType
) {
	Trace.umlElements(trace, primitiveType);
	Trace.xtumlrtElements(trace, xtpt);
	CPPBasicType.commonType(basicType, xtpt);
}
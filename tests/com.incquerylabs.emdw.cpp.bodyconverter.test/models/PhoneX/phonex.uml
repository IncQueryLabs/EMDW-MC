<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ActionLanguage="http://www.omg.org/spec/ALF/20120827/ActionLanguage-Profile" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmlns:xumlrt="http://modelexecution.eltesoft.hu/xumlrt/" xsi:schemaLocation="http://www.omg.org/spec/ALF/20120827/ActionLanguage-Profile pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ">
  <uml:Model xmi:id="_N-Wr8JHNEeWgtJmFnQKWjw" name="PhoneX">
    <packageImport xmi:type="uml:PackageImport" xmi:id="_N-Wr8ZHNEeWgtJmFnQKWjw">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_N-Wr8pHNEeWgtJmFnQKWjw" name="SignalEvents">
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OIKvQJHNEeWgtJmFnQKWjw" name="SEQ_register" signal="_OII6EpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OIRc85HNEeWgtJmFnQKWjw" name="SEQ_done" signal="_OIRc8ZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OIT5MJHNEeWgtJmFnQKWjw" name="SEQ_results" signal="_OITSJZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OIYKpJHNEeWgtJmFnQKWjw" name="SEQ_run" signal="_OIYKopHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OIZ_0pHNEeWgtJmFnQKWjw" name="SEQ_discover" signal="_OIZ_0JHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OIbN8ZHNEeWgtJmFnQKWjw" name="SEQ_setup" signal="_OIam5ZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OIdqMpHNEeWgtJmFnQKWjw" name="SEQ_report" signal="_OIdqMJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OIgtgpHNEeWgtJmFnQKWjw" name="SEQ_execute" signal="_OIgtgJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OIm0IZHNEeWgtJmFnQKWjw" name="SEQ_cleanup" signal="_OImNE5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OIs6wJHNEeWgtJmFnQKWjw" name="DBPort_AddUserIfNotExist" signal="_OIsTsZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OIxzQZHNEeWgtJmFnQKWjw" name="DBPort_GetUserStatus" signal="_OIxMMZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OI2EsZHNEeWgtJmFnQKWjw" name="DBPort_SetUserStatus" signal="_OI1dpZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OI9ZcZHNEeWgtJmFnQKWjw" name="DBPort_RemoveUserIfExist" signal="_OI8yY5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJEHJJHNEeWgtJmFnQKWjw" name="PhoneXPort_UnknownNumber" signal="_OJEHIpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJHxgJHNEeWgtJmFnQKWjw" name="PhoneXPort_LineIsBusy" signal="_OJHKcZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJK00ZHNEeWgtJmFnQKWjw" name="PhoneXPort_CalledBy" signal="_OJKNw5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJQUYZHNEeWgtJmFnQKWjw" name="PhoneXPort_InitiateCall" signal="_OJPtU5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJUl0ZHNEeWgtJmFnQKWjw" name="PhoneXPort_TerminateCall" signal="_OJT-xJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJXCE5HNEeWgtJmFnQKWjw" name="PhoneXPort_RegistrationResult" signal="_OJXCEZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJb6k5HNEeWgtJmFnQKWjw" name="PhoneXPort_UnregistrationResult" signal="_OJb6kZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJfk9ZHNEeWgtJmFnQKWjw" name="PhoneXPort_AllUserUnregistered" signal="_OJfk85HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJiBMJHNEeWgtJmFnQKWjw" name="PhoneXPort_AcceptCall" signal="_OJhaIpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJlrk5HNEeWgtJmFnQKWjw" name="PhoneXPort_EndCall" signal="_OJlrkZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJoH1ZHNEeWgtJmFnQKWjw" name="PhoneXPort_CallSignal" signal="_OJoH05HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJsZQ5HNEeWgtJmFnQKWjw" name="PhoneXPort_RegisterUser" signal="_OJsZQZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJwDoZHNEeWgtJmFnQKWjw" name="PhoneXPort_UnregisterUser" signal="_OJvclZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJ0VFZHNEeWgtJmFnQKWjw" name="PhoneXPort_EndAllCall" signal="_OJ0VE5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OJ-GEZHNEeWgtJmFnQKWjw" name="DBPort_AddUserResponse" signal="_OJ9fAZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OKDlpZHNEeWgtJmFnQKWjw" name="DBPort_UserStatus" signal="_OKDlo5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OKJsQZHNEeWgtJmFnQKWjw" name="DBPort_SetUserStatusResponse" signal="_OKJFNZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OKNWo5HNEeWgtJmFnQKWjw" name="DBPort_RemoveUserResponse" signal="_OKNWoZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMnKZJHNEeWgtJmFnQKWjw" name="SEQ_BUCKET_register" signal="_OMnKYJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMnxc5HNEeWgtJmFnQKWjw" name="SEQ_BUCKET_timeout" signal="_OMnKZZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMoYg5HNEeWgtJmFnQKWjw" name="SEQ_BUCKET_test_done" signal="_OMnxdJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMo_kZHNEeWgtJmFnQKWjw" name="SEQ_BUCKET_run" signal="_OMoYhJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMpmoJHNEeWgtJmFnQKWjw" name="SEQ_BUCKET_registerOne" signal="_OMo_kpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMpmpZHNEeWgtJmFnQKWjw" name="SEQ_BUCKET_registerMany" signal="_OMpmoZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMqNtJHNEeWgtJmFnQKWjw" name="SEQ_TESTCASE_setup" signal="_OMqNsJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMrb0JHNEeWgtJmFnQKWjw" name="SEQ_TESTCASE_step_done" signal="_OMqNtZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMrb1ZHNEeWgtJmFnQKWjw" name="SEQ_TESTCASE_results" signal="_OMrb0ZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMsC5JHNEeWgtJmFnQKWjw" name="SEQ_TESTCASE_timeout" signal="_OMsC4JHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMsp85HNEeWgtJmFnQKWjw" name="TB_TESTCASE_setup" signal="_OMsC5ZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMtRAZHNEeWgtJmFnQKWjw" name="TB_TESTCASE_execute" signal="_OMsp9JHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMt4E5HNEeWgtJmFnQKWjw" name="TB_TESTCASE_cleanup" signal="_OMtRApHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMufI5HNEeWgtJmFnQKWjw" name="TB_TESTCASE_report" signal="_OMt4FJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMvGM5HNEeWgtJmFnQKWjw" name="TB_TESTCASE_lineIsBusy" signal="_OMufJJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMvtQpHNEeWgtJmFnQKWjw" name="TB_TESTCASE_calledBy" signal="_OMvGNJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMwUUZHNEeWgtJmFnQKWjw" name="TB_TESTCASE_initiateCall" signal="_OMvtQ5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMwUVpHNEeWgtJmFnQKWjw" name="TB_TESTCASE_terminateCall" signal="_OMwUUpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMw7Y5HNEeWgtJmFnQKWjw" name="TB_TESTCASE_unknownNumber" signal="_OMwUV5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMxicZHNEeWgtJmFnQKWjw" name="TB_TESTCASE_registrationResult" signal="_OMw7ZJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMxidpHNEeWgtJmFnQKWjw" name="Call_CallRcvd" signal="_OMxicpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMyJg5HNEeWgtJmFnQKWjw" name="Call_CallerBusyOrUnknown" signal="_OMxid5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMywkZHNEeWgtJmFnQKWjw" name="Call_CallerVerifiedAndSynced" signal="_OMyJhJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMzXoJHNEeWgtJmFnQKWjw" name="Call_CalledVerifiedAndSynced" signal="_OMywkpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OMz-sJHNEeWgtJmFnQKWjw" name="Call_CalledBusy" signal="_OMzXoZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM0lwJHNEeWgtJmFnQKWjw" name="Call_CalledUnknown" signal="_OMz-sZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM1M0JHNEeWgtJmFnQKWjw" name="Call_EndCallRcvd" signal="_OM0lwZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM1z4JHNEeWgtJmFnQKWjw" name="Call_RingingTimerExpired" signal="_OM1M0ZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM2a8JHNEeWgtJmFnQKWjw" name="Call_CallRequestAccepted" signal="_OM1z4ZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM2a9ZHNEeWgtJmFnQKWjw" name="RegisteredSubscriber_ev1" signal="_OM2a8ZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM3CBJHNEeWgtJmFnQKWjw" name="RegistrationProcess_RegistrationRequestRcvd" signal="_OM3CAJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM3pEpHNEeWgtJmFnQKWjw" name="RegistrationProcess_RegistrationConfirmed" signal="_OM3CBZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM4QIJHNEeWgtJmFnQKWjw" name="RegistrationProcess_RegistrationNotConfirmed" signal="_OM3pE5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM4QJZHNEeWgtJmFnQKWjw" name="RegistrationProcess_TerminateCmd" signal="_OM4QIZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM43M5HNEeWgtJmFnQKWjw" name="Subscriber_UserStatusFree" signal="_OM4QJpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM5eQJHNEeWgtJmFnQKWjw" name="Subscriber_UserStatusBusy" signal="_OM43NJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM5eRZHNEeWgtJmFnQKWjw" name="Subscriber_UserStatusUnknown" signal="_OM5eQZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM6FU5HNEeWgtJmFnQKWjw" name="Subscriber_UserUpdateSuccess" signal="_OM5eRpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM6sYZHNEeWgtJmFnQKWjw" name="Subscriber_UserUpdateFail" signal="_OM6FVJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM6sZpHNEeWgtJmFnQKWjw" name="Subscriber_CallRejected" signal="_OM6sYpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM7Tc5HNEeWgtJmFnQKWjw" name="Subscriber_CallAccepted" signal="_OM6sZ5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM76gZHNEeWgtJmFnQKWjw" name="Subscriber_CallEnded" signal="_OM7TdJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM8hkJHNEeWgtJmFnQKWjw" name="Subscriber_StartVerification" signal="_OM76gpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM8hlZHNEeWgtJmFnQKWjw" name="UnregisteredSubscriber_ev1" signal="_OM8hkZHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM9IopHNEeWgtJmFnQKWjw" name="UnregistrationProcess_UnregistrationRequestRcvd" signal="_OM8hlpHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM9Ip5HNEeWgtJmFnQKWjw" name="UnregistrationProcess_UnregistrationConfirmed" signal="_OM9Io5HNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM9vtJHNEeWgtJmFnQKWjw" name="UnregistrationProcess_UnregistrationNotConfirmed" signal="_OM9vsJHNEeWgtJmFnQKWjw"/>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="_OM-WwZHNEeWgtJmFnQKWjw" name="UnregistrationProcess_TerminateCmd" signal="_OM9vtZHNEeWgtJmFnQKWjw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_N-kuYJHNEeWgtJmFnQKWjw" name="ComponentLibrary">
      <packagedElement xmi:type="uml:Component" xmi:id="_N-oYwJHNEeWgtJmFnQKWjw" name="PhoneX">
        <packagedElement xmi:type="uml:Package" xmi:id="_OChaQJHNEeWgtJmFnQKWjw" name="ImplementationPkg">
          <packagedElement xmi:type="uml:Class" xmi:id="_OC08QJHNEeWgtJmFnQKWjw" name="Call" classifierBehavior="_OLkokpHNEeWgtJmFnQKWjw" isActive="true">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODqpwZHNEeWgtJmFnQKWjw" name="RingingExpirationTimer">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODrQ0JHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODrQ0ZHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OEGHkZHNEeWgtJmFnQKWjw" name="CleanUp$method$1" specification="_OEFggZHNEeWgtJmFnQKWjw">
              <language>rALF</language>
              <body>  // select one caller related by self->Caller[R2];
  Caller caller = this->'is initiated by'.one();
  // select one s_caller related by caller->Subscriber[R1];
  Subscriber s_caller = ((Subscriber)(caller));
  // unrelate s_caller from caller across R1;
  // Unrelation across generalization is not needed anymore.
  // relate caller to self across R2;
  R2::unlink('initiates'=>this,'is initiated by'=>caller);
  // delete object instance caller;
  delete caller;
  // delete object instance s_caller;
  //Superclass instance does not need to be deleted.
  //s_caller.destroy();
  // select one called related by self->Called[R3];
  Called called = this->'is joined by'.one();
  // select one s_called related by called->Subscriber[R1];
  Subscriber s_called = ((Subscriber)(called));
  // unrelate s_called from called across R1;
  // Unrelation across generalization is not needed anymore.
  // relate called to self across R3;
  R3::unlink('joins'=>this,'is joined by'=>called);
  // delete object instance called;
  delete called;
  // delete object instance s_called;
  //Superclass instance does not need to be deleted.
  //s_called.destroy();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OEHVsJHNEeWgtJmFnQKWjw" name="create$method$1" specification="_OEGuoZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEH8w5HNEeWgtJmFnQKWjw" name="CallerID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEIj0JHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEIj0ZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEJK45HNEeWgtJmFnQKWjw" name="CalledID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEJx8JHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEJx8ZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEKZA5HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEKZBJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OELAEJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <language>rALF</language>
              <body>  // Service::SetServiceId(serviceId: param.ServiceId);
  Service::SetServiceId(serviceId=>ServiceId);
  // select any subscriber from instances of Subscriber where selected.PhoneNumber==param.CallerID or selected.PhoneNumber==param.CalledID;
  Subscriber subscriber = Subscriber::instances().filter(selected:((selected.PhoneNumber==CallerID)||(selected.PhoneNumber==CalledID))).one();
  // if not empty subscriber
  if(!(subscriber==null)) {
    // send PhoneXPort::LineIsBusy(UserID: param.CallerID);
    send new PhoneXPort::LineIsBusy(UserID=>CallerID) to PhoneXPort::instances().one();
    // return;
    return;
  // end if;
  }
  // if param.CallerID==param.CalledID
  if((CallerID==CalledID)) {
    // send PhoneXPort::TerminateCall(UserID: param.CallerID);
    send new PhoneXPort::TerminateCall(UserID=>CallerID) to PhoneXPort::instances().one();
    // return;
    return;
  // end if;
  }
  // create object instance caller of Caller;
  Caller caller = new Caller();
  caller.PhoneNumber = CallerID;
  // relate sub_caller to caller across R1;
  // create object instance called of Called;
  Called called = new Called();
  // assign sub_called.PhoneNumber = param.CalledID;
  called.PhoneNumber = CalledID;
  // create object instance call of Call;
  Call call = new Call();
  // select any service from instances of Service;
  Service service = Service::instances().one();
  // if empty service
  if(service==null) {
    // create object instance of Service;
    new Service();
    // assign service.ServiceId = 0;
    service.ServiceId = 0;
  // end if;
  }
  // relate call to service across R6;
  R6::link('is being run / handled by'=>service,'handles / runs'=>call);
  // relate caller to call across R2;
  R2::link('initiates'=>call,'is initiated by'=>caller);
  // relate called to call across R3;
  R3::link('joins'=>call,'is joined by'=>called);
  // generate Call1:'CallRcvd' to call;
  send new Call::CallRcvd() to call;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OLkokpHNEeWgtJmFnQKWjw" name="CallStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OLkolJHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OLw10ZHNEeWgtJmFnQKWjw" name="tr_init" source="_OLvntJHNEeWgtJmFnQKWjw" target="_OLwOwZHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ONnP8JHNEeWgtJmFnQKWjw" name="TXN_3_Call8_6" source="_OLlPoZHNEeWgtJmFnQKWjw" target="_OLmdwJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONnP8pHNEeWgtJmFnQKWjw" name="TXN_3_Call8_6_trigger" event="_OM1z4JHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONnP85HNEeWgtJmFnQKWjw" name="TXN_3_Call10_4" source="_OLlPoZHNEeWgtJmFnQKWjw" target="_OLvAoJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONn3AJHNEeWgtJmFnQKWjw" name="TXN_3_Call10_4_trigger" event="_OM2a8JHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONn3AZHNEeWgtJmFnQKWjw" name="TXN_4_Call7_5" source="_OLvAoJHNEeWgtJmFnQKWjw" target="_OLvnsJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONn3A5HNEeWgtJmFnQKWjw" name="TXN_4_Call7_5_trigger" event="_OM1M0JHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONn3BJHNEeWgtJmFnQKWjw" name="TXN_1_Call3_2" source="_OLw105HNEeWgtJmFnQKWjw" target="_OLyD8JHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONoeEJHNEeWgtJmFnQKWjw" name="TXN_1_Call3_2_trigger" event="_OMywkZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONoeEZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Call3_2" source="_OLwOwZHNEeWgtJmFnQKWjw" target="_OLyD8JHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONoeE5HNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Call3_2_trigger" event="_OMywkZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONoeFJHNEeWgtJmFnQKWjw" name="TXN_1_Call2_11" source="_OLw105HNEeWgtJmFnQKWjw" target="_OLyrAZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONpFIJHNEeWgtJmFnQKWjw" name="TXN_1_Call2_11_trigger" event="_OMyJg5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONpFIZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Call2_11" source="_OLwOwZHNEeWgtJmFnQKWjw" target="_OLyrAZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONpFI5HNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Call2_11_trigger" event="_OMyJg5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONpFJJHNEeWgtJmFnQKWjw" name="TXN_2_Call6_13" source="_OLyD8JHNEeWgtJmFnQKWjw" target="_OLzSEJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONpFJpHNEeWgtJmFnQKWjw" name="TXN_2_Call6_13_trigger" event="_OM0lwJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONpsMJHNEeWgtJmFnQKWjw" name="TXN_2_Call5_12" source="_OLyD8JHNEeWgtJmFnQKWjw" target="_OLzSFJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONpsMpHNEeWgtJmFnQKWjw" name="TXN_2_Call5_12_trigger" event="_OMz-sJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONpsM5HNEeWgtJmFnQKWjw" name="TXN_2_Call4_3" source="_OLyD8JHNEeWgtJmFnQKWjw" target="_OLlPoZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONpsNZHNEeWgtJmFnQKWjw" name="TXN_2_Call4_3_trigger" event="_OMzXoJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONpsNpHNEeWgtJmFnQKWjw" name="TXN_5_Call3_8" source="_OLvnsJHNEeWgtJmFnQKWjw" target="_OLz5I5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONqTQZHNEeWgtJmFnQKWjw" name="TXN_5_Call3_8_trigger" event="_OMywkZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONqTQpHNEeWgtJmFnQKWjw" name="TXN_5_Call4_9" source="_OLvnsJHNEeWgtJmFnQKWjw" target="_OL0gMZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONqTRJHNEeWgtJmFnQKWjw" name="TXN_5_Call4_9_trigger" event="_OMzXoJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONqTRZHNEeWgtJmFnQKWjw" name="TXN_8_Call4_10" source="_OLz5I5HNEeWgtJmFnQKWjw" target="_OL0gM5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONq6UZHNEeWgtJmFnQKWjw" name="TXN_8_Call4_10_trigger" event="_OMzXoJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONq6UpHNEeWgtJmFnQKWjw" name="TXN_9_Call3_10" source="_OL0gMZHNEeWgtJmFnQKWjw" target="_OL0gM5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONq6VJHNEeWgtJmFnQKWjw" name="TXN_9_Call3_10_trigger" event="_OMywkZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONq6VZHNEeWgtJmFnQKWjw" name="TXN_1_Call1_1" source="_OLw105HNEeWgtJmFnQKWjw" target="_OLw105HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONrhYJHNEeWgtJmFnQKWjw" name="TXN_1_Call1_1_trigger" event="_OMxidpHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONrhYZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Call1_1" source="_OLwOwZHNEeWgtJmFnQKWjw" target="_OLw105HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONrhY5HNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Call1_1_trigger" event="_OMxidpHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONrhZJHNEeWgtJmFnQKWjw" name="TXN_6_Call7_5" source="_OLmdwJHNEeWgtJmFnQKWjw" target="_OLvnsJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONsIcJHNEeWgtJmFnQKWjw" name="TXN_6_Call7_5_trigger" event="_OM1M0JHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONsIcZHNEeWgtJmFnQKWjw" name="TXN_11_Call3_10" source="_OLyrAZHNEeWgtJmFnQKWjw" target="_OL0gM5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONsIc5HNEeWgtJmFnQKWjw" name="TXN_11_Call3_10_trigger" event="_OMywkZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONsIdJHNEeWgtJmFnQKWjw" name="TXN_13_Call3_10" source="_OLzSEJHNEeWgtJmFnQKWjw" target="_OL0gM5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONsvgJHNEeWgtJmFnQKWjw" name="TXN_13_Call3_10_trigger" event="_OMywkZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONsvgZHNEeWgtJmFnQKWjw" name="TXN_12_Call3_10" source="_OLzSFJHNEeWgtJmFnQKWjw" target="_OL0gM5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONsvg5HNEeWgtJmFnQKWjw" name="TXN_12_Call3_10_trigger" event="_OMywkZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONsvhJHNEeWgtJmFnQKWjw" name="TXN_3_Call7_5" source="_OLlPoZHNEeWgtJmFnQKWjw" target="_OLvnsJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONtWkZHNEeWgtJmFnQKWjw" name="TXN_3_Call7_5_trigger" event="_OM1M0JHNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_OLlPoZHNEeWgtJmFnQKWjw" name="CallInitiation">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLl2sJHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one caller related by self->Caller[R2];
  Caller caller = this->'is initiated by'.one();
  // select one called related by self->Called[R3];
  Called called = this->'is joined by'.one();
  // send PhoneXPort::CalledBy(CallerID: caller.PhoneNumber, CalledID: called.PhoneNumber, ServiceId: Service::GetServiceId());
  send new PhoneXPort::CalledBy(CallerID=>((Subscriber)(caller)).PhoneNumber, CalledID=>((Subscriber)(called)).PhoneNumber, ServiceId=>Service::GetServiceId()) to PhoneXPort::instances().one();
  // create event instance of ringing_expiration_event of Call8:'RingingTimerExpired' to self;
  // !!! ALF does not allow pre-creation of events. Please update your model. Note, however that ALF code might still work if variable storing created event is not written by more than one event creation statement.
  // assign self.RingingExpirationTimer = timer_start::Time(event_inst: ringing_expiration_event, microseconds: 20000000);
  //EATF HACK: Following line uses TIM external entity which is replaced with dummy return literal value.
  this.RingingExpirationTimer = -1;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLmdwJHNEeWgtJmFnQKWjw" name="SessionTimeout">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLmdwpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // generate Call7:'EndCallRcvd' to self;
  send new Call::EndCallRcvd() to this;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLvAoJHNEeWgtJmFnQKWjw" name="InACall">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLvAopHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // assign td = timer_cancel::Time(timer_inst_ref: self.RingingExpirationTimer);
  //EATF HACK: Following line uses TIM external entity which is replaced with dummy return literal value.
  Boolean td = true;
  // select one called related by self->Called[R3];
  Called called = this->'is joined by'.one();
  // select one caller related by self->Caller[R2];
  Caller caller = this->'is initiated by'.one();
  // send PhoneXPort::InitiateCall(UserID: caller.PhoneNumber, ServiceId: Service::GetServiceId());
  send new PhoneXPort::InitiateCall(UserID=>((Subscriber)(caller)).PhoneNumber, ServiceId=>Service::GetServiceId()) to PhoneXPort::instances().one();
  // send PhoneXPort::InitiateCall(UserID: called.PhoneNumber, ServiceId: Service::GetServiceId());
  send new PhoneXPort::InitiateCall(UserID=>((Subscriber)(called)).PhoneNumber, ServiceId=>Service::GetServiceId()) to PhoneXPort::instances().one();
  // generate Subscriber7:'CallAccepted' to caller;
  send new Subscriber::CallAccepted() to caller;
  // generate Subscriber7:'CallAccepted' to called;
  send new Subscriber::CallAccepted() to called;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLvnsJHNEeWgtJmFnQKWjw" name="CallTermination">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLvnspHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one called related by self->Called[R3];
  Called called = this->'is joined by'.one();
  // select one caller related by self->Caller[R2];
  Caller caller = this->'is initiated by'.one();
  // send PhoneXPort::TerminateCall(UserID: caller.PhoneNumber);
  send new PhoneXPort::TerminateCall(UserID=>((Subscriber)(caller)).PhoneNumber) to PhoneXPort::instances().one();
  // send PhoneXPort::TerminateCall(UserID: called.PhoneNumber);
  send new PhoneXPort::TerminateCall(UserID=>((Subscriber)(called)).PhoneNumber) to PhoneXPort::instances().one();
  // generate Subscriber8:'CallEnded' to caller;
  send new Subscriber::CallEnded() to caller;
  // generate Subscriber8:'CallEnded' to called;
  send new Subscriber::CallEnded() to called;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OLvntJHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OLwOwZHNEeWgtJmFnQKWjw" name="_initial"/>
                <subvertex xmi:type="uml:State" xmi:id="_OLw105HNEeWgtJmFnQKWjw" name="VerifyingCaller">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLw11ZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one caller related by self->Caller[R2];
  Caller caller = this->'is initiated by'.one();
  // if empty caller
  if(caller==null) {
    // return;
    return;
  // end if;
  }
  // generate Subscriber9:'StartVerification' to caller;
  send new Subscriber::StartVerification() to caller;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLyD8JHNEeWgtJmFnQKWjw" name="VerifyingCalled">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLyD8pHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one called related by self->Called[R3];
  Called called = this->'is joined by'.one();
  // if empty called
  if(called==null) {
    // return;
    return;
  // end if;
  }
  // generate Subscriber9:'StartVerification' to called;
  send new Subscriber::StartVerification() to called;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLyrAZHNEeWgtJmFnQKWjw" name="HackingAttempt">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLyrA5HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // bridge LogInfo(message: &quot;Hacking attempt - call by either unknown or busy subscriber has been attempted!&quot;);
  LOG::LogInfo(message=>&quot;Hacking attempt - call by either unknown or busy subscriber has been attempted!&quot;);
  // select one caller related by self->Caller[R2];
  Caller caller = this->'is initiated by'.one();
  // send PhoneXPort::TerminateCall(UserID: caller.PhoneNumber);
  send new PhoneXPort::TerminateCall(UserID=>((Subscriber)(caller)).PhoneNumber) to PhoneXPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLzSEJHNEeWgtJmFnQKWjw" name="UnknownNumber">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLzSEpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one caller related by self->Caller[R2];
  Caller caller = this->'is initiated by'.one();
  // send PhoneXPort::UnknownNumber(UserID: caller.PhoneNumber);
  send new PhoneXPort::UnknownNumber(UserID=>((Subscriber)(caller)).PhoneNumber) to PhoneXPort::instances().one();
  // generate Subscriber8:'CallEnded' to caller;
  send new Subscriber::CallEnded() to caller;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLzSFJHNEeWgtJmFnQKWjw" name="LineIsBusy">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLz5IZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one caller related by self->Caller[R2];
  Caller caller = this->'is initiated by'.one();
  // send PhoneXPort::LineIsBusy(UserID: caller.PhoneNumber);
  send new PhoneXPort::LineIsBusy(UserID=>((Subscriber)(caller)).PhoneNumber) to PhoneXPort::instances().one();
  // generate Subscriber8:'CallEnded' to caller;
  send new Subscriber::CallEnded() to caller;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLz5I5HNEeWgtJmFnQKWjw" name="WaitingForCalledReset"/>
                <subvertex xmi:type="uml:State" xmi:id="_OL0gMZHNEeWgtJmFnQKWjw" name="WaitingForCallerReset"/>
                <subvertex xmi:type="uml:State" xmi:id="_OL0gM5HNEeWgtJmFnQKWjw" name="Terminated">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OL0gNZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // transform self.CleanUp();
  this.CleanUp();
  // select one service related by self->Service[R6];
  Service service = this->'is being run / handled by'.one();
  // relate self to service across R6;
  R6::unlink('is being run / handled by'=>service,'handles / runs'=>this);
delete this;</body>
                  </entry>
                </subvertex>
              </region>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OEFggZHNEeWgtJmFnQKWjw" name="CleanUp" method="_OEGHkZHNEeWgtJmFnQKWjw"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OEGuoZHNEeWgtJmFnQKWjw" name="create" isStatic="true" method="_OEHVsJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEHVspHNEeWgtJmFnQKWjw" name="CallerID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEH8wJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEH8wZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEIj05HNEeWgtJmFnQKWjw" name="CalledID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEJK4JHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEJK4ZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEJx85HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEKZAJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEKZAZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMxicpHNEeWgtJmFnQKWjw" name="CallRcvd"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMxid5HNEeWgtJmFnQKWjw" name="CallerBusyOrUnknown"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMyJhJHNEeWgtJmFnQKWjw" name="CallerVerifiedAndSynced"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMywkpHNEeWgtJmFnQKWjw" name="CalledVerifiedAndSynced"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMzXoZHNEeWgtJmFnQKWjw" name="CalledBusy"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMz-sZHNEeWgtJmFnQKWjw" name="CalledUnknown"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM0lwZHNEeWgtJmFnQKWjw" name="EndCallRcvd"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM1M0ZHNEeWgtJmFnQKWjw" name="RingingTimerExpired"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM1z4ZHNEeWgtJmFnQKWjw" name="CallRequestAccepted"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMxidJHNEeWgtJmFnQKWjw" name="CallRcvd" signal="_OMxicpHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMyJgZHNEeWgtJmFnQKWjw" name="CallerBusyOrUnknown" signal="_OMxid5HNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMyJhpHNEeWgtJmFnQKWjw" name="CallerVerifiedAndSynced" signal="_OMyJhJHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMywlJHNEeWgtJmFnQKWjw" name="CalledVerifiedAndSynced" signal="_OMywkpHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMzXo5HNEeWgtJmFnQKWjw" name="CalledBusy" signal="_OMzXoZHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMz-s5HNEeWgtJmFnQKWjw" name="CalledUnknown" signal="_OMz-sZHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM0lw5HNEeWgtJmFnQKWjw" name="EndCallRcvd" signal="_OM0lwZHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM1M05HNEeWgtJmFnQKWjw" name="RingingTimerExpired" signal="_OM1M0ZHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM1z45HNEeWgtJmFnQKWjw" name="CallRequestAccepted" signal="_OM1z4ZHNEeWgtJmFnQKWjw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OC2KYZHNEeWgtJmFnQKWjw" name="Called" classifierBehavior="_OL2VYJHNEeWgtJmFnQKWjw" isActive="true">
            <generalization xmi:type="uml:Generalization" xmi:id="_OE1HY5HNEeWgtJmFnQKWjw" general="_OC8RAJHNEeWgtJmFnQKWjw"/>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OL2VYJHNEeWgtJmFnQKWjw" name="CalledStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OL2VYpHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OL28dJHNEeWgtJmFnQKWjw" name="tr_init" source="_OL28cJHNEeWgtJmFnQKWjw" target="_OL28cpHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ONtWkpHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber1_2" source="_OL28dpHNEeWgtJmFnQKWjw" target="_OL3jg5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONtWlJHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber1_2_trigger" event="_OM43M5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONt9oJHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber1_2" source="_OL28cpHNEeWgtJmFnQKWjw" target="_OL3jg5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONt9opHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber1_2_trigger" event="_OM43M5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONt9o5HNEeWgtJmFnQKWjw" name="TXN_1_Subscriber2_3" source="_OL28dpHNEeWgtJmFnQKWjw" target="_OMDwwZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONuksZHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber2_3_trigger" event="_OM5eQJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONukspHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber2_3" source="_OL28cpHNEeWgtJmFnQKWjw" target="_OMDwwZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONuktJHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber2_3_trigger" event="_OM5eQJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONuktZHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber3_4" source="_OL28dpHNEeWgtJmFnQKWjw" target="_OMEX0ZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONvLwZHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber3_4_trigger" event="_OM5eRZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONvLwpHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber3_4" source="_OL28cpHNEeWgtJmFnQKWjw" target="_OMEX0ZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONvLxJHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber3_4_trigger" event="_OM5eRZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONvLxZHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber9_1" source="_OL28dpHNEeWgtJmFnQKWjw" target="_OL28dpHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONvy0ZHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber9_1_trigger" event="_OM8hkJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONvy0pHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber9_1" source="_OL28cpHNEeWgtJmFnQKWjw" target="_OL28dpHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONvy1JHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber9_1_trigger" event="_OM8hkJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONvy1ZHNEeWgtJmFnQKWjw" name="TXN_2_Subscriber5_6" source="_OL3jg5HNEeWgtJmFnQKWjw" target="_OME-4ZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONwZ4ZHNEeWgtJmFnQKWjw" name="TXN_2_Subscriber5_6_trigger" event="_OM6sYZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONwZ4pHNEeWgtJmFnQKWjw" name="TXN_2_Subscriber4_5" source="_OL3jg5HNEeWgtJmFnQKWjw" target="_OMFl8ZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONwZ5JHNEeWgtJmFnQKWjw" name="TXN_2_Subscriber4_5_trigger" event="_OM6FU5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONwZ5ZHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber7_7" source="_OMFl8ZHNEeWgtJmFnQKWjw" target="_OMGNAZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONxA8ZHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber7_7_trigger" event="_OM7Tc5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONxA8pHNEeWgtJmFnQKWjw" name="TXN_7_Subscriber8_8" source="_OMGNAZHNEeWgtJmFnQKWjw" target="_OMGNA5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONxoAJHNEeWgtJmFnQKWjw" name="TXN_7_Subscriber8_8_trigger" event="_OM76gZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONxoAZHNEeWgtJmFnQKWjw" name="TXN_8_Subscriber5_6" source="_OMGNA5HNEeWgtJmFnQKWjw" target="_OME-4ZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONxoA5HNEeWgtJmFnQKWjw" name="TXN_8_Subscriber5_6_trigger" event="_OM6sYZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONxoBJHNEeWgtJmFnQKWjw" name="TXN_8_Subscriber4_9" source="_OMGNA5HNEeWgtJmFnQKWjw" target="_OMG0E5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONyPEZHNEeWgtJmFnQKWjw" name="TXN_8_Subscriber4_9_trigger" event="_OM6FU5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONyPEpHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber6_8" source="_OMFl8ZHNEeWgtJmFnQKWjw" target="_OMGNA5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONyPFJHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber6_8_trigger" event="_OM6sZpHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONy2IJHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber8_8" source="_OMFl8ZHNEeWgtJmFnQKWjw" target="_OMGNA5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONy2IpHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber8_8_trigger" event="_OM76gZHNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OL28cJHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OL28cpHNEeWgtJmFnQKWjw" name="_initial"/>
                <subvertex xmi:type="uml:State" xmi:id="_OL28dpHNEeWgtJmFnQKWjw" name="Unchecked">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OL3jgZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send DBPort::GetUserStatus(ServiceId: Service::GetServiceId(), UserId: self.PhoneNumber);
  send new DBPort::GetUserStatus(ServiceId=>Service::GetServiceId(), UserId=>((Subscriber)(this)).PhoneNumber) to DBPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OL3jg5HNEeWgtJmFnQKWjw" name="Free">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMCioZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send DBPort::SetUserStatus(ServiceId: Service::GetServiceId(), UserId: self.PhoneNumber, isBusy: TRUE, isRemovingNow: FALSE);
  send new DBPort::SetUserStatus(ServiceId=>Service::GetServiceId(), UserId=>((Subscriber)(this)).PhoneNumber, isBusy=>true, isRemovingNow=>false) to DBPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMDwwZHNEeWgtJmFnQKWjw" name="LineIsBusy">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMDww5HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one call related by self->Call[R3];
  Call call = this->'joins'.one();
  // generate Call5:'CalledBusy' to call;
  send new Call::CalledBusy() to call;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMEX0ZHNEeWgtJmFnQKWjw" name="UnknownNumber">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMEX05HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one call related by self->Call[R3];
  Call call = this->'joins'.one();
  // generate Call6:'CalledUnknown' to call;
  send new Call::CalledUnknown() to call;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OME-4ZHNEeWgtJmFnQKWjw" name="StatusUpdateFailed">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OME-45HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // bridge LogFailure(message: &quot;Update of the user status to DB failed!&quot;);
  LOG::LogFailure(message=>&quot;Update of the user status to DB failed!&quot;);
  // select one call related by self->Call[R3];
  Call call = this->'joins'.one();
  // generate Call7:'EndCallRcvd' to call;
  send new Call::EndCallRcvd() to call;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMFl8ZHNEeWgtJmFnQKWjw" name="ReceivingCallRequest">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMFl85HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one call related by self->Call[R3];
  Call call = this->'joins'.one();
  // generate Call4:'CalledVerifiedAndSynced' to call;
  send new Call::CalledVerifiedAndSynced() to call;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMGNAZHNEeWgtJmFnQKWjw" name="InACall"/>
                <subvertex xmi:type="uml:State" xmi:id="_OMGNA5HNEeWgtJmFnQKWjw" name="TerminatingCall">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMG0EZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send DBPort::SetUserStatus(ServiceId: Service::GetServiceId(), UserId: self.PhoneNumber, isBusy: FALSE, isRemovingNow: FALSE);
  send new DBPort::SetUserStatus(ServiceId=>Service::GetServiceId(), UserId=>((Subscriber)(this)).PhoneNumber, isBusy=>false, isRemovingNow=>false) to DBPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMG0E5HNEeWgtJmFnQKWjw" name="Terminated">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMHbIZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one call related by self->Call[R3];
  Call call = this->'joins'.one();
  // generate Call4:'CalledVerifiedAndSynced' to call;
  send new Call::CalledVerifiedAndSynced() to call;
</body>
                  </entry>
                </subvertex>
              </region>
            </ownedBehavior>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OC3YgZHNEeWgtJmFnQKWjw" name="Caller" classifierBehavior="_OMHbI5HNEeWgtJmFnQKWjw" isActive="true">
            <generalization xmi:type="uml:Generalization" xmi:id="_OE1ucZHNEeWgtJmFnQKWjw" general="_OC8RAJHNEeWgtJmFnQKWjw"/>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OMHbI5HNEeWgtJmFnQKWjw" name="CallerStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OMICMZHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OMIpQpHNEeWgtJmFnQKWjw" name="tr_init" source="_OMICM5HNEeWgtJmFnQKWjw" target="_OMIpQJHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ONy2I5HNEeWgtJmFnQKWjw" name="TXN_1_Subscriber9_1" source="_OMIpRJHNEeWgtJmFnQKWjw" target="_OMIpRJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONzdMJHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber9_1_trigger" event="_OM8hkJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONzdMZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber9_1" source="_OMIpQJHNEeWgtJmFnQKWjw" target="_OMIpRJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONzdM5HNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber9_1_trigger" event="_OM8hkJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONzdNJHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber1_2" source="_OMIpRJHNEeWgtJmFnQKWjw" target="_OMJ3YZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON0EQJHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber1_2_trigger" event="_OM43M5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON0EQZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber1_2" source="_OMIpQJHNEeWgtJmFnQKWjw" target="_OMJ3YZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON0EQ5HNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber1_2_trigger" event="_OM43M5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON0ERJHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber2_3" source="_OMIpRJHNEeWgtJmFnQKWjw" target="_OMKecZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON0rUZHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber2_3_trigger" event="_OM5eQJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON0rUpHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber2_3" source="_OMIpQJHNEeWgtJmFnQKWjw" target="_OMKecZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON1SYJHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber2_3_trigger" event="_OM5eQJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON1SYZHNEeWgtJmFnQKWjw" name="TXN_1_Subscriber3_4" source="_OMIpRJHNEeWgtJmFnQKWjw" target="_OMP-AZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON1SY5HNEeWgtJmFnQKWjw" name="TXN_1_Subscriber3_4_trigger" event="_OM5eRZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON1SZJHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber3_4" source="_OMIpQJHNEeWgtJmFnQKWjw" target="_OMP-AZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON15cZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_Subscriber3_4_trigger" event="_OM5eRZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON15cpHNEeWgtJmFnQKWjw" name="TXN_2_Subscriber4_5" source="_OMJ3YZHNEeWgtJmFnQKWjw" target="_OMQlE5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON15dJHNEeWgtJmFnQKWjw" name="TXN_2_Subscriber4_5_trigger" event="_OM6FU5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON15dZHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber7_6" source="_OMQlE5HNEeWgtJmFnQKWjw" target="_OMRMI5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON2ggZHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber7_6_trigger" event="_OM7Tc5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON2ggpHNEeWgtJmFnQKWjw" name="TXN_6_Subscriber8_7" source="_OMRMI5HNEeWgtJmFnQKWjw" target="_OMRzMZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON2ghJHNEeWgtJmFnQKWjw" name="TXN_6_Subscriber8_7_trigger" event="_OM76gZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON3HkJHNEeWgtJmFnQKWjw" name="TXN_7_Subscriber4_8" source="_OMRzMZHNEeWgtJmFnQKWjw" target="_OMSaQZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON3HkpHNEeWgtJmFnQKWjw" name="TXN_7_Subscriber4_8_trigger" event="_OM6FU5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON3Hk5HNEeWgtJmFnQKWjw" name="TXN_2_Subscriber5_9" source="_OMJ3YZHNEeWgtJmFnQKWjw" target="_OMToYJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON3uoJHNEeWgtJmFnQKWjw" name="TXN_2_Subscriber5_9_trigger" event="_OM6sYZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON3uoZHNEeWgtJmFnQKWjw" name="TXN_7_Subscriber5_9" source="_OMRzMZHNEeWgtJmFnQKWjw" target="_OMToYJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON3uo5HNEeWgtJmFnQKWjw" name="TXN_7_Subscriber5_9_trigger" event="_OM6sYZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON3upJHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber6_7" source="_OMQlE5HNEeWgtJmFnQKWjw" target="_OMRzMZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON4VsZHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber6_7_trigger" event="_OM6sZpHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON4VspHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber8_7" source="_OMQlE5HNEeWgtJmFnQKWjw" target="_OMRzMZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON4VtJHNEeWgtJmFnQKWjw" name="TXN_5_Subscriber8_7_trigger" event="_OM76gZHNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OMICM5HNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OMIpQJHNEeWgtJmFnQKWjw" name="_initial"/>
                <subvertex xmi:type="uml:State" xmi:id="_OMIpRJHNEeWgtJmFnQKWjw" name="Unchecked">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMJQUZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send DBPort::GetUserStatus(ServiceId: Service::GetServiceId(), UserId: self.PhoneNumber);
  DBPort dbport = DBPort::instances().one();
  if(dbport == null) {
  	dbport = new DBPort();
  }
  send new DBPort::GetUserStatus(ServiceId=>Service::GetServiceId(), UserId=>((Subscriber)(this)).PhoneNumber) to dbport;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMJ3YZHNEeWgtJmFnQKWjw" name="Free">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMJ3Y5HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send DBPort::SetUserStatus(ServiceId: Service::GetServiceId(), UserId: self.PhoneNumber, isBusy: TRUE, isRemovingNow: FALSE);
  send new DBPort::SetUserStatus(ServiceId=>Service::GetServiceId(), UserId=>((Subscriber)(this)).PhoneNumber, isBusy=>true, isRemovingNow=>false) to DBPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMKecZHNEeWgtJmFnQKWjw" name="AlreadyBusy">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMLFgZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one call related by self->Call[R2];
  Call call = this->'initiates'.one();
  // generate Call2:'CallerBusyOrUnknown' to call;
  send new Call::CallerBusyOrUnknown() to call;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMP-AZHNEeWgtJmFnQKWjw" name="Unknown">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMQlEZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one call related by self->Call[R2];
  Call call = this->'initiates'.one();
  // generate Call2:'CallerBusyOrUnknown' to call;
  send new Call::CallerBusyOrUnknown() to call;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMQlE5HNEeWgtJmFnQKWjw" name="ReadyToInitiateCall">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMRMIZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one call related by self->Call[R2];
  Call call = this->'initiates'.one();
  // generate Call3:'CallerVerifiedAndSynced' to call;
  send new Call::CallerVerifiedAndSynced() to call;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMRMI5HNEeWgtJmFnQKWjw" name="InACall"/>
                <subvertex xmi:type="uml:State" xmi:id="_OMRzMZHNEeWgtJmFnQKWjw" name="TerminatingCall">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMRzM5HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send DBPort::SetUserStatus(ServiceId: Service::GetServiceId(), UserId: self.PhoneNumber, isBusy: FALSE, isRemovingNow: FALSE);
  send new DBPort::SetUserStatus(ServiceId=>Service::GetServiceId(), UserId=>((Subscriber)(this)).PhoneNumber, isBusy=>false, isRemovingNow=>false) to DBPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMSaQZHNEeWgtJmFnQKWjw" name="Terminated">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMTBUJHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one call related by self->Call[R2];
  Call call = this->'initiates'.one();
  // generate Call3:'CallerVerifiedAndSynced' to call;
  send new Call::CallerVerifiedAndSynced() to call;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMToYJHNEeWgtJmFnQKWjw" name="UpdateStatusFailed-Hanging">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMToYpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one call related by self->Call[R2];
  Call call = this->'initiates'.one();
  // generate Call7:'EndCallRcvd' to call;
  send new Call::EndCallRcvd() to call;
</body>
                  </entry>
                </subvertex>
              </region>
            </ownedBehavior>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OC4moZHNEeWgtJmFnQKWjw" name="RegisteredSubscriber" classifierBehavior="_OMUPcZHNEeWgtJmFnQKWjw" isActive="true">
            <generalization xmi:type="uml:Generalization" xmi:id="_OE1uc5HNEeWgtJmFnQKWjw" general="_OC8RAJHNEeWgtJmFnQKWjw"/>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OMUPcZHNEeWgtJmFnQKWjw" name="RegisteredSubscriberStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OMUPc5HNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OMZvAZHNEeWgtJmFnQKWjw" name="tr_init" source="_OMU2gJHNEeWgtJmFnQKWjw" target="_OMU2gpHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ON4VtZHNEeWgtJmFnQKWjw" name="TXN_1_RegisteredSubscriber1_1" source="_OMU2gpHNEeWgtJmFnQKWjw" target="_OMU2gpHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON48wZHNEeWgtJmFnQKWjw" name="TXN_1_RegisteredSubscriber1_1_trigger" event="_OM2a9ZHNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OMU2gJHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OMU2gpHNEeWgtJmFnQKWjw" name="workaround"/>
              </region>
            </ownedBehavior>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM2a8ZHNEeWgtJmFnQKWjw" name="ev1"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM2a85HNEeWgtJmFnQKWjw" name="ev1" signal="_OM2a8ZHNEeWgtJmFnQKWjw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OC50wJHNEeWgtJmFnQKWjw" name="RegistrationProcess" classifierBehavior="_OMZvA5HNEeWgtJmFnQKWjw" isActive="true">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OEMOMZHNEeWgtJmFnQKWjw" name="create$method$1" specification="_OELnIJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEQfoJHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEQfoZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEQfopHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OESU0ZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OESU0pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OESU05HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <language>rALF</language>
              <body>  // create object instance unregsub of UnregisteredSubscriber;
  UnregisteredSubscriber unregsub = new UnregisteredSubscriber();
  // assign sub.PhoneNumber = param.UserID;
  unregsub.PhoneNumber = UserID;
  // create object instance regprocess of RegistrationProcess;
  RegistrationProcess regprocess = new RegistrationProcess();
  // select any service from instances of Service;
  Service service = Service::instances().one();
  // if empty service
  if(service==null) {
    // create object instance service of Service;
    service = new Service();
    // assign service.ServiceId = 0;
    service.ServiceId = 0;
  // end if;
  }
  // relate unregprocess to service across R8;
  R7::link('is run by'=>service,'runs'=>regprocess);
  // relate regsub to unregprocess across R5;
  R4::link('is registered through'=>regprocess,'registers'=>unregsub);
  // generate UnregistrationProcess1:'UnregistrationRequestRcvd' to unregprocess;
  send new RegistrationProcess::RegistrationRequestRcvd() to regprocess;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OMZvA5HNEeWgtJmFnQKWjw" name="RegistrationProcessStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OMaWEJHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OMbkM5HNEeWgtJmFnQKWjw" name="tr_init" source="_OMa9IZHNEeWgtJmFnQKWjw" target="_OMbkMZHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ON48wpHNEeWgtJmFnQKWjw" name="TXN_1_RegistrationProcess2_2" source="_OMcLQJHNEeWgtJmFnQKWjw" target="_OMeAcZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON48xJHNEeWgtJmFnQKWjw" name="TXN_1_RegistrationProcess2_2_trigger" event="_OM3pEpHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON5j0JHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_RegistrationProcess2_2" source="_OMbkMZHNEeWgtJmFnQKWjw" target="_OMeAcZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON5j0pHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_RegistrationProcess2_2_trigger" event="_OM3pEpHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON5j05HNEeWgtJmFnQKWjw" name="TXN_1_RegistrationProcess3_3" source="_OMcLQJHNEeWgtJmFnQKWjw" target="_OMhq0JHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON5j1ZHNEeWgtJmFnQKWjw" name="TXN_1_RegistrationProcess3_3_trigger" event="_OM4QIJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON6K4JHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_RegistrationProcess3_3" source="_OMbkMZHNEeWgtJmFnQKWjw" target="_OMhq0JHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON6K4pHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_RegistrationProcess3_3_trigger" event="_OM4QIJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON6K45HNEeWgtJmFnQKWjw" name="TXN_1_RegistrationProcess1_1" source="_OMcLQJHNEeWgtJmFnQKWjw" target="_OMcLQJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON6x8JHNEeWgtJmFnQKWjw" name="TXN_1_RegistrationProcess1_1_trigger" event="_OM3CBJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON6x8ZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_RegistrationProcess1_1" source="_OMbkMZHNEeWgtJmFnQKWjw" target="_OMcLQJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON6x85HNEeWgtJmFnQKWjw" name="from_initial_TXN_1_RegistrationProcess1_1_trigger" event="_OM3CBJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON6x9JHNEeWgtJmFnQKWjw" name="TXN_3_RegistrationProcess4_4" source="_OMhq0JHNEeWgtJmFnQKWjw" target="_OMaWEpHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON7ZAZHNEeWgtJmFnQKWjw" name="TXN_3_RegistrationProcess4_4_trigger" event="_OM4QJZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON7ZApHNEeWgtJmFnQKWjw" name="TXN_2_RegistrationProcess4_4" source="_OMeAcZHNEeWgtJmFnQKWjw" target="_OMaWEpHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON7ZBJHNEeWgtJmFnQKWjw" name="TXN_2_RegistrationProcess4_4_trigger" event="_OM4QJZHNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_OMaWEpHNEeWgtJmFnQKWjw" name="Terminated">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMaWFJHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one unregsub related by self->UnregisteredSubscriber[R4];
  UnregisteredSubscriber unregsub = this->'registers'.one();
  // select one sub related by unregsub->Subscriber[R1];
  Subscriber sub = ((Subscriber)(unregsub));
  // unrelate sub from unregsub across R1;
  // Unrelation across generalization is not needed anymore.
  // relate unregsub to self across R4;
  R4::unlink('is registered through'=>this,'registers'=>unregsub);
  // delete object instance unregsub;
  delete unregsub;
  // delete object instance sub;
  //Superclass instance does not need to be deleted.
  //sub.destroy();
  // select any service from instances of Service;
  Service service = Service::instances().one();
  // if not empty service
  if(!(service==null)) {
    // relate self to service across R7;
    R7::unlink('is run by'=>service,'runs'=>this);
  // end if;
  }
delete this;</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OMa9IZHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OMbkMZHNEeWgtJmFnQKWjw" name="_initial"/>
                <subvertex xmi:type="uml:State" xmi:id="_OMcLQJHNEeWgtJmFnQKWjw" name="RegistrationStarted">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMcLQpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one unregsub related by self->UnregisteredSubscriber[R4];
  UnregisteredSubscriber unregsub = this->'registers'.one();
  // send DBPort::AddUserIfNotExist(ServiceId: Service::GetServiceId(), UserId: unregsub.PhoneNumber);
  send new DBPort::AddUserIfNotExist(ServiceId=>Service::GetServiceId(), UserId=>((Subscriber)(unregsub)).PhoneNumber) to DBPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMeAcZHNEeWgtJmFnQKWjw" name="RegistrationSuccesfull">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMgcsJHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one unregsub related by self->UnregisteredSubscriber[R4];
  UnregisteredSubscriber unregsub = this->'registers'.one();
  // send PhoneXPort::RegistrationResult(UserID: unregsub.PhoneNumber, isSuccessfull: TRUE);
  send new PhoneXPort::RegistrationResult(UserID=>((Subscriber)(unregsub)).PhoneNumber, isSuccessfull=>true) to PhoneXPort::instances().one();
  // generate RegistrationProcess4:'TerminateCmd' to self;
  send new RegistrationProcess::TerminateCmd() to this;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMhq0JHNEeWgtJmFnQKWjw" name="RegistrationFailed">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMiR4ZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one unregsub related by self->UnregisteredSubscriber[R4];
  UnregisteredSubscriber unregsub = this->'registers'.one();
  // send PhoneXPort::RegistrationResult(UserID: unregsub.PhoneNumber, isSuccessfull: FALSE);
  send new PhoneXPort::RegistrationResult(UserID=>((Subscriber)(unregsub)).PhoneNumber, isSuccessfull=>false) to PhoneXPort::instances().one();
  // generate RegistrationProcess4:'TerminateCmd' to self;
  send new RegistrationProcess::TerminateCmd() to this;
</body>
                  </entry>
                </subvertex>
              </region>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OELnIJHNEeWgtJmFnQKWjw" name="create" isStatic="true" method="_OEMOMZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OENcUJHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEOqcJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEOqcZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OERtwJHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OERtwZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OERtwpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM3CAJHNEeWgtJmFnQKWjw" name="RegistrationRequestRcvd"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM3CBZHNEeWgtJmFnQKWjw" name="RegistrationConfirmed"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM3pE5HNEeWgtJmFnQKWjw" name="RegistrationNotConfirmed"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM4QIZHNEeWgtJmFnQKWjw" name="TerminateCmd"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM3CApHNEeWgtJmFnQKWjw" name="RegistrationRequestRcvd" signal="_OM3CAJHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM3pEJHNEeWgtJmFnQKWjw" name="RegistrationConfirmed" signal="_OM3CBZHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM3pFZHNEeWgtJmFnQKWjw" name="RegistrationNotConfirmed" signal="_OM3pE5HNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM4QI5HNEeWgtJmFnQKWjw" name="TerminateCmd" signal="_OM4QIZHNEeWgtJmFnQKWjw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OC7C4ZHNEeWgtJmFnQKWjw" name="Service">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODr34JHNEeWgtJmFnQKWjw" name="ServiceId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODr34ZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODr34pHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OEVYIJHNEeWgtJmFnQKWjw" name="GetServiceId$method$1" specification="_OETi8JHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEWmQZHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEWmQpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEXNUJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <language>rALF</language>
              <body>  // select any service from instances of Service;
  Service service = Service::instances().one();
  // if empty service
  if(service==null) {
    // create object instance service of Service;
    service = new Service();
    // assign service.ServiceId = 0;
    service.ServiceId = 0;
  // end if;
  }
  // return service.ServiceId;
  return service.ServiceId;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OEX0YpHNEeWgtJmFnQKWjw" name="SetServiceId$method$1" specification="_OEX0YJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEZpkJHNEeWgtJmFnQKWjw" name="serviceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEZpkZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEaQoJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <language>rALF</language>
              <body>  // select any service from instances of Service;
  Service service = Service::instances().one();
  // if empty service
  if(service==null) {
    // create object instance service of Service;
    service = new Service();
  // end if;
  }
  // assign service.ServiceId = param.serviceId;
  service.ServiceId = serviceId;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OETi8JHNEeWgtJmFnQKWjw" name="GetServiceId" isStatic="true" method="_OEVYIJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEV_MZHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEV_MpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEV_M5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OEX0YJHNEeWgtJmFnQKWjw" name="SetServiceId" isStatic="true" method="_OEX0YpHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEYbcZHNEeWgtJmFnQKWjw" name="serviceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEYbcpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEZCgJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OC8RAJHNEeWgtJmFnQKWjw" name="Subscriber" isAbstract="true" isActive="true">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODtGAJHNEeWgtJmFnQKWjw" name="PhoneNumber">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODtGAZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODtGApHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM4QJpHNEeWgtJmFnQKWjw" name="UserStatusFree"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM43NJHNEeWgtJmFnQKWjw" name="UserStatusBusy"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM5eQZHNEeWgtJmFnQKWjw" name="UserStatusUnknown"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM5eRpHNEeWgtJmFnQKWjw" name="UserUpdateSuccess"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM6FVJHNEeWgtJmFnQKWjw" name="UserUpdateFail"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM6sYpHNEeWgtJmFnQKWjw" name="CallRejected"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM6sZ5HNEeWgtJmFnQKWjw" name="CallAccepted"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM7TdJHNEeWgtJmFnQKWjw" name="CallEnded"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM76gpHNEeWgtJmFnQKWjw" name="StartVerification"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM43MZHNEeWgtJmFnQKWjw" name="UserStatusFree" signal="_OM4QJpHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM43NpHNEeWgtJmFnQKWjw" name="UserStatusBusy" signal="_OM43NJHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM5eQ5HNEeWgtJmFnQKWjw" name="UserStatusUnknown" signal="_OM5eQZHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM6FUZHNEeWgtJmFnQKWjw" name="UserUpdateSuccess" signal="_OM5eRpHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM6FVpHNEeWgtJmFnQKWjw" name="UserUpdateFail" signal="_OM6FVJHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM6sZJHNEeWgtJmFnQKWjw" name="CallRejected" signal="_OM6sYpHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM7TcZHNEeWgtJmFnQKWjw" name="CallAccepted" signal="_OM6sZ5HNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM7TdpHNEeWgtJmFnQKWjw" name="CallEnded" signal="_OM7TdJHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM76hJHNEeWgtJmFnQKWjw" name="StartVerification" signal="_OM76gpHNEeWgtJmFnQKWjw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OC84EZHNEeWgtJmFnQKWjw" name="UnregisteredSubscriber" classifierBehavior="_OMiR45HNEeWgtJmFnQKWjw" isActive="true">
            <generalization xmi:type="uml:Generalization" xmi:id="_OE2VgJHNEeWgtJmFnQKWjw" general="_OC8RAJHNEeWgtJmFnQKWjw"/>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OMiR45HNEeWgtJmFnQKWjw" name="UnregisteredSubscriberStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OMi48ZHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OMjgApHNEeWgtJmFnQKWjw" name="tr_init" source="_OMi485HNEeWgtJmFnQKWjw" target="_OMjgAJHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ON7ZBZHNEeWgtJmFnQKWjw" name="TXN_1_UnregisteredSubscriber1_1" source="_OMjgAJHNEeWgtJmFnQKWjw" target="_OMjgAJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON8AEZHNEeWgtJmFnQKWjw" name="TXN_1_UnregisteredSubscriber1_1_trigger" event="_OM8hlZHNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OMi485HNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OMjgAJHNEeWgtJmFnQKWjw" name="workaround"/>
              </region>
            </ownedBehavior>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM8hkZHNEeWgtJmFnQKWjw" name="ev1"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM8hk5HNEeWgtJmFnQKWjw" name="ev1" signal="_OM8hkZHNEeWgtJmFnQKWjw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OC-GMJHNEeWgtJmFnQKWjw" name="UnregistrationProcess" classifierBehavior="_OMjgBJHNEeWgtJmFnQKWjw" isActive="true">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OEbewJHNEeWgtJmFnQKWjw" name="create$method$1" specification="_OEa3sJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEcs4JHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEcs4ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEcs4pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <language>rALF</language>
              <body>  // create object instance regsub of RegisteredSubscriber;
  RegisteredSubscriber regsub = new RegisteredSubscriber();
  // assign sub.PhoneNumber = param.UserID;
  regsub.PhoneNumber = UserID;
  // create object instance unregprocess of UnregistrationProcess;
  UnregistrationProcess unregprocess = new UnregistrationProcess();
  // select any service from instances of Service;
  Service service = Service::instances().one();
  // if empty service
  if(service==null) {
    // create object instance service of Service;
    service = new Service();
    // assign service.ServiceId = 0;
    service.ServiceId = 0;
  // end if;
  }
  // relate unregprocess to service across R8;
  R8::link('is run by'=>service,'runs'=>unregprocess);
  // relate regsub to unregprocess across R5;
  R5::link('is unregistered through'=>unregprocess,'unregisters'=>regsub);
  // generate UnregistrationProcess1:'UnregistrationRequestRcvd' to unregprocess;
  send new UnregistrationProcess::UnregistrationRequestRcvd() to unregprocess;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OMjgBJHNEeWgtJmFnQKWjw" name="UnregistrationProcessStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OMkHEZHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OMlVMpHNEeWgtJmFnQKWjw" name="tr_init" source="_OMkuIZHNEeWgtJmFnQKWjw" target="_OMlVMJHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ON8AEpHNEeWgtJmFnQKWjw" name="TXN_1_UnregistrationProcess2_2" source="_OMlVNJHNEeWgtJmFnQKWjw" target="_OMl8QpHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON8AFJHNEeWgtJmFnQKWjw" name="TXN_1_UnregistrationProcess2_2_trigger" event="_OM9Ip5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON8AFZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_UnregistrationProcess2_2" source="_OMlVMJHNEeWgtJmFnQKWjw" target="_OMl8QpHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON8nIZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_UnregistrationProcess2_2_trigger" event="_OM9Ip5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON8nIpHNEeWgtJmFnQKWjw" name="TXN_1_UnregistrationProcess3_3" source="_OMlVNJHNEeWgtJmFnQKWjw" target="_OMmjUZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON9OMZHNEeWgtJmFnQKWjw" name="TXN_1_UnregistrationProcess3_3_trigger" event="_OM9vtJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON91QJHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_UnregistrationProcess3_3" source="_OMlVMJHNEeWgtJmFnQKWjw" target="_OMmjUZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON91QpHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_UnregistrationProcess3_3_trigger" event="_OM9vtJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON91Q5HNEeWgtJmFnQKWjw" name="TXN_2_UnregistrationProcess4_4" source="_OMl8QpHNEeWgtJmFnQKWjw" target="_OMkHE5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON-cUJHNEeWgtJmFnQKWjw" name="TXN_2_UnregistrationProcess4_4_trigger" event="_OM-WwZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON-cUZHNEeWgtJmFnQKWjw" name="TXN_3_UnregistrationProcess4_4" source="_OMmjUZHNEeWgtJmFnQKWjw" target="_OMkHE5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON-cU5HNEeWgtJmFnQKWjw" name="TXN_3_UnregistrationProcess4_4_trigger" event="_OM-WwZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON-cVJHNEeWgtJmFnQKWjw" name="TXN_1_UnregistrationProcess1_1" source="_OMlVNJHNEeWgtJmFnQKWjw" target="_OMlVNJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON_DYJHNEeWgtJmFnQKWjw" name="TXN_1_UnregistrationProcess1_1_trigger" event="_OM9IopHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ON_DYZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_UnregistrationProcess1_1" source="_OMlVMJHNEeWgtJmFnQKWjw" target="_OMlVNJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ON_DY5HNEeWgtJmFnQKWjw" name="from_initial_TXN_1_UnregistrationProcess1_1_trigger" event="_OM9IopHNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_OMkHE5HNEeWgtJmFnQKWjw" name="Terminated">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMkHFZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one regsub related by self->RegisteredSubscriber[R5];
  RegisteredSubscriber regsub = this->'unregisters'.one();
  // select one sub related by regsub->Subscriber[R1];
  Subscriber sub = ((Subscriber)(regsub));
  // unrelate sub from regsub across R1;
  // Unrelation across generalization is not needed anymore.
  // relate regsub to self across R5;
  R5::unlink('is unregistered through'=>this,'unregisters'=>regsub);
  // delete object instance regsub;
  delete regsub;
  // delete object instance sub;
  //Superclass instance does not need to be deleted.
  //sub.destroy();
  // select any service from instances of Service;
  Service service = Service::instances().one();
  // if not empty service
  if(!(service==null)) {
    // relate self to service across R8;
    R8::unlink('is run by'=>service,'runs'=>this);
  // end if;
  }
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OMkuIZHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OMlVMJHNEeWgtJmFnQKWjw" name="_initial"/>
                <subvertex xmi:type="uml:State" xmi:id="_OMlVNJHNEeWgtJmFnQKWjw" name="UnregistrationStarted">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMl8QJHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one regsub related by self->RegisteredSubscriber[R5];
  RegisteredSubscriber regsub = this->'unregisters'.one();
  // send DBPort::RemoveUserIfExist(ServiceId: Service::GetServiceId(), UserId: regsub.PhoneNumber);
  send new DBPort::RemoveUserIfExist(ServiceId=>Service::GetServiceId(), UserId=>((Subscriber)(regsub)).PhoneNumber) to DBPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMl8QpHNEeWgtJmFnQKWjw" name="UnregistrationSuccessfull">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMl8RJHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one regsub related by self->RegisteredSubscriber[R5];
  RegisteredSubscriber regsub = this->'unregisters'.one();
  // send PhoneXPort::UnregistrationResult(UserID: regsub.PhoneNumber, isSuccessfull: TRUE);
  send new PhoneXPort::UnregistrationResult(UserID=>((Subscriber)(regsub)).PhoneNumber, isSuccessfull=>true) to PhoneXPort::instances().one();
  // generate UnregistrationProcess4:'TerminateCmd' to self;
  send new UnregistrationProcess::TerminateCmd() to this;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OMmjUZHNEeWgtJmFnQKWjw" name="UnregistrationFailed">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OMmjU5HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one regsub related by self->RegisteredSubscriber[R5];
  RegisteredSubscriber regsub = this->'unregisters'.one();
  // send PhoneXPort::UnregistrationResult(UserID: regsub.PhoneNumber, isSuccessfull: FALSE);
  send new PhoneXPort::UnregistrationResult(UserID=>((Subscriber)(regsub)).PhoneNumber, isSuccessfull=>false) to PhoneXPort::instances().one();
  // generate UnregistrationProcess4:'TerminateCmd' to self;
  send new UnregistrationProcess::TerminateCmd() to this;
</body>
                  </entry>
                </subvertex>
              </region>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OEa3sJHNEeWgtJmFnQKWjw" name="create" isStatic="true" method="_OEbewJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEcF0JHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEcF0ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEcF0pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM8hlpHNEeWgtJmFnQKWjw" name="UnregistrationRequestRcvd"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM9Io5HNEeWgtJmFnQKWjw" name="UnregistrationConfirmed"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM9vsJHNEeWgtJmFnQKWjw" name="UnregistrationNotConfirmed"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OM9vtZHNEeWgtJmFnQKWjw" name="TerminateCmd"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM9IoJHNEeWgtJmFnQKWjw" name="UnregistrationRequestRcvd" signal="_OM8hlpHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM9IpZHNEeWgtJmFnQKWjw" name="UnregistrationConfirmed" signal="_OM9Io5HNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM9vspHNEeWgtJmFnQKWjw" name="UnregistrationNotConfirmed" signal="_OM9vsJHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OM9vt5HNEeWgtJmFnQKWjw" name="TerminateCmd" signal="_OM9vtZHNEeWgtJmFnQKWjw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_OEkBoJHNEeWgtJmFnQKWjw" name="R3" memberEnd="_OEkBopHNEeWgtJmFnQKWjw _OEkosZHNEeWgtJmFnQKWjw" navigableOwnedEnd="_OEkBopHNEeWgtJmFnQKWjw _OEkosZHNEeWgtJmFnQKWjw">
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEkBopHNEeWgtJmFnQKWjw" name="is joined by" type="_OC2KYZHNEeWgtJmFnQKWjw" association="_OEkBoJHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEkBo5HNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEkBpJHNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEkosZHNEeWgtJmFnQKWjw" name="joins" type="_OC08QJHNEeWgtJmFnQKWjw" association="_OEkBoJHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEkospHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEkos5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_OEl20JHNEeWgtJmFnQKWjw" name="R2" memberEnd="_OEl20pHNEeWgtJmFnQKWjw _OEmd4ZHNEeWgtJmFnQKWjw" navigableOwnedEnd="_OEl20pHNEeWgtJmFnQKWjw _OEmd4ZHNEeWgtJmFnQKWjw">
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEl20pHNEeWgtJmFnQKWjw" name="is initiated by" type="_OC3YgZHNEeWgtJmFnQKWjw" association="_OEl20JHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEl205HNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEl21JHNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEmd4ZHNEeWgtJmFnQKWjw" name="initiates" type="_OC08QJHNEeWgtJmFnQKWjw" association="_OEl20JHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEmd4pHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEnE8JHNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_OEoTEJHNEeWgtJmFnQKWjw" name="R6" memberEnd="_OEoTEpHNEeWgtJmFnQKWjw _OEo6IpHNEeWgtJmFnQKWjw" navigableOwnedEnd="_OEoTEpHNEeWgtJmFnQKWjw _OEo6IpHNEeWgtJmFnQKWjw">
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEoTEpHNEeWgtJmFnQKWjw" name="handles / runs" type="_OC08QJHNEeWgtJmFnQKWjw" association="_OEoTEJHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEoTE5HNEeWgtJmFnQKWjw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEo6IJHNEeWgtJmFnQKWjw" value="*"/>
            </ownedEnd>
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEo6IpHNEeWgtJmFnQKWjw" name="is being run / handled by" type="_OC7C4ZHNEeWgtJmFnQKWjw" association="_OEoTEJHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEphMJHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEphMZHNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_OEqIQJHNEeWgtJmFnQKWjw" name="R7" memberEnd="_OEqIQpHNEeWgtJmFnQKWjw _OEqvUpHNEeWgtJmFnQKWjw" navigableOwnedEnd="_OEqIQpHNEeWgtJmFnQKWjw _OEqvUpHNEeWgtJmFnQKWjw">
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEqIQpHNEeWgtJmFnQKWjw" name="runs" type="_OC50wJHNEeWgtJmFnQKWjw" association="_OEqIQJHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEqIQ5HNEeWgtJmFnQKWjw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEqvUJHNEeWgtJmFnQKWjw" value="*"/>
            </ownedEnd>
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEqvUpHNEeWgtJmFnQKWjw" name="is run by" type="_OC7C4ZHNEeWgtJmFnQKWjw" association="_OEqIQJHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEqvU5HNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OErWYJHNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_OEr9cJHNEeWgtJmFnQKWjw" name="R4" memberEnd="_OEr9cpHNEeWgtJmFnQKWjw _OEskgZHNEeWgtJmFnQKWjw" navigableOwnedEnd="_OEr9cpHNEeWgtJmFnQKWjw _OEskgZHNEeWgtJmFnQKWjw">
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEr9cpHNEeWgtJmFnQKWjw" name="registers" type="_OC84EZHNEeWgtJmFnQKWjw" association="_OEr9cJHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEr9c5HNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEr9dJHNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEskgZHNEeWgtJmFnQKWjw" name="is registered through" type="_OC50wJHNEeWgtJmFnQKWjw" association="_OEr9cJHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEskgpHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEskg5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_OEtLkZHNEeWgtJmFnQKWjw" name="R5" memberEnd="_OEtyoZHNEeWgtJmFnQKWjw _OEuZsZHNEeWgtJmFnQKWjw" navigableOwnedEnd="_OEtyoZHNEeWgtJmFnQKWjw _OEuZsZHNEeWgtJmFnQKWjw">
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEtyoZHNEeWgtJmFnQKWjw" name="is unregistered through" type="_OC-GMJHNEeWgtJmFnQKWjw" association="_OEtLkZHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEtyopHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEtyo5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEuZsZHNEeWgtJmFnQKWjw" name="unregisters" type="_OC4moZHNEeWgtJmFnQKWjw" association="_OEtLkZHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEuZspHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEuZs5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_OEvAwZHNEeWgtJmFnQKWjw" name="R8" memberEnd="_OEvn0ZHNEeWgtJmFnQKWjw _OEwO4ZHNEeWgtJmFnQKWjw" navigableOwnedEnd="_OEvn0ZHNEeWgtJmFnQKWjw _OEwO4ZHNEeWgtJmFnQKWjw">
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEvn0ZHNEeWgtJmFnQKWjw" name="runs" type="_OC-GMJHNEeWgtJmFnQKWjw" association="_OEvAwZHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEvn0pHNEeWgtJmFnQKWjw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEvn05HNEeWgtJmFnQKWjw" value="*"/>
            </ownedEnd>
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEwO4ZHNEeWgtJmFnQKWjw" name="is run by" type="_OC7C4ZHNEeWgtJmFnQKWjw" association="_OEvAwZHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEwO4pHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEwO45HNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OKVScpHNEeWgtJmFnQKWjw" name="Implementation">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKV5g5HNEeWgtJmFnQKWjw" name="init$method$1" specification="_OKV5gZHNEeWgtJmFnQKWjw">
              <language>rALF</language>
              <body>;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKV5gZHNEeWgtJmFnQKWjw" name="init" isStatic="true" method="_OKV5g5HNEeWgtJmFnQKWjw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OKWgkZHNEeWgtJmFnQKWjw" name="TIM" isAbstract="true">
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKZj4JHNEeWgtJmFnQKWjw" name="current_date" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKZj4pHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKZj45HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKZj5JHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKaK8ZHNEeWgtJmFnQKWjw" name="create_date" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKaK85HNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKaK9JHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKaK9ZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKayAZHNEeWgtJmFnQKWjw" name="minute">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKayApHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKayA5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKbZEJHNEeWgtJmFnQKWjw" name="day">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKbZEZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKbZEpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKbZFJHNEeWgtJmFnQKWjw" name="year">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKbZFZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKcAIJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKcAIpHNEeWgtJmFnQKWjw" name="second">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKcAI5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKcAJJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKcAJpHNEeWgtJmFnQKWjw" name="hour">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKcAJ5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKcnMJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKcnMpHNEeWgtJmFnQKWjw" name="month">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKcnM5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKcnNJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKcnNpHNEeWgtJmFnQKWjw" name="get_second" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKdOQJHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKdOQZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKdOQpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKdORJHNEeWgtJmFnQKWjw" name="date">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKdORZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKdORpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKdOSJHNEeWgtJmFnQKWjw" name="get_minute" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKd1UZHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKd1UpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKd1U5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKd1VZHNEeWgtJmFnQKWjw" name="date">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKd1VpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKd1V5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKecYJHNEeWgtJmFnQKWjw" name="get_hour" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKecYpHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKecY5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKecZJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKecZpHNEeWgtJmFnQKWjw" name="date">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKecZ5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKecaJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKfDcZHNEeWgtJmFnQKWjw" name="get_day" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKfDc5HNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKfDdJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKfDdZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKfDd5HNEeWgtJmFnQKWjw" name="date">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKfqgJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKfqgZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKfqg5HNEeWgtJmFnQKWjw" name="get_month" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKfqhZHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKfqhpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKfqh5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKgRkJHNEeWgtJmFnQKWjw" name="date">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKgRkZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKgRkpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKgRlJHNEeWgtJmFnQKWjw" name="get_year" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKgRlpHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKgRl5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKgRmJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKg4oZHNEeWgtJmFnQKWjw" name="date">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKg4opHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKg4o5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKg4pZHNEeWgtJmFnQKWjw" name="current_clock" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKg4p5HNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKhfsJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKhfsZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKhfs5HNEeWgtJmFnQKWjw" name="timer_start" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKiGwJHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKiGwZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKiGwpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKiGxJHNEeWgtJmFnQKWjw" name="event_inst">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKiGxZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKiGxpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKit0ZHNEeWgtJmFnQKWjw" name="microseconds">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKit0pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKit05HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKit1ZHNEeWgtJmFnQKWjw" name="timer_start_recurring" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKjU4ZHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKjU4pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKjU45HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKjU5ZHNEeWgtJmFnQKWjw" name="event_inst">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKjU5pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKj78JHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKj78pHNEeWgtJmFnQKWjw" name="microseconds">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKj785HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKj79JHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKj79pHNEeWgtJmFnQKWjw" name="timer_remaining_time" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKkjAZHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKkjApHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKkjA5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKkjBZHNEeWgtJmFnQKWjw" name="timer_inst_ref">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKlKEJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKlKEZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKlKE5HNEeWgtJmFnQKWjw" name="timer_reset_time" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKlxIJHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKlxIZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKlxIpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKlxJJHNEeWgtJmFnQKWjw" name="microseconds">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKlxJZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKlxJpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKmYMZHNEeWgtJmFnQKWjw" name="timer_inst_ref">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKmYMpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKmYM5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKmYNZHNEeWgtJmFnQKWjw" name="timer_add_time" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKm_QZHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKm_QpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKm_Q5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKm_RZHNEeWgtJmFnQKWjw" name="microseconds">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKm_RpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKm_R5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKnmUZHNEeWgtJmFnQKWjw" name="timer_inst_ref">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKnmUpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKnmU5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKnmVZHNEeWgtJmFnQKWjw" name="timer_cancel" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKoNYZHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKoNYpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKoNY5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKoNZZHNEeWgtJmFnQKWjw" name="timer_inst_ref">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKoNZpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKoNZ5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OKXusJHNEeWgtJmFnQKWjw" name="ARCH" isAbstract="true">
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKo0cZHNEeWgtJmFnQKWjw" name="shutdown" isStatic="true"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OKYVwJHNEeWgtJmFnQKWjw" name="LOG" isAbstract="true">
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKo0c5HNEeWgtJmFnQKWjw" name="LogInteger" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKo0dZHNEeWgtJmFnQKWjw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKpbgJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKpbgZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKpbg5HNEeWgtJmFnQKWjw" name="LogInfo" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKpbhZHNEeWgtJmFnQKWjw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKpbhpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKqCkJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKqCkpHNEeWgtJmFnQKWjw" name="LogFailure" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKqClJHNEeWgtJmFnQKWjw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKqClZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKqClpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKqpoZHNEeWgtJmFnQKWjw" name="LogSuccess" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKqpo5HNEeWgtJmFnQKWjw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKqppJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKqppZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKrQsJHNEeWgtJmFnQKWjw" name="LogDate" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKrQspHNEeWgtJmFnQKWjw" name="d">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKrQs5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKrQtJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKr3wJHNEeWgtJmFnQKWjw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKr3wZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKr3wpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKr3xJHNEeWgtJmFnQKWjw" name="LogTime" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKr3xpHNEeWgtJmFnQKWjw" name="t">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKr3x5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKse0JHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKse0pHNEeWgtJmFnQKWjw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKse05HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKse1JHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKuUAZHNEeWgtJmFnQKWjw" name="LogReal" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKuUA5HNEeWgtJmFnQKWjw" name="r">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKu7EJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKu7EZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKu7E5HNEeWgtJmFnQKWjw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKu7FJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKu7FZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OCoH8ZHNEeWgtJmFnQKWjw" name="SEQ_BUCKET" classifierBehavior="_OKylcZHNEeWgtJmFnQKWjw" isActive="true">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODK6gJHNEeWgtJmFnQKWjw" name="test_suite_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODMIoJHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODMIoZHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODOk4JHNEeWgtJmFnQKWjw" name="test_suite_version">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODPL8JHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODPL8ZHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODQaEJHNEeWgtJmFnQKWjw" name="variation_count">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODQaEZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODQaEpHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODRoMJHNEeWgtJmFnQKWjw" name="guard_timer_duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODRoMZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODSPQJHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODTdYJHNEeWgtJmFnQKWjw" name="guard_timer">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODTdYZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODUEcJHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ODylkJHNEeWgtJmFnQKWjw" name="init$method$1" specification="_ODttEZHNEeWgtJmFnQKWjw">
              <language>rALF</language>
              <body>  // assign self.test_suite_name = &quot;&quot;;
  this.test_suite_name = &quot;&quot;;
  // assign self.test_suite_version = &quot;&quot;;
  this.test_suite_version = &quot;&quot;;
  // assign self.variation_count = 0;
  this.variation_count = 0;
  // assign self.guard_timer_duration = 8000000;
  this.guard_timer_duration = 8000000;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OD1o4pHNEeWgtJmFnQKWjw" name="next$method$1" specification="_OD1o4JHNEeWgtJmFnQKWjw">
              <language>rALF</language>
              <body>  // assign b = timer_cancel::Time(timer_inst_ref: self.guard_timer);
  //EATF HACK: Following line uses TIM external entity which is replaced with dummy return literal value.
  Boolean b = true;
  // select one current_test_case related by self->SEQ_TESTCASE[R203];
  SEQ_TESTCASE current_test_case = this->'is current'.one();
  // relate self to current_test_case across R203;
  R203::unlink('is current'=>current_test_case,'is current for'=>this);
  // select one next_test_case related by current_test_case->SEQ_TESTCASE[R201.'follows'];
  SEQ_TESTCASE next_test_case = current_test_case->'follows'.one();
  // if not_empty next_test_case
  if(next_test_case!=null) {
    // relate self to next_test_case across R203;
    R203::link('is current'=>next_test_case,'is current for'=>this);
  // end if;
  }
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OD23AZHNEeWgtJmFnQKWjw" name="cleanup$method$1" specification="_OD2P8ZHNEeWgtJmFnQKWjw">
              <language>rALF</language>
              <body>  // select one current_test_case related by self->SEQ_TESTCASE[R203];
  SEQ_TESTCASE current_test_case = this->'is current'.one();
  // if not_empty current_test_case
  if(current_test_case!=null) {
    // relate self to current_test_case across R203;
    R203::unlink('is current'=>current_test_case,'is current for'=>this);
  // end if;
  }
  // select one first_test_case related by self->SEQ_TESTCASE[R202];
  SEQ_TESTCASE first_test_case = this->'has first'.one();
  // if not_empty first_test_case
  if(first_test_case!=null) {
    // relate self to first_test_case across R202;
    R202::unlink('has first'=>first_test_case,'is first in'=>this);
    // transform first_test_case.cleanup();
    first_test_case.cleanup();
    // delete object instance first_test_case;
    delete first_test_case;
  // end if;
  }
  // select many test_cases from instances of SEQ_TESTCASE;
  Set&lt;SEQ_TESTCASE> test_cases = SEQ_TESTCASE::instances();
  // for each test_case in test_cases
  for(SEQ_TESTCASE __test_case in test_cases) {
    SEQ_TESTCASE test_case = __test_case;
    // delete object instance test_case;
    delete test_case;
  // end for;
  }
  // delete object instance self;
  delete this;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OKylcZHNEeWgtJmFnQKWjw" name="SEQ_BUCKETStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OKylc5HNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OKzMg5HNEeWgtJmFnQKWjw" name="tr_init" source="_OKyldZHNEeWgtJmFnQKWjw" target="_OKzMgZHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ONO1cpHNEeWgtJmFnQKWjw" name="TXN_1_SEQ_BUCKET1_1" source="_OKzMgZHNEeWgtJmFnQKWjw" target="_OKzMgZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ONPcgJHNEeWgtJmFnQKWjw" name="effectBehavior">
                    <language>rALF</language>
                    <body>  // assign self.test_suite_name = rcvd_evt.test_suite_name;
  this.test_suite_name = sigdata.test_suite_name;
  // assign self.test_suite_version = rcvd_evt.test_suite_version;
  this.test_suite_version = sigdata.test_suite_version;
  // assign self.variation_count = rcvd_evt.variation_count;
  this.variation_count = sigdata.variation_count;
  // if self.variation_count>0
  if((this.variation_count>0)) {
    // select one first_test_case related by self->SEQ_TESTCASE[R202] where FALSE;
    SEQ_TESTCASE first_test_case;
    // assign test_case_number = self.variation_count;
    Integer test_case_number = this.variation_count;
    // while test_case_number>0
    while((test_case_number>0)) {
      // create object instance test_case of SEQ_TESTCASE;
      SEQ_TESTCASE test_case = new SEQ_TESTCASE();
      // transform test_case.init(test_case_number: test_case_number);
      test_case.init(test_case_number=>test_case_number);
      // if not_empty first_test_case
      if(first_test_case!=null) {
        // relate test_case to first_test_case across R201.'follows';
        R201::link('follows'=>first_test_case,'precedes'=>test_case);
      // end if;
      }
      // assign first_test_case = test_case;
      first_test_case = test_case;
      // assign test_case_number = test_case_number-1;
      test_case_number = (test_case_number-1);
    // end while;
    }
    // relate self to first_test_case across R202;
    R202::link('has first'=>first_test_case,'is first in'=>this);
    // relate self to first_test_case across R203;
    R203::link('is current'=>first_test_case,'is current for'=>this);
    // generate SEQ_BUCKET4:'run' to self;
    send new SEQ_BUCKET::run() to this;
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONPcgpHNEeWgtJmFnQKWjw" name="TXN_1_SEQ_BUCKET1_1_trigger" event="_OMnKZJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONQDkJHNEeWgtJmFnQKWjw" name="TXN_1_SEQ_BUCKET4_2" source="_OKzMgZHNEeWgtJmFnQKWjw" target="_OKzzkZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONQqoJHNEeWgtJmFnQKWjw" name="TXN_1_SEQ_BUCKET4_2_trigger" event="_OMo_kZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONQqoZHNEeWgtJmFnQKWjw" name="TXN_2_SEQ_BUCKET2_3" source="_OKzzkZHNEeWgtJmFnQKWjw" target="_OK0aoZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONRRsZHNEeWgtJmFnQKWjw" name="TXN_2_SEQ_BUCKET2_3_trigger" event="_OMnxc5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONRRspHNEeWgtJmFnQKWjw" name="TXN_2_SEQ_BUCKET4_2" source="_OKzzkZHNEeWgtJmFnQKWjw" target="_OKzzkZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ONR4wZHNEeWgtJmFnQKWjw" name="effectBehavior">
                    <language>rALF</language>
                    <body>  // transform self.next();
  this.next();
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONSf0JHNEeWgtJmFnQKWjw" name="TXN_2_SEQ_BUCKET4_2_trigger" event="_OMo_kZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONSf0ZHNEeWgtJmFnQKWjw" name="TXN_2_SEQ_BUCKET3_4" source="_OKzzkZHNEeWgtJmFnQKWjw" target="_OK1Bs5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONTG4JHNEeWgtJmFnQKWjw" name="TXN_2_SEQ_BUCKET3_4_trigger" event="_OMoYg5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONTG4ZHNEeWgtJmFnQKWjw" name="TXN_3_SEQ_BUCKET4_2" source="_OK0aoZHNEeWgtJmFnQKWjw" target="_OKzzkZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ONTt8ZHNEeWgtJmFnQKWjw" name="effectBehavior">
                    <language>rALF</language>
                    <body>  // transform self.next();
  this.next();
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONUVAZHNEeWgtJmFnQKWjw" name="TXN_3_SEQ_BUCKET4_2_trigger" event="_OMo_kZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONUVApHNEeWgtJmFnQKWjw" name="TXN_4_SEQ_BUCKET1_1" source="_OK1Bs5HNEeWgtJmFnQKWjw" target="_OKzMgZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONU8EJHNEeWgtJmFnQKWjw" name="TXN_4_SEQ_BUCKET1_1_trigger" event="_OMnKZJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONU8EZHNEeWgtJmFnQKWjw" name="TXN_3_SEQ_BUCKET1_1" source="_OK0aoZHNEeWgtJmFnQKWjw" target="_OKzMgZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONU8E5HNEeWgtJmFnQKWjw" name="TXN_3_SEQ_BUCKET1_1_trigger" event="_OMnKZJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONU8FJHNEeWgtJmFnQKWjw" name="TXN_1_SEQ_BUCKET5_1" source="_OKzMgZHNEeWgtJmFnQKWjw" target="_OKzMgZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ONVjIZHNEeWgtJmFnQKWjw" name="effectBehavior">
                    <language>rALF</language>
                    <body>  // if rcvd_evt.test_number!=0
  if((sigdata.test_number!=0)) {
    // create object instance test_case of SEQ_TESTCASE;
    SEQ_TESTCASE test_case = new SEQ_TESTCASE();
    // transform test_case.init(test_case_number: rcvd_evt.test_number);
    test_case.init(test_case_number=>sigdata.test_number);
    // relate self to test_case across R202;
    R202::link('has first'=>test_case,'is first in'=>this);
    // relate self to test_case across R203;
    R203::link('is current'=>test_case,'is current for'=>this);
    // generate SEQ_BUCKET4:'run' to self;
    send new SEQ_BUCKET::run() to this;
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONVjI5HNEeWgtJmFnQKWjw" name="TXN_1_SEQ_BUCKET5_1_trigger" event="_OMpmoJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONWKMJHNEeWgtJmFnQKWjw" name="TXN_1_SEQ_BUCKET6_1" source="_OKzMgZHNEeWgtJmFnQKWjw" target="_OKzMgZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ONWKMpHNEeWgtJmFnQKWjw" name="effectBehavior">
                    <language>rALF</language>
                    <body>  // assign num_of_tcs = rcvd_evt.test_case_list.length;
  Integer num_of_tcs = sigdata.test_case_list.size();
  // assign ctr = 0;
  Integer ctr = 0;
  // if self.variation_count>0
  if((this.variation_count>0)) {
    // select one first_test_case related by self->SEQ_TESTCASE[R202] where FALSE;
    SEQ_TESTCASE first_test_case;
    // while ctr&lt;num_of_tcs
    while((ctr&lt;num_of_tcs)) {
      // create object instance test_case of SEQ_TESTCASE;
      SEQ_TESTCASE test_case = new SEQ_TESTCASE();
      // transform test_case.init(test_case_number: rcvd_evt.test_case_list[num_of_tcs-ctr-1]);
      test_case.init(test_case_number=>sigdata.test_case_list.get(((num_of_tcs-ctr)-1)));
      // if not_empty first_test_case
      if(first_test_case!=null) {
        // relate test_case to first_test_case across R201.'follows';
        R201::link('follows'=>first_test_case,'precedes'=>test_case);
      // end if;
      }
      // assign first_test_case = test_case;
      first_test_case = test_case;
      // assign ctr = ctr+1;
      ctr = (ctr+1);
    // end while;
    }
    // relate self to first_test_case across R202;
    R202::link('has first'=>first_test_case,'is first in'=>this);
    // relate self to first_test_case across R203;
    R203::link('is current'=>first_test_case,'is current for'=>this);
  // end if;
  }
  // generate SEQ_BUCKET4:'run' to self;
  send new SEQ_BUCKET::run() to this;
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONWxQZHNEeWgtJmFnQKWjw" name="TXN_1_SEQ_BUCKET6_1_trigger" event="_OMpmpZHNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OKyldZHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OKzMgZHNEeWgtJmFnQKWjw" name="registering application test suite"/>
                <subvertex xmi:type="uml:State" xmi:id="_OKzzkZHNEeWgtJmFnQKWjw" name="running variation">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OKzzk5HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one test_case related by self->SEQ_TESTCASE[R203];
  SEQ_TESTCASE test_case = this->'is current'.one();
  // if empty test_case
  if(test_case==null) {
    // generate SEQ_BUCKET3:'test_done' to self;
    send new SEQ_BUCKET::test_done() to this;
  // else
  } else {
    // generate SEQ_TESTCASE1:'setup' to test_case;
    send new SEQ_TESTCASE::setup() to test_case;
    // create event instance of pop of SEQ_BUCKET2:'timeout' to self;
    // !!! ALF does not allow pre-creation of events. Please update your model. Note, however that ALF code might still work if variable storing created event is not written by more than one event creation statement.
    // assign self.guard_timer = timer_start::Time(event_inst: pop, microseconds: self.guard_timer_duration);
    //EATF HACK: Following line uses TIM external entity which is replaced with dummy return literal value.
    this.guard_timer = -1;
  // end if;
  }
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OK0aoZHNEeWgtJmFnQKWjw" name="timed out">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OK1BsZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one test_case related by self->SEQ_TESTCASE[R203];
  SEQ_TESTCASE test_case = this->'is current'.one();
  // assign test_case.timed_out = TRUE;
  test_case.timed_out = true;
  // generate SEQ_TESTCASE4:'timeout' to test_case;
  send new SEQ_TESTCASE::timeout() to test_case;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OK1Bs5HNEeWgtJmFnQKWjw" name="bucket done">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OK1owZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // assign passed = 0;
  Integer passed = 0;
  // assign failed = 0;
  Integer failed = 0;
  // assign timedout = 0;
  Integer timedout = 0;
  // assign numberofTCs = 0;
  Integer numberofTCs = 0;
  // bridge LogInfo(message: &quot;------------- test report -------------&quot;);
  LOG::LogInfo(message=>&quot;------------- test report -------------&quot;);
  // bridge LogInfo(message: &quot;test suite name: &quot;+self.test_suite_name);
  LOG::LogInfo(message=>(&quot;test suite name: &quot;+this.test_suite_name));
  // bridge LogInfo(message: &quot;test suite version: &quot;+self.test_suite_version);
  LOG::LogInfo(message=>(&quot;test suite version: &quot;+this.test_suite_version));
  // bridge LogInfo(message: &quot;test cases: &quot;);
  LOG::LogInfo(message=>&quot;test cases: &quot;);
  // select one test_case related by self->SEQ_TESTCASE[R202];
  SEQ_TESTCASE test_case = this->'has first'.one();
  // while not_empty test_case
  while(test_case!=null) {
    // assign numberofTCs = numberofTCs+1;
    numberofTCs = (numberofTCs+1);
    // bridge LogInteger(message: test_case.test_case_number);
    LOG::LogInteger(message=>test_case.test_case_number);
    // bridge LogInfo(message: test_case.label);
    LOG::LogInfo(message=>test_case.label);
    // if test_case.started
    if(test_case.started) {
      // bridge LogInfo(message: &quot;started&quot;);
      LOG::LogInfo(message=>&quot;started&quot;);
    // end if;
    }
    // if test_case.timed_out
    if(test_case.timed_out) {
      // assign timedout = timedout+1;
      timedout = (timedout+1);
      // bridge LogInfo(message: &quot;timed_out&quot;);
      LOG::LogInfo(message=>&quot;timed_out&quot;);
    // elif test_case.finished
    } else if(test_case.finished) {
      // bridge LogInfo(message: &quot;finished&quot;);
      LOG::LogInfo(message=>&quot;finished&quot;);
    // end if;
    }
    // if test_case.passed
    if(test_case.passed) {
      // assign passed = passed+1;
      passed = (passed+1);
      // bridge LogInfo(message: &quot;passed&quot;);
      LOG::LogInfo(message=>&quot;passed&quot;);
    // else
    } else {
      // bridge LogInfo(message: &quot;failed&quot;);
      LOG::LogInfo(message=>&quot;failed&quot;);
      // assign failed = failed+1;
      failed = (failed+1);
    // end if;
    }
    // select one test_case related by test_case->SEQ_TESTCASE[R201.'follows'];
    test_case = test_case->'follows'.one();
  // end while;
  }
  // bridge LogInfo(message: &quot;------------- test summary -------------&quot;);
  LOG::LogInfo(message=>&quot;------------- test summary -------------&quot;);
  // bridge LogInfo(message: &quot;Total number of test cases: &quot;);
  LOG::LogInfo(message=>&quot;Total number of test cases: &quot;);
  // bridge LogInteger(message: numberofTCs);
  LOG::LogInteger(message=>numberofTCs);
  // bridge LogInfo(message: &quot;Passed:&quot;);
  LOG::LogInfo(message=>&quot;Passed:&quot;);
  // bridge LogInteger(message: passed);
  LOG::LogInteger(message=>passed);
  // bridge LogInfo(message: &quot;Failed:&quot;);
  LOG::LogInfo(message=>&quot;Failed:&quot;);
  // bridge LogInteger(message: failed);
  LOG::LogInteger(message=>failed);
  // bridge LogInfo(message: &quot;Timed out:&quot;);
  LOG::LogInfo(message=>&quot;Timed out:&quot;);
  // bridge LogInteger(message: timedout);
  LOG::LogInteger(message=>timedout);
  // bridge LogInfo(message: &quot;----------------------------------------&quot;);
  LOG::LogInfo(message=>&quot;----------------------------------------&quot;);
  // transform self.cleanup();
  this.cleanup();
</body>
                  </entry>
                </subvertex>
              </region>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ODttEZHNEeWgtJmFnQKWjw" name="init" method="_ODylkJHNEeWgtJmFnQKWjw"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OD1o4JHNEeWgtJmFnQKWjw" name="next" method="_OD1o4pHNEeWgtJmFnQKWjw"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OD2P8ZHNEeWgtJmFnQKWjw" name="cleanup" method="_OD23AZHNEeWgtJmFnQKWjw"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMnKYJHNEeWgtJmFnQKWjw" name="register">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OM-WwpHNEeWgtJmFnQKWjw" name="variation_count">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OM-Ww5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OM-WxJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OM-905HNEeWgtJmFnQKWjw" name="test_suite_version">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OM-91JHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OM-91ZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OM_k5JHNEeWgtJmFnQKWjw" name="test_suite_name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OM_k5ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OM_k5pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMnKZZHNEeWgtJmFnQKWjw" name="timeout"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMnxdJHNEeWgtJmFnQKWjw" name="test_done"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMoYhJHNEeWgtJmFnQKWjw" name="run"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMo_kpHNEeWgtJmFnQKWjw" name="registerOne">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONAL9ZHNEeWgtJmFnQKWjw" name="test_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONAL9pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONAzAJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMpmoZHNEeWgtJmFnQKWjw" name="registerMany">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONBaEJHNEeWgtJmFnQKWjw" name="test_case_list" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONBaEZHNEeWgtJmFnQKWjw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONBaEpHNEeWgtJmFnQKWjw" value="*"/>
              </ownedAttribute>
            </nestedClassifier>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMnKYpHNEeWgtJmFnQKWjw" name="register" signal="_OMnKYJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OM-WxpHNEeWgtJmFnQKWjw" name="variation_count">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OM-90JHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OM-90ZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OM_k4JHNEeWgtJmFnQKWjw" name="test_suite_version">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OM_k4ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OM_k4pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONAL8ZHNEeWgtJmFnQKWjw" name="test_suite_name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONAL8pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONAL85HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMnxcZHNEeWgtJmFnQKWjw" name="timeout" signal="_OMnKZZHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMoYgZHNEeWgtJmFnQKWjw" name="test_done" signal="_OMnxdJHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMoYhpHNEeWgtJmFnQKWjw" name="run" signal="_OMoYhJHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMo_lJHNEeWgtJmFnQKWjw" name="registerOne" signal="_OMo_kpHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONAzApHNEeWgtJmFnQKWjw" name="test_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONAzA5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONAzBJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMpmo5HNEeWgtJmFnQKWjw" name="registerMany" signal="_OMpmoZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONBaFJHNEeWgtJmFnQKWjw" name="test_case_list" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONCBIJHNEeWgtJmFnQKWjw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONCBIZHNEeWgtJmFnQKWjw" value="*"/>
              </ownedParameter>
            </ownedReception>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OCp9IJHNEeWgtJmFnQKWjw" name="SEQ_TESTCASE" classifierBehavior="_OK4FAZHNEeWgtJmFnQKWjw" isActive="true">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODUrgZHNEeWgtJmFnQKWjw" name="passed">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODUrgpHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODVSkJHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODV5oZHNEeWgtJmFnQKWjw" name="started">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODWgsJHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODWgsZHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODXu0JHNEeWgtJmFnQKWjw" name="finished">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODXu0ZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODXu0pHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODZkAJHNEeWgtJmFnQKWjw" name="label">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODaLEJHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODaLEZHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODayIZHNEeWgtJmFnQKWjw" name="test_case_number">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODbZMJHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODbZMZHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODcAQJHNEeWgtJmFnQKWjw" name="timed_out">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODcAQZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODcAQpHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OD4FIpHNEeWgtJmFnQKWjw" name="init$method$1" specification="_OD4FIJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OD56UZHNEeWgtJmFnQKWjw" name="test_case_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OD56UpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OD6hYJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <language>rALF</language>
              <body>  // assign self.test_case_number = param.test_case_number;
  this.test_case_number = test_case_number;
  // assign self.started = FALSE;
  this.started = false;
  // assign self.finished = FALSE;
  this.finished = false;
  // assign self.passed = FALSE;
  this.passed = false;
  // assign self.label = &quot;&quot;;
  this.label = &quot;&quot;;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OD7IcpHNEeWgtJmFnQKWjw" name="cleanup$method$1" specification="_OD7IcJHNEeWgtJmFnQKWjw">
              <language>rALF</language>
              <body>  // select one next_test_case related by self->SEQ_TESTCASE[R201.'follows'];
  SEQ_TESTCASE next_test_case = this->'follows'.one();
  // if not_empty next_test_case
  if(next_test_case!=null) {
    // relate self to next_test_case across R201.'follows';
    R201::unlink('follows'=>next_test_case,'precedes'=>this);
    // transform next_test_case.cleanup();
    next_test_case.cleanup();
    // delete object instance next_test_case;
    delete next_test_case;
  // end if;
  }
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OK4FAZHNEeWgtJmFnQKWjw" name="SEQ_TESTCASEStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OK4sEZHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OK5TI5HNEeWgtJmFnQKWjw" name="tr_init" source="_OK4sE5HNEeWgtJmFnQKWjw" target="_OK5TIZHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ONWxQpHNEeWgtJmFnQKWjw" name="TXN_1_SEQ_TESTCASE2_2" source="_OK56MJHNEeWgtJmFnQKWjw" target="_OK6hQZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONXYUJHNEeWgtJmFnQKWjw" name="TXN_1_SEQ_TESTCASE2_2_trigger" event="_OMrb0JHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONXYUZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_SEQ_TESTCASE2_2" source="_OK5TIZHNEeWgtJmFnQKWjw" target="_OK6hQZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONXYU5HNEeWgtJmFnQKWjw" name="from_initial_TXN_1_SEQ_TESTCASE2_2_trigger" event="_OMrb0JHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONX_YJHNEeWgtJmFnQKWjw" name="TXN_2_SEQ_TESTCASE2_3" source="_OK6hQZHNEeWgtJmFnQKWjw" target="_OK9kkJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONX_YpHNEeWgtJmFnQKWjw" name="TXN_2_SEQ_TESTCASE2_3_trigger" event="_OMrb0JHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONX_Y5HNEeWgtJmFnQKWjw" name="TXN_3_SEQ_TESTCASE2_4" source="_OK9kkJHNEeWgtJmFnQKWjw" target="_OK-LoZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONYmcJHNEeWgtJmFnQKWjw" name="TXN_3_SEQ_TESTCASE2_4_trigger" event="_OMrb0JHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONYmcZHNEeWgtJmFnQKWjw" name="TXN_1_SEQ_TESTCASE1_1" source="_OK56MJHNEeWgtJmFnQKWjw" target="_OK56MJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONYmc5HNEeWgtJmFnQKWjw" name="TXN_1_SEQ_TESTCASE1_1_trigger" event="_OMqNtJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONYmdJHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_SEQ_TESTCASE1_1" source="_OK5TIZHNEeWgtJmFnQKWjw" target="_OK56MJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONZNgZHNEeWgtJmFnQKWjw" name="from_initial_TXN_1_SEQ_TESTCASE1_1_trigger" event="_OMqNtJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONZNgpHNEeWgtJmFnQKWjw" name="TXN_4_SEQ_TESTCASE3_5" source="_OK-LoZHNEeWgtJmFnQKWjw" target="_OK-ysZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONZ0kZHNEeWgtJmFnQKWjw" name="TXN_4_SEQ_TESTCASE3_5_trigger" event="_OMrb1ZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONZ0kpHNEeWgtJmFnQKWjw" name="TXN_2_SEQ_TESTCASE4_3" source="_OK6hQZHNEeWgtJmFnQKWjw" target="_OK9kkJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONZ0lJHNEeWgtJmFnQKWjw" name="TXN_2_SEQ_TESTCASE4_3_trigger" event="_OMsC5JHNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OK4sE5HNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OK5TIZHNEeWgtJmFnQKWjw" name="_initial"/>
                <subvertex xmi:type="uml:State" xmi:id="_OK56MJHNEeWgtJmFnQKWjw" name="setting up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OK56MpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // assign self.started = TRUE;
  this.started = true;
  // bridge LogInfo(message: &quot;Setting up test case: &quot;);
  LOG::LogInfo(message=>&quot;Setting up test case: &quot;);
  // bridge LogInteger(message: self.test_case_number);
  LOG::LogInteger(message=>this.test_case_number);
  // send SEQ::setup(variation_number: self.test_case_number);
  send new SEQ::setup(variation_number=>this.test_case_number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OK6hQZHNEeWgtJmFnQKWjw" name="executing">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OK89gJHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // bridge LogInfo(message: &quot;Executing test case: &quot;);
  LOG::LogInfo(message=>&quot;Executing test case: &quot;);
  // bridge LogInteger(message: self.test_case_number);
  LOG::LogInteger(message=>this.test_case_number);
  // send SEQ::execute(variation_number: self.test_case_number);
  send new SEQ::execute(variation_number=>this.test_case_number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OK9kkJHNEeWgtJmFnQKWjw" name="cleaning up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OK9kkpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // bridge LogInfo(message: &quot;Cleaning up test case: &quot;);
  LOG::LogInfo(message=>&quot;Cleaning up test case: &quot;);
  // bridge LogInteger(message: self.test_case_number);
  LOG::LogInteger(message=>this.test_case_number);
  // send SEQ::cleanup(variation_number: self.test_case_number);
  send new SEQ::cleanup(variation_number=>this.test_case_number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OK-LoZHNEeWgtJmFnQKWjw" name="reporting results">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OK-Lo5HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send SEQ::report(variation_number: self.test_case_number);
  send new SEQ::report(variation_number=>this.test_case_number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OK-ysZHNEeWgtJmFnQKWjw" name="completed">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OK_ZwZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // assign self.finished = TRUE;
  this.finished = true;
  // assign self.label = rcvd_evt.label;
  this.label = sigdata.label;
  // assign self.passed = rcvd_evt.passed;
  this.passed = sigdata.passed;
  // bridge LogInfo(message: &quot;Reporting results for test case: &quot;);
  LOG::LogInfo(message=>&quot;Reporting results for test case: &quot;);
  // bridge LogInteger(message: self.test_case_number);
  LOG::LogInteger(message=>this.test_case_number);
  // bridge LogInfo(message: &quot;TC name: &quot;+self.label);
  LOG::LogInfo(message=>(&quot;TC name: &quot;+this.label));
  // if self.timed_out
  if(this.timed_out) {
    // assign self.passed = FALSE;
    this.passed = false;
    // bridge LogFailure(message: &quot;Verdict: failed (timed out)&quot;);
    LOG::LogFailure(message=>&quot;Verdict: failed (timed out)&quot;);
  // elif self.passed
  } else if(this.passed) {
    // bridge LogSuccess(message: &quot;Verdict: passed&quot;);
    LOG::LogSuccess(message=>&quot;Verdict: passed&quot;);
  // else
  } else {
    // bridge LogFailure(message: &quot;Verdict: failed&quot;);
    LOG::LogFailure(message=>&quot;Verdict: failed&quot;);
  // end if;
  }
  // select one bucket related by self->SEQ_BUCKET[R203];
  SEQ_BUCKET bucket = this->'is current for'.one();
  // generate SEQ_BUCKET4:'run' to bucket;
  send new SEQ_BUCKET::run() to bucket;
</body>
                  </entry>
                </subvertex>
              </region>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OD4FIJHNEeWgtJmFnQKWjw" name="init" method="_OD4FIpHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OD5TQJHNEeWgtJmFnQKWjw" name="test_case_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OD5TQZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OD5TQpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OD7IcJHNEeWgtJmFnQKWjw" name="cleanup" method="_OD7IcpHNEeWgtJmFnQKWjw"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMqNsJHNEeWgtJmFnQKWjw" name="setup"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMqNtZHNEeWgtJmFnQKWjw" name="step_done"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMrb0ZHNEeWgtJmFnQKWjw" name="results">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONCBI5HNEeWgtJmFnQKWjw" name="label">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONCBJJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONCBJZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONDPQJHNEeWgtJmFnQKWjw" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONDPQZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONDPQpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMsC4JHNEeWgtJmFnQKWjw" name="timeout"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMqNspHNEeWgtJmFnQKWjw" name="setup" signal="_OMqNsJHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMq0wZHNEeWgtJmFnQKWjw" name="step_done" signal="_OMqNtZHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMrb05HNEeWgtJmFnQKWjw" name="results" signal="_OMrb0ZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONCoMZHNEeWgtJmFnQKWjw" name="label">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONCoMpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONCoM5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OND2UJHNEeWgtJmFnQKWjw" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OND2UZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OND2UpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMsC4pHNEeWgtJmFnQKWjw" name="timeout" signal="_OMsC4JHNEeWgtJmFnQKWjw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_OEdT8JHNEeWgtJmFnQKWjw" name="R202" memberEnd="_OEd7AZHNEeWgtJmFnQKWjw _OEeiEpHNEeWgtJmFnQKWjw" navigableOwnedEnd="_OEd7AZHNEeWgtJmFnQKWjw _OEeiEpHNEeWgtJmFnQKWjw">
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEd7AZHNEeWgtJmFnQKWjw" name="has first" type="_OCp9IJHNEeWgtJmFnQKWjw" association="_OEdT8JHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEd7ApHNEeWgtJmFnQKWjw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEeiEJHNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEeiEpHNEeWgtJmFnQKWjw" name="is first in" type="_OCoH8ZHNEeWgtJmFnQKWjw" association="_OEdT8JHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEfJIJHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEfJIZHNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_OEfwMJHNEeWgtJmFnQKWjw" name="R201" memberEnd="_OEgXQZHNEeWgtJmFnQKWjw _OEg-UZHNEeWgtJmFnQKWjw" navigableOwnedEnd="_OEgXQZHNEeWgtJmFnQKWjw _OEg-UZHNEeWgtJmFnQKWjw">
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEgXQZHNEeWgtJmFnQKWjw" name="precedes" type="_OCp9IJHNEeWgtJmFnQKWjw" association="_OEfwMJHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEgXQpHNEeWgtJmFnQKWjw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEgXQ5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEg-UZHNEeWgtJmFnQKWjw" name="follows" type="_OCp9IJHNEeWgtJmFnQKWjw" association="_OEfwMJHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEg-UpHNEeWgtJmFnQKWjw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEg-U5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_OEhlYZHNEeWgtJmFnQKWjw" name="R203" memberEnd="_OEiMcZHNEeWgtJmFnQKWjw _OEizgZHNEeWgtJmFnQKWjw" navigableOwnedEnd="_OEiMcZHNEeWgtJmFnQKWjw _OEizgZHNEeWgtJmFnQKWjw">
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEiMcZHNEeWgtJmFnQKWjw" name="is current for" type="_OCoH8ZHNEeWgtJmFnQKWjw" association="_OEhlYZHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEiMcpHNEeWgtJmFnQKWjw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEiMc5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
            <ownedEnd xmi:type="uml:Property" xmi:id="_OEizgZHNEeWgtJmFnQKWjw" name="is current" type="_OCp9IJHNEeWgtJmFnQKWjw" association="_OEhlYZHNEeWgtJmFnQKWjw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEizgpHNEeWgtJmFnQKWjw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEizg5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OKRBA5HNEeWgtJmFnQKWjw" name="testfunctions">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKSPIZHNEeWgtJmFnQKWjw" name="runAll$method$1" specification="_OKRoEZHNEeWgtJmFnQKWjw">
              <language>rALF</language>
              <body>  // select any bucket from instances of SEQ_BUCKET;
  SEQ_BUCKET bucket = SEQ_BUCKET::instances().one();
  // if empty bucket
  if(bucket==null) {
    // create object instance bucket of SEQ_BUCKET;
    bucket = new SEQ_BUCKET();
  // end if;
  }
  // transform bucket.init();
  bucket.init();
  // send SEQ::discover();
  SEQ seq = SEQ::instances().one();
  if(seq == null) {
  	seq = new SEQ();
  }
  send new SEQ::discover() to seq;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKS2MpHNEeWgtJmFnQKWjw" name="runSpecific$method$1" specification="_OKS2MJHNEeWgtJmFnQKWjw">
              <language>rALF</language>
              <body>  // select any bucket from instances of SEQ_BUCKET;
  SEQ_BUCKET bucket = SEQ_BUCKET::instances().one();
  // if empty bucket
  if(bucket==null) {
    // create object instance bucket of SEQ_BUCKET;
    bucket = new SEQ_BUCKET();
  // end if;
  }
  // assign bucket.test_suite_name = &quot;specific test case execution&quot;;
  bucket.test_suite_name = &quot;specific test case execution&quot;;
  // assign bucket.test_suite_version = &quot;N/A&quot;;
  bucket.test_suite_version = &quot;N/A&quot;;
  // assign bucket.variation_count = 1;
  bucket.variation_count = 1;
  // assign bucket.guard_timer_duration = 8000000;
  bucket.guard_timer_duration = 8000000;
  // assign tc_to_execute = 1;
  Integer tc_to_execute = 1;
  // generate SEQ_BUCKET5:'registerOne'test_number: tc_to_execute to bucket;
  send new SEQ_BUCKET::registerOne(test_number=>tc_to_execute) to bucket;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKTdQ5HNEeWgtJmFnQKWjw" name="runSelection$method$1" specification="_OKTdQZHNEeWgtJmFnQKWjw">
              <language>rALF</language>
              <body>  // select any bucket from instances of SEQ_BUCKET;
  SEQ_BUCKET bucket = SEQ_BUCKET::instances().one();
  // if empty bucket
  if(bucket==null) {
    // create object instance bucket of SEQ_BUCKET;
    bucket = new SEQ_BUCKET();
  // end if;
  }
  // assign bucket.test_suite_name = &quot;selection test case execution&quot;;
  bucket.test_suite_name = &quot;selection test case execution&quot;;
  // assign bucket.test_suite_version = &quot;N/A&quot;;
  bucket.test_suite_version = &quot;N/A&quot;;
  // assign bucket.guard_timer_duration = 8000000;
  bucket.guard_timer_duration = 8000000;
  Sequence&lt;Integer> tcs_main;
  // assign tcs_main[3] = 1;
  tcs_main.add(3,1);
  // assign tcs_main[2] = 8;
  tcs_main.add(2,8);
  // assign tcs_main[1] = 7;
  tcs_main.add(1,7);
  // assign tcs_main[0] = 6;
  tcs_main.add(0,6);
  // assign tcs_to_execute = tcs_main;
  Sequence&lt;Integer> tcs_to_execute = tcs_main;
  // assign bucket.variation_count = tcs_to_execute.length;
  bucket.variation_count = tcs_to_execute.size();
  // generate SEQ_BUCKET6:'registerMany'test_case_list: tcs_to_execute to bucket;
  send new SEQ_BUCKET::registerMany(test_case_list=>tcs_to_execute) to bucket;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKRoEZHNEeWgtJmFnQKWjw" name="runAll" isStatic="true" method="_OKSPIZHNEeWgtJmFnQKWjw"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKS2MJHNEeWgtJmFnQKWjw" name="runSpecific" isStatic="true" method="_OKS2MpHNEeWgtJmFnQKWjw"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKTdQZHNEeWgtJmFnQKWjw" name="runSelection" isStatic="true" method="_OKTdQ5HNEeWgtJmFnQKWjw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OCrLQJHNEeWgtJmFnQKWjw" name="NormalCall" classifierBehavior="_OLAA0ZHNEeWgtJmFnQKWjw" isActive="true">
            <generalization xmi:type="uml:Generalization" xmi:id="_OEzSMJHNEeWgtJmFnQKWjw" general="_OCzuIJHNEeWgtJmFnQKWjw"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODdOYZHNEeWgtJmFnQKWjw" name="callerRcvdInitCall">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODdOYpHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODdOY5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODecgJHNEeWgtJmFnQKWjw" name="calledRcvdInitCall">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODecgZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODecgpHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODfDkZHNEeWgtJmFnQKWjw" name="callerRcvdTerminateCall">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODfDkpHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODfDk5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODfqoZHNEeWgtJmFnQKWjw" name="calledRcvdTerminateCall">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODfqopHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODgRsJHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OLAA0ZHNEeWgtJmFnQKWjw" name="NormalCallStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OLESQZHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OLK_8pHNEeWgtJmFnQKWjw" name="tr_init" source="_OLKY4JHNEeWgtJmFnQKWjw" target="_OLK_8JHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ONZ0lZHNEeWgtJmFnQKWjw" name="TXN_1_TB_TESTCASE2_2" source="_OLE5UJHNEeWgtJmFnQKWjw" target="_OLGHcJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONaboZHNEeWgtJmFnQKWjw" name="TXN_1_TB_TESTCASE2_2_trigger" event="_OMtRAZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONabopHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE3_3" source="_OLGHcJHNEeWgtJmFnQKWjw" target="_OLGugJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONabpJHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONabpZHNEeWgtJmFnQKWjw" name="TXN_3_TB_TESTCASE4_4" source="_OLGugJHNEeWgtJmFnQKWjw" target="_OLHVkZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONbCsJHNEeWgtJmFnQKWjw" name="TXN_3_TB_TESTCASE4_4_trigger" event="_OMufI5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONbCsZHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE6_5" source="_OLGHcJHNEeWgtJmFnQKWjw" target="_OLH8o5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONbCs5HNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE6_5_trigger" event="_OMvtQpHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONbCtJHNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE3_3" source="_OLH8o5HNEeWgtJmFnQKWjw" target="_OLGugJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONbpwJHNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONbpwZHNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE7_6" source="_OLH8o5HNEeWgtJmFnQKWjw" target="_OLIjs5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONbpw5HNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE7_6_trigger" event="_OMwUUZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONbpxJHNEeWgtJmFnQKWjw" name="TXN_6_TB_TESTCASE3_3" source="_OLIjs5HNEeWgtJmFnQKWjw" target="_OLGugJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONcQ0ZHNEeWgtJmFnQKWjw" name="TXN_6_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONcQ0pHNEeWgtJmFnQKWjw" name="TXN_6_TB_TESTCASE7_6" source="_OLIjs5HNEeWgtJmFnQKWjw" target="_OLIjs5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONc34JHNEeWgtJmFnQKWjw" name="TXN_6_TB_TESTCASE7_6_trigger" event="_OMwUUZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONc34ZHNEeWgtJmFnQKWjw" name="TXN_6_TB_TESTCASE8_7" source="_OLIjs5HNEeWgtJmFnQKWjw" target="_OLJx0JHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONc345HNEeWgtJmFnQKWjw" name="TXN_6_TB_TESTCASE8_7_trigger" event="_OMwUVpHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONc35JHNEeWgtJmFnQKWjw" name="TXN_7_TB_TESTCASE8_7" source="_OLJx0JHNEeWgtJmFnQKWjw" target="_OLJx0JHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONde8ZHNEeWgtJmFnQKWjw" name="TXN_7_TB_TESTCASE8_7_trigger" event="_OMwUVpHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONde8pHNEeWgtJmFnQKWjw" name="TXN_7_TB_TESTCASE3_3" source="_OLJx0JHNEeWgtJmFnQKWjw" target="_OLGugJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONeGAZHNEeWgtJmFnQKWjw" name="TXN_7_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONeGApHNEeWgtJmFnQKWjw" name="TXN_0_TB_TESTCASE1_1" source="_OLK_8JHNEeWgtJmFnQKWjw" target="_OLE5UJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONetEJHNEeWgtJmFnQKWjw" name="TXN_0_TB_TESTCASE1_1_trigger" event="_OMsp85HNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_OLE5UJHNEeWgtJmFnQKWjw" name="setting up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLFgYJHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // create object instance userA of UserMock;
  UserMock userA = new UserMock();
  // assign userA.serviceId = 0;
  userA.serviceId = 0;
  // assign userA.userId = 10;
  userA.userId = 10;
  // assign userA.isBusy = FALSE;
  userA.isBusy = false;
  // assign userA.isCaller = TRUE;
  userA.isCaller = true;
  // create object instance userB of UserMock;
  UserMock userB = new UserMock();
  // assign userB.serviceId = 0;
  userB.serviceId = 0;
  // assign userB.userId = 20;
  userB.userId = 20;
  // assign userB.isBusy = FALSE;
  userB.isBusy = false;
  // assign userB.isCaller = FALSE;
  userB.isCaller = false;
  // assign self.callerRcvdInitCall = FALSE;
  this.callerRcvdInitCall = false;
  // assign self.calledRcvdInitCall = FALSE;
  this.calledRcvdInitCall = false;
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLGHcJHNEeWgtJmFnQKWjw" name="initiating call">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLGHcpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send PhoneXPort::CallSignal(CallerID: 10, CalledID: 20, ServiceId: 0);
  PhoneXPort port = PhoneXPort::instances().one();
  if(port == null) {
  	port = new PhoneXPort();
  }
  send new PhoneXPort::CallSignal(CallerID=>10, CalledID=>20, ServiceId=>0) to port;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLGugJHNEeWgtJmFnQKWjw" name="cleaning up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLGugpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // UserMock::cleanup();
  UserMock::cleanup();
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLHVkZHNEeWgtJmFnQKWjw" name="reporting results">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLH8oZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one test_case related by self->TB_TESTCASE[R100];
  TB_TESTCASE test_case = ((TB_TESTCASE)(this));
  // send SEQ::results(passed: test_case.passed, variation_number: self.number, label: test_case.label);
  send new SEQ::results(passed=>test_case.passed, variation_number=>((TB_TESTCASE)(this)).number, label=>test_case.label) to SEQ::instances().one();
  // unrelate test_case from self across R100;
  // Unrelation across generalization is not needed anymore.
  // delete object instance test_case;
  //Superclass instance does not need to be deleted.
  //test_case.destroy();
  // delete object instance self;
  delete this;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLH8o5HNEeWgtJmFnQKWjw" name="handling callBy on B side">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLIjsZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // assign testFailed = FALSE;
  Boolean testFailed = false;
  // select any user from instances of UserMock where selected.userId==rcvd_evt.calledId;
  UserMock user = UserMock::instances().filter(selected:(selected.userId==sigdata.calledId)).one();
  // if empty user
  if(user==null) {
    // assign testFailed = TRUE;
    testFailed = true;
  // else
  } else {
    // if user.isCaller
    if(user.isCaller) {
      // assign testFailed = TRUE;
      testFailed = true;
    // else
    } else {
      // send PhoneXPort::AcceptCall(UserID: user.userId, ServiceId: user.serviceId);
      send new PhoneXPort::AcceptCall(UserID=>user.userId, ServiceId=>user.serviceId) to PhoneXPort::instances().one();
    // end if;
    }
  // end if;
  }
  // if testFailed==TRUE
  if((testFailed==true)) {
    // send SEQ::done(variation_number: self.number);
    send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
  // end if;
  }
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLIjs5HNEeWgtJmFnQKWjw" name="handling initiateCall on both sides">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLJKwZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // assign testFailed = FALSE;
  Boolean testFailed = false;
  // select any user from instances of UserMock where selected.userId==rcvd_evt.userId;
  UserMock user = UserMock::instances().filter(selected:(selected.userId==sigdata.userId)).one();
  // if empty user
  if(user==null) {
    // assign testFailed = TRUE;
    testFailed = true;
  // else
  } else {
    // if user.isCaller
    if(user.isCaller) {
      // if self.callerRcvdInitCall
      if(this.callerRcvdInitCall) {
        // assign testFailed = TRUE;
        testFailed = true;
      // else
      } else {
        // assign self.callerRcvdInitCall = TRUE;
        this.callerRcvdInitCall = true;
      // end if;
      }
    // else
    } else {
      // if self.calledRcvdInitCall
      if(this.calledRcvdInitCall) {
        // assign testFailed = TRUE;
        testFailed = true;
      // else
      } else {
        // assign self.calledRcvdInitCall = TRUE;
        this.calledRcvdInitCall = true;
      // end if;
      }
    // end if;
    }
  // end if;
  }
  // if testFailed
  if(testFailed) {
    // send SEQ::done(variation_number: self.number);
    send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
  // elif self.callerRcvdInitCall and self.calledRcvdInitCall
  } else if((this.callerRcvdInitCall&amp;&amp;this.calledRcvdInitCall)) {
    // select any calledSide from instances of UserMock where selected.isCaller==FALSE;
    UserMock calledSide = UserMock::instances().filter(selected:(selected.isCaller==false)).one();
    // send PhoneXPort::EndCall(UserID: calledSide.userId, ServiceId: calledSide.serviceId);
    send new PhoneXPort::EndCall(UserID=>calledSide.userId, ServiceId=>calledSide.serviceId) to PhoneXPort::instances().one();
  // else
  } else {
  // end if;
  }
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLJx0JHNEeWgtJmFnQKWjw" name="handling terminateCall on both sides">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLJx0pHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // assign testFailed = FALSE;
  Boolean testFailed = false;
  // select any user from instances of UserMock where selected.userId==rcvd_evt.userId;
  UserMock user = UserMock::instances().filter(selected:(selected.userId==sigdata.userId)).one();
  // if empty user
  if(user==null) {
    // assign testFailed = TRUE;
    testFailed = true;
  // else
  } else {
    // if user.isCaller
    if(user.isCaller) {
      // if self.callerRcvdTerminateCall
      if(this.callerRcvdTerminateCall) {
        // assign testFailed = TRUE;
        testFailed = true;
      // else
      } else {
        // assign self.callerRcvdTerminateCall = TRUE;
        this.callerRcvdTerminateCall = true;
      // end if;
      }
    // else
    } else {
      // if self.calledRcvdTerminateCall
      if(this.calledRcvdTerminateCall) {
        // assign testFailed = TRUE;
        testFailed = true;
      // else
      } else {
        // assign self.calledRcvdTerminateCall = TRUE;
        this.calledRcvdTerminateCall = true;
      // end if;
      }
    // end if;
    }
  // end if;
  }
  // if testFailed
  if(testFailed) {
    // send SEQ::done(variation_number: self.number);
    send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
  // elif self.callerRcvdTerminateCall and self.calledRcvdTerminateCall
  } else if((this.callerRcvdTerminateCall&amp;&amp;this.calledRcvdTerminateCall)) {
    // select one tc related by self->TB_TESTCASE[R100];
    TB_TESTCASE tc = ((TB_TESTCASE)(this));
    // assign tc.passed = TRUE;
    tc.passed = true;
    // send SEQ::done(variation_number: self.number);
    send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
  // else
  } else {
  // end if;
  }
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OLKY4JHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OLK_8JHNEeWgtJmFnQKWjw" name="wait"/>
              </region>
            </ownedBehavior>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OCsZYJHNEeWgtJmFnQKWjw" name="SuccessfullRegistration" classifierBehavior="_OLK_9JHNEeWgtJmFnQKWjw" isActive="true">
            <generalization xmi:type="uml:Generalization" xmi:id="_OEz5QZHNEeWgtJmFnQKWjw" general="_OCzuIJHNEeWgtJmFnQKWjw"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODg4wJHNEeWgtJmFnQKWjw" name="expectedUserId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODg4wZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODhf0JHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OLK_9JHNEeWgtJmFnQKWjw" name="SuccessfullRegistrationStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OLLnAZHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OLRGkJHNEeWgtJmFnQKWjw" name="tr_init" source="_OLP4cZHNEeWgtJmFnQKWjw" target="_OLP4c5HNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ONetEZHNEeWgtJmFnQKWjw" name="TXN_1_TB_TESTCASE2_2" source="_OLLnA5HNEeWgtJmFnQKWjw" target="_OLM1IJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONetE5HNEeWgtJmFnQKWjw" name="TXN_1_TB_TESTCASE2_2_trigger" event="_OMtRAZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONetFJHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE3_3" source="_OLM1IJHNEeWgtJmFnQKWjw" target="_OLNcMJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONfUIZHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONfUIpHNEeWgtJmFnQKWjw" name="TXN_3_TB_TESTCASE4_4" source="_OLNcMJHNEeWgtJmFnQKWjw" target="_OLODQZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONfUJJHNEeWgtJmFnQKWjw" name="TXN_3_TB_TESTCASE4_4_trigger" event="_OMufI5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONf7MJHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE10_5" source="_OLM1IJHNEeWgtJmFnQKWjw" target="_OLOqUZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONf7MpHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE10_5_trigger" event="_OMxicZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONf7M5HNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE3_3" source="_OLOqUZHNEeWgtJmFnQKWjw" target="_OLNcMJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONgiQJHNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONgiQZHNEeWgtJmFnQKWjw" name="TXN_0_TB_TESTCASE1_1" source="_OLP4c5HNEeWgtJmFnQKWjw" target="_OLLnA5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONgiQ5HNEeWgtJmFnQKWjw" name="TXN_0_TB_TESTCASE1_1_trigger" event="_OMsp85HNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_OLLnA5HNEeWgtJmFnQKWjw" name="setting up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLMOEZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // assign self.expectedUserId = 10;
  this.expectedUserId = 10;
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLM1IJHNEeWgtJmFnQKWjw" name="registering user">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLM1IpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send PhoneXPort::RegisterUser(UserID: self.expectedUserId, ServiceId: 0);
  send new PhoneXPort::RegisterUser(UserID=>this.expectedUserId, ServiceId=>0) to PhoneXPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLNcMJHNEeWgtJmFnQKWjw" name="cleaning up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLNcMpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // UserMock::cleanup();
  UserMock::cleanup();
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLODQZHNEeWgtJmFnQKWjw" name="reporting results">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLODQ5HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one test_case related by self->TB_TESTCASE[R100];
  TB_TESTCASE test_case = ((TB_TESTCASE)(this));
  // send SEQ::results(passed: test_case.passed, variation_number: self.number, label: test_case.label);
  send new SEQ::results(passed=>test_case.passed, variation_number=>((TB_TESTCASE)(this)).number, label=>test_case.label) to SEQ::instances().one();
  // unrelate test_case from self across R100;
  // Unrelation across generalization is not needed anymore.
  // delete object instance test_case;
  //Superclass instance does not need to be deleted.
  //test_case.destroy();
  // delete object instance self;
  delete this;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLOqUZHNEeWgtJmFnQKWjw" name="handling registrationResult">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLPRYZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select any user from instances of UserMock where selected.userId==rcvd_evt.userId;
  UserMock user = UserMock::instances().filter(selected:(selected.userId==sigdata.userId)).one();
  // if not empty user
  if(!(user==null)) {
    // if user.userId==self.expectedUserId and rcvd_evt.isSuccessfull==TRUE
    if(((user.userId==this.expectedUserId)&amp;&amp;(sigdata.isSuccessfull==true))) {
      // select one tc related by self->TB_TESTCASE[R100];
      TB_TESTCASE tc = ((TB_TESTCASE)(this));
      // assign tc.passed = TRUE;
      tc.passed = true;
    // end if;
    }
  // end if;
  }
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OLP4cZHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OLP4c5HNEeWgtJmFnQKWjw" name="wait"/>
              </region>
            </ownedBehavior>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OCtngJHNEeWgtJmFnQKWjw" name="UnSuccessfullRegistration" classifierBehavior="_OLRGkpHNEeWgtJmFnQKWjw" isActive="true">
            <generalization xmi:type="uml:Generalization" xmi:id="_OE0gUZHNEeWgtJmFnQKWjw" general="_OCzuIJHNEeWgtJmFnQKWjw"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODit8JHNEeWgtJmFnQKWjw" name="expectedUserId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODit8ZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODit8pHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OLRGkpHNEeWgtJmFnQKWjw" name="UnSuccessfullRegistrationStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OLRtoJHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OLX0QZHNEeWgtJmFnQKWjw" name="tr_init" source="_OLV_EJHNEeWgtJmFnQKWjw" target="_OLXNMZHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ONgiRJHNEeWgtJmFnQKWjw" name="TXN_1_TB_TESTCASE2_2" source="_OLSUsZHNEeWgtJmFnQKWjw" target="_OLS7wZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONhJUZHNEeWgtJmFnQKWjw" name="TXN_1_TB_TESTCASE2_2_trigger" event="_OMtRAZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONhJUpHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE3_3" source="_OLS7wZHNEeWgtJmFnQKWjw" target="_OLTi0pHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONhJVJHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONhwYJHNEeWgtJmFnQKWjw" name="TXN_3_TB_TESTCASE4_4" source="_OLTi0pHNEeWgtJmFnQKWjw" target="_OLUJ45HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONhwYpHNEeWgtJmFnQKWjw" name="TXN_3_TB_TESTCASE4_4_trigger" event="_OMufI5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONhwY5HNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE10_5" source="_OLS7wZHNEeWgtJmFnQKWjw" target="_OLVYAJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONiXcJHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE10_5_trigger" event="_OMxicZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONiXcZHNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE3_3" source="_OLVYAJHNEeWgtJmFnQKWjw" target="_OLTi0pHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONiXc5HNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONiXdJHNEeWgtJmFnQKWjw" name="TXN_0_TB_TESTCASE1_1" source="_OLXNMZHNEeWgtJmFnQKWjw" target="_OLSUsZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONi-gZHNEeWgtJmFnQKWjw" name="TXN_0_TB_TESTCASE1_1_trigger" event="_OMsp85HNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_OLSUsZHNEeWgtJmFnQKWjw" name="setting up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLSUs5HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // assign self.expectedUserId = 10;
  this.expectedUserId = 10;
  // create object instance userA of UserMock;
  UserMock userA = new UserMock();
  // assign userA.serviceId = 0;
  userA.serviceId = 0;
  // assign userA.userId = self.expectedUserId;
  userA.userId = this.expectedUserId;
  // assign userA.isBusy = FALSE;
  userA.isBusy = false;
  // assign userA.isCaller = FALSE;
  userA.isCaller = false;
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLS7wZHNEeWgtJmFnQKWjw" name="registering user">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLTi0JHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send PhoneXPort::RegisterUser(UserID: self.expectedUserId, ServiceId: 0);
  send new PhoneXPort::RegisterUser(UserID=>this.expectedUserId, ServiceId=>0) to PhoneXPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLTi0pHNEeWgtJmFnQKWjw" name="cleaning up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLUJ4ZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // UserMock::cleanup();
  UserMock::cleanup();
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLUJ45HNEeWgtJmFnQKWjw" name="reporting results">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLUw8ZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one test_case related by self->TB_TESTCASE[R100];
  TB_TESTCASE test_case = ((TB_TESTCASE)(this));
  // send SEQ::results(passed: test_case.passed, variation_number: self.number, label: test_case.label);
  send new SEQ::results(passed=>test_case.passed, variation_number=>((TB_TESTCASE)(this)).number, label=>test_case.label) to SEQ::instances().one();
  // unrelate test_case from self across R100;
  // Unrelation across generalization is not needed anymore.
  // delete object instance test_case;
  //Superclass instance does not need to be deleted.
  //test_case.destroy();
  // delete object instance self;
  delete this;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLVYAJHNEeWgtJmFnQKWjw" name="handling registrationResult">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLVYApHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // if rcvd_evt.userId==self.expectedUserId and rcvd_evt.isSuccessfull==FALSE
  if(((sigdata.userId==this.expectedUserId)&amp;&amp;(sigdata.isSuccessfull==false))) {
    // select one tc related by self->TB_TESTCASE[R100];
    TB_TESTCASE tc = ((TB_TESTCASE)(this));
    // assign tc.passed = TRUE;
    tc.passed = true;
  // end if;
  }
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OLV_EJHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OLXNMZHNEeWgtJmFnQKWjw" name="wait"/>
              </region>
            </ownedBehavior>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OCvcsJHNEeWgtJmFnQKWjw" name="UnknownNumber" classifierBehavior="_OLX0Q5HNEeWgtJmFnQKWjw" isActive="true">
            <generalization xmi:type="uml:Generalization" xmi:id="_OE0gU5HNEeWgtJmFnQKWjw" general="_OCzuIJHNEeWgtJmFnQKWjw"/>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OLX0Q5HNEeWgtJmFnQKWjw" name="UnknownNumberStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OLYbUZHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OLd64JHNEeWgtJmFnQKWjw" name="tr_init" source="_OLcswZHNEeWgtJmFnQKWjw" target="_OLdT0JHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ONi-gpHNEeWgtJmFnQKWjw" name="TXN_1_TB_TESTCASE2_2" source="_OLYbU5HNEeWgtJmFnQKWjw" target="_OLZpcJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONjlkJHNEeWgtJmFnQKWjw" name="TXN_1_TB_TESTCASE2_2_trigger" event="_OMtRAZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONjlkZHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE3_3" source="_OLZpcJHNEeWgtJmFnQKWjw" target="_OLaQgZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONjlk5HNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONjllJHNEeWgtJmFnQKWjw" name="TXN_3_TB_TESTCASE4_4" source="_OLaQgZHNEeWgtJmFnQKWjw" target="_OLbeoJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONkMoZHNEeWgtJmFnQKWjw" name="TXN_3_TB_TESTCASE4_4_trigger" event="_OMufI5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONkMopHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE9_5" source="_OLZpcJHNEeWgtJmFnQKWjw" target="_OLcFsZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONkMpJHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE9_5_trigger" event="_OMw7Y5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONkMpZHNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE3_3" source="_OLcFsZHNEeWgtJmFnQKWjw" target="_OLaQgZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONkzsJHNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONkzsZHNEeWgtJmFnQKWjw" name="TXN_0_TB_TESTCASE1_1" source="_OLdT0JHNEeWgtJmFnQKWjw" target="_OLYbU5HNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONkzs5HNEeWgtJmFnQKWjw" name="TXN_0_TB_TESTCASE1_1_trigger" event="_OMsp85HNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_OLYbU5HNEeWgtJmFnQKWjw" name="setting up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLZCYZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // create object instance userA of UserMock;
  UserMock userA = new UserMock();
  // assign userA.serviceId = 0;
  userA.serviceId = 0;
  // assign userA.userId = 10;
  userA.userId = 10;
  // assign userA.isBusy = FALSE;
  userA.isBusy = false;
  // assign userA.isCaller = TRUE;
  userA.isCaller = true;
  // create object instance userB of UserMock;
  UserMock userB = new UserMock();
  // assign userB.serviceId = 0;
  userB.serviceId = 0;
  // assign userB.userId = 20;
  userB.userId = 20;
  // assign userB.isBusy = TRUE;
  userB.isBusy = true;
  // assign userB.isCaller = FALSE;
  userB.isCaller = false;
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLZpcJHNEeWgtJmFnQKWjw" name="initiating call">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLZpcpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send PhoneXPort::CallSignal(CallerID: 10, CalledID: 30, ServiceId: 0);
  send new PhoneXPort::CallSignal(CallerID=>10, CalledID=>30, ServiceId=>0) to PhoneXPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLaQgZHNEeWgtJmFnQKWjw" name="cleaning up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLa3kZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // UserMock::cleanup();
  UserMock::cleanup();
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLbeoJHNEeWgtJmFnQKWjw" name="reporting results">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLbeopHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one test_case related by self->TB_TESTCASE[R100];
  TB_TESTCASE test_case = ((TB_TESTCASE)(this));
  // send SEQ::results(passed: test_case.passed, variation_number: self.number, label: test_case.label);
  send new SEQ::results(passed=>test_case.passed, variation_number=>((TB_TESTCASE)(this)).number, label=>test_case.label) to SEQ::instances().one();
  // unrelate test_case from self across R100;
  // Unrelation across generalization is not needed anymore.
  // delete object instance test_case;
  //Superclass instance does not need to be deleted.
  //test_case.destroy();
  // delete object instance self;
  delete this;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLcFsZHNEeWgtJmFnQKWjw" name="handling unknownNumber on caller side">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLcFs5HNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select any user from instances of UserMock where selected.userId==rcvd_evt.userId;
  UserMock user = UserMock::instances().filter(selected:(selected.userId==sigdata.userId)).one();
  // if user.isCaller
  if(user.isCaller) {
    // select one tc related by self->TB_TESTCASE[R100];
    TB_TESTCASE tc = ((TB_TESTCASE)(this));
    // assign tc.passed = TRUE;
    tc.passed = true;
  // end if;
  }
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OLcswZHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OLdT0JHNEeWgtJmFnQKWjw" name="wait"/>
              </region>
            </ownedBehavior>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OCxR4JHNEeWgtJmFnQKWjw" name="UserBusy" classifierBehavior="_OLd64pHNEeWgtJmFnQKWjw" isActive="true">
            <generalization xmi:type="uml:Generalization" xmi:id="_OE1HYZHNEeWgtJmFnQKWjw" general="_OCzuIJHNEeWgtJmFnQKWjw"/>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OLd64pHNEeWgtJmFnQKWjw" name="UserBusyStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OLeh8JHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OLkokJHNEeWgtJmFnQKWjw" name="tr_init" source="_OLkBgJHNEeWgtJmFnQKWjw" target="_OLkBgpHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_ONkztJHNEeWgtJmFnQKWjw" name="TXN_1_TB_TESTCASE2_2" source="_OLeh8pHNEeWgtJmFnQKWjw" target="_OLgXIJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONlawJHNEeWgtJmFnQKWjw" name="TXN_1_TB_TESTCASE2_2_trigger" event="_OMtRAZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONlawZHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE3_3" source="_OLgXIJHNEeWgtJmFnQKWjw" target="_OLhlQJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONlaw5HNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONlaxJHNEeWgtJmFnQKWjw" name="TXN_3_TB_TESTCASE4_4" source="_OLhlQJHNEeWgtJmFnQKWjw" target="_OLiMUZHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONmB0JHNEeWgtJmFnQKWjw" name="TXN_3_TB_TESTCASE4_4_trigger" event="_OMufI5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONmB0ZHNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE5_5" source="_OLgXIJHNEeWgtJmFnQKWjw" target="_OLizYpHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONmB05HNEeWgtJmFnQKWjw" name="TXN_2_TB_TESTCASE5_5_trigger" event="_OMvGM5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONmB1JHNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE3_3" source="_OLizYpHNEeWgtJmFnQKWjw" target="_OLhlQJHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONmo4ZHNEeWgtJmFnQKWjw" name="TXN_5_TB_TESTCASE3_3_trigger" event="_OMt4E5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_ONmo4pHNEeWgtJmFnQKWjw" name="TXN_0_TB_TESTCASE1_1" source="_OLkBgpHNEeWgtJmFnQKWjw" target="_OLeh8pHNEeWgtJmFnQKWjw">
                  <trigger xmi:type="uml:Trigger" xmi:id="_ONmo5JHNEeWgtJmFnQKWjw" name="TXN_0_TB_TESTCASE1_1_trigger" event="_OMsp85HNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_OLeh8pHNEeWgtJmFnQKWjw" name="setting up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLeh9JHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // create object instance userA of UserMock;
  UserMock userA = new UserMock();
  // assign userA.serviceId = 0;
  userA.serviceId = 0;
  // assign userA.userId = 10;
  userA.userId = 10;
  // assign userA.isBusy = FALSE;
  userA.isBusy = false;
  // assign userA.isCaller = TRUE;
  userA.isCaller = true;
  // create object instance userB of UserMock;
  UserMock userB = new UserMock();
  // assign userB.serviceId = 0;
  userB.serviceId = 0;
  // assign userB.userId = 20;
  userB.userId = 20;
  // assign userB.isBusy = TRUE;
  userB.isBusy = true;
  // assign userB.isCaller = FALSE;
  userB.isCaller = false;
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLgXIJHNEeWgtJmFnQKWjw" name="initiating call">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLgXIpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send PhoneXPort::CallSignal(CallerID: 10, CalledID: 20, ServiceId: 0);
  send new PhoneXPort::CallSignal(CallerID=>10, CalledID=>20, ServiceId=>0) to PhoneXPort::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLhlQJHNEeWgtJmFnQKWjw" name="cleaning up">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLhlQpHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // send PhoneXPort::EndAllCall();
  send new PhoneXPort::EndAllCall() to PhoneXPort::instances().one();
  // UserMock::cleanup();
  UserMock::cleanup();
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLiMUZHNEeWgtJmFnQKWjw" name="reporting results">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLizYJHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select one test_case related by self->TB_TESTCASE[R100];
  TB_TESTCASE test_case = ((TB_TESTCASE)(this));
  // send SEQ::results(passed: test_case.passed, variation_number: self.number, label: test_case.label);
  send new SEQ::results(passed=>test_case.passed, variation_number=>((TB_TESTCASE)(this)).number, label=>test_case.label) to SEQ::instances().one();
  // unrelate test_case from self across R100;
  // Unrelation across generalization is not needed anymore.
  // delete object instance test_case;
  //Superclass instance does not need to be deleted.
  //test_case.destroy();
  // delete object instance self;
  delete this;
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_OLizYpHNEeWgtJmFnQKWjw" name="handling lineIsBusy on caller side">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_OLjacZHNEeWgtJmFnQKWjw" name="entryBehavior">
                    <language>rALF</language>
                    <body>  // select any user from instances of UserMock where selected.userId==rcvd_evt.userId;
  UserMock user = UserMock::instances().filter(selected:(selected.userId==sigdata.userId)).one();
  // if user.isCaller
  if(user.isCaller) {
    // select one tc related by self->TB_TESTCASE[R100];
    TB_TESTCASE tc = ((TB_TESTCASE)(this));
    // assign tc.passed = TRUE;
    tc.passed = true;
  // end if;
  }
  // send SEQ::done(variation_number: self.number);
  send new SEQ::done(variation_number=>((TB_TESTCASE)(this)).number) to SEQ::instances().one();
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OLkBgJHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OLkBgpHNEeWgtJmFnQKWjw" name="wait"/>
              </region>
            </ownedBehavior>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OCygAJHNEeWgtJmFnQKWjw" name="UserMock">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODjVAZHNEeWgtJmFnQKWjw" name="userId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODjVApHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODjVA5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODkjIJHNEeWgtJmFnQKWjw" name="isBusy">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODkjIZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODkjIpHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODlxQJHNEeWgtJmFnQKWjw" name="isCaller">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODlxQZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODlxQpHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODm_YJHNEeWgtJmFnQKWjw" name="serviceId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODm_YZHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODm_YpHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OD89oZHNEeWgtJmFnQKWjw" name="cleanup$method$1" specification="_OD8WkJHNEeWgtJmFnQKWjw">
              <language>rALF</language>
              <body>  // select many users from instances of UserMock;
  Set&lt;UserMock> users = UserMock::instances();
  // for each user in users
  for(UserMock __user in users) {
    UserMock user = __user;
    // delete object instance user;
    delete user;
  // end for;
  }
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OD8WkJHNEeWgtJmFnQKWjw" name="cleanup" isStatic="true" method="_OD89oZHNEeWgtJmFnQKWjw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OCzuIJHNEeWgtJmFnQKWjw" name="TB_TESTCASE" isAbstract="true" classifierBehavior="_EUtkQJHlEeWvyKzsGTpJ3A" isActive="true">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODnmcZHNEeWgtJmFnQKWjw" name="label">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODoNgJHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODoNgZHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODo0kZHNEeWgtJmFnQKWjw" name="number">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODpboJHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODpboZHNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ODqCsZHNEeWgtJmFnQKWjw" name="passed">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ODqCspHNEeWgtJmFnQKWjw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODqCs5HNEeWgtJmFnQKWjw" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OD-LwZHNEeWgtJmFnQKWjw" name="setup_tc$method$1" specification="_OD9ksZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OD_Z4ZHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OD_Z4pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OD_Z45HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEAoAZHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEAoApHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEAoA5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <language>rALF</language>
              <body>  // bridge LogInfo(message: &quot;***Test case setup***&quot;);&#xD;
  LOG::LogInfo(message=>&quot;***Test case setup***&quot;);&#xD;
  // assign testnumber = param.variation_number;&#xD;
  Integer testnumber = variation_number;&#xD;
  // if testnumber==1&#xD;
  if((testnumber==1)) {&#xD;
    // create object instance tc of NormalCall;&#xD;
    NormalCall tc = new NormalCall();&#xD;
    // transform tcbase.init(number: testnumber, label: &quot;tc_normal_call&quot;);&#xD;
    tc.init(number=>testnumber, label=>&quot;tc_normal_call&quot;);&#xD;
    // relate tcbase to tc across R100;&#xD;
    //Relation across generalization relation is not needed anymore&#xD;
  // elif testnumber==2&#xD;
  } else if((testnumber==2)) {&#xD;
    // create object instance tc of UserBusy;&#xD;
    UserBusy tc = new UserBusy();&#xD;
    // transform tcbase.init(number: testnumber, label: &quot;tc_normal_call&quot;);&#xD;
    tc.init(number=>testnumber, label=>&quot;tc_normal_call&quot;);&#xD;
    // relate tcbase to tc across R100;&#xD;
    //Relation across generalization relation is not needed anymore&#xD;
  // elif testnumber==3&#xD;
  } else if((testnumber==3)) {&#xD;
    // create object instance tc of UnknownNumber;&#xD;
    UnknownNumber tc = new UnknownNumber();&#xD;
    // transform tcbase.init(number: testnumber, label: &quot;tc_normal_call&quot;);&#xD;
    tc.init(number=>testnumber, label=>&quot;tc_normal_call&quot;);&#xD;
    // relate tcbase to tc across R100;&#xD;
    //Relation across generalization relation is not needed anymore&#xD;
  // elif testnumber==4&#xD;
  } else if((testnumber==4)) {&#xD;
    // create object instance tc of SuccessfullRegistration;&#xD;
    SuccessfullRegistration tc = new SuccessfullRegistration();&#xD;
    // transform tcbase.init(number: testnumber, label: &quot;tc_successfull_registration&quot;);&#xD;
    tc.init(number=>testnumber, label=>&quot;tc_successfull_registration&quot;);&#xD;
  // elif testnumber==5&#xD;
  } else if((testnumber==5)) {&#xD;
    // create object instance tc of UnSuccessfullRegistration;&#xD;
    UnSuccessfullRegistration tc = new UnSuccessfullRegistration();&#xD;
    // transform tcbase.init(number: testnumber, label: &quot;tc_unsuccessfull_registration&quot;);&#xD;
    tc.init(number=>testnumber, label=>&quot;tc_unsuccessfull_registration&quot;);&#xD;
  // else&#xD;
  } else {&#xD;
  // end if;&#xD;
  }&#xD;
  // return 5;&#xD;
  return 5;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OEB2IZHNEeWgtJmFnQKWjw" name="init$method$1" specification="_OEBPEZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEDEQZHNEeWgtJmFnQKWjw" name="number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEDEQpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEDEQ5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEE5cJHNEeWgtJmFnQKWjw" name="label">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEE5cZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEE5cpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <language>rALF</language>
              <body>  // assign self.number = param.number;
  this.number = number;
  // assign self.label = param.label;
  this.label = label;
  // assign self.passed = FALSE;
  this.passed = false;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_EUtkQJHlEeWvyKzsGTpJ3A" name="TB_TESTCASESM">
              <region xmi:type="uml:Region" xmi:id="_F3vdQJHlEeWvyKzsGTpJ3A" name="Region1">
                <transition xmi:type="uml:Transition" xmi:id="_Mr9jEJHlEeWvyKzsGTpJ3A" source="_KfMJgJHlEeWvyKzsGTpJ3A" target="_LHlmQJHlEeWvyKzsGTpJ3A"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_KfMJgJHlEeWvyKzsGTpJ3A" name="Initial1"/>
                <subvertex xmi:type="uml:State" xmi:id="_LHlmQJHlEeWvyKzsGTpJ3A" name="wait"/>
              </region>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OD9ksZHNEeWgtJmFnQKWjw" name="setup_tc" isStatic="true" method="_OD-LwZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OD-y0ZHNEeWgtJmFnQKWjw" name="returnValue" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OD-y0pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OD-y05HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEAA8ZHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEAA8pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEAA85HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OEBPEZHNEeWgtJmFnQKWjw" name="init" method="_OEB2IZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OECdMZHNEeWgtJmFnQKWjw" name="number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OECdMpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OECdM5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OEDrUZHNEeWgtJmFnQKWjw" name="label">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OEDrUpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEDrU5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMsC5ZHNEeWgtJmFnQKWjw" name="setup"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMsp9JHNEeWgtJmFnQKWjw" name="execute"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMtRApHNEeWgtJmFnQKWjw" name="cleanup"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMt4FJHNEeWgtJmFnQKWjw" name="report"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMufJJHNEeWgtJmFnQKWjw" name="lineIsBusy">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OND2VJHNEeWgtJmFnQKWjw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OND2VZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OND2VpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMvGNJHNEeWgtJmFnQKWjw" name="calledBy">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONFEcZHNEeWgtJmFnQKWjw" name="calledId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONFEcpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONFEc5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONGSkJHNEeWgtJmFnQKWjw" name="callerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONGSkZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONGSkpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONHgs5HNEeWgtJmFnQKWjw" name="serviceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONIHwJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONIHwZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMvtQ5HNEeWgtJmFnQKWjw" name="initiateCall">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONIu0ZHNEeWgtJmFnQKWjw" name="serviceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONIu0pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONIu05HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONJ88JHNEeWgtJmFnQKWjw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONJ88ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONJ88pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMwUUpHNEeWgtJmFnQKWjw" name="terminateCall">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONKkBJHNEeWgtJmFnQKWjw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONLLEJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONLLEZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMwUV5HNEeWgtJmFnQKWjw" name="unknownNumber">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONLyJJHNEeWgtJmFnQKWjw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONMZMJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONMZMZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OMw7ZJHNEeWgtJmFnQKWjw" name="registrationResult">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONNAQZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONNAQpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONNAQ5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ONNnVJHNEeWgtJmFnQKWjw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONOOYJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONOOYZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMsp8ZHNEeWgtJmFnQKWjw" name="setup" signal="_OMsC5ZHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMsp9pHNEeWgtJmFnQKWjw" name="execute" signal="_OMsp9JHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMt4EZHNEeWgtJmFnQKWjw" name="cleanup" signal="_OMtRApHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMufIZHNEeWgtJmFnQKWjw" name="report" signal="_OMt4FJHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMvGMZHNEeWgtJmFnQKWjw" name="lineIsBusy" signal="_OMufJJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONEdYZHNEeWgtJmFnQKWjw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONEdYpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONEdY5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMvtQJHNEeWgtJmFnQKWjw" name="calledBy" signal="_OMvGNJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONFrgZHNEeWgtJmFnQKWjw" name="calledId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONFrgpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONFrg5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONG5oJHNEeWgtJmFnQKWjw" name="callerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONHgsJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONHgsZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONIHw5HNEeWgtJmFnQKWjw" name="serviceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONIHxJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONIHxZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMvtRZHNEeWgtJmFnQKWjw" name="initiateCall" signal="_OMvtQ5HNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONJV4ZHNEeWgtJmFnQKWjw" name="serviceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONJV4pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONJV45HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONKkAJHNEeWgtJmFnQKWjw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONKkAZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONKkApHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMwUVJHNEeWgtJmFnQKWjw" name="terminateCall" signal="_OMwUUpHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONLyIJHNEeWgtJmFnQKWjw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONLyIZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONLyIpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMw7YZHNEeWgtJmFnQKWjw" name="unknownNumber" signal="_OMwUV5HNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONMZM5HNEeWgtJmFnQKWjw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONMZNJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONMZNZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OMw7ZpHNEeWgtJmFnQKWjw" name="registrationResult" signal="_OMw7ZJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONNnUJHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONNnUZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONNnUpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ONOOY5HNEeWgtJmFnQKWjw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ONOOZJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ONO1cJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OKUEUZHNEeWgtJmFnQKWjw" name="functions">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKVScJHNEeWgtJmFnQKWjw" name="init$method$1" specification="_OKUrYZHNEeWgtJmFnQKWjw">
              <language>rALF</language>
              <body>  // assign suite_name = &quot;PhoneX unit test suite&quot;;
  String suite_name = &quot;PhoneX unit test suite&quot;;
  // assign suite_version = &quot;0.1&quot;;
  String suite_version = &quot;0.1&quot;;
  // assign number_of_variations = test case::setup_tc(variation_number: 0);
  Integer number_of_variations = TB_TESTCASE::setup_tc(variation_number=>0);
  // send SEQ::register(test_suite_name: suite_name, test_suite_version: suite_version, variation_count: number_of_variations);
  send new SEQ::register(test_suite_name=>suite_name, test_suite_version=>suite_version, variation_count=>number_of_variations) to SEQ::instances().one();
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OKUrYZHNEeWgtJmFnQKWjw" name="init" isStatic="true" method="_OKVScJHNEeWgtJmFnQKWjw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OH6QkZHNEeWgtJmFnQKWjw" name="SEQ" classifierBehavior="_OH8s0JHNEeWgtJmFnQKWjw" isActive="true">
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OH8s0JHNEeWgtJmFnQKWjw" name="SEQStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OH_wIJHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OIHr8JHNEeWgtJmFnQKWjw" name="tr_init" source="_OICMYJHNEeWgtJmFnQKWjw" target="_OIFPsJHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_OIKvQZHNEeWgtJmFnQKWjw" name="register" source="_OIFPsJHNEeWgtJmFnQKWjw" target="_OIFPsJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OINLgJHNEeWgtJmFnQKWjw" name="register$method$1" specification="_OII6EJHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIOZo5HNEeWgtJmFnQKWjw" name="test_suite_name">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIOZpJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIOZpZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIPnwZHNEeWgtJmFnQKWjw" name="test_suite_version">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIPnwpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIPnw5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIQ14ZHNEeWgtJmFnQKWjw" name="variation_count">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIQ14pHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIQ145HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any bucket from instances of SEQ_BUCKET;
  SEQ_BUCKET bucket = SEQ_BUCKET::instances().one();
  // if not_empty bucket
  if(bucket!=null) {
    // generate SEQ_BUCKET1:'register'test_suite_name: param.test_suite_name, test_suite_version: param.test_suite_version, variation_count: param.variation_count to bucket;
    send new SEQ_BUCKET::register(test_suite_name=>sigdata.test_suite_name, test_suite_version=>sigdata.test_suite_version, variation_count=>sigdata.variation_count) to bucket;
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OIMkcJHNEeWgtJmFnQKWjw" name="register_trigger" event="_OIKvQJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OIRc9JHNEeWgtJmFnQKWjw" name="done" source="_OIFPsJHNEeWgtJmFnQKWjw" target="_OIFPsJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OISEA5HNEeWgtJmFnQKWjw" name="done$method$1" specification="_OIQ15ZHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OISrF5HNEeWgtJmFnQKWjw" name="variation_number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OITSIJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OITSIZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any test_case from instances of SEQ_TESTCASE where selected.test_case_number==param.variation_number;
  SEQ_TESTCASE test_case = SEQ_TESTCASE::instances().filter(selected:(selected.test_case_number==sigdata.variation_number)).one();
  // if not_empty test_case
  if(test_case!=null) {
    // generate SEQ_TESTCASE2:'step_done' to test_case;
    send new SEQ_TESTCASE::step_done() to test_case;
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OISEAJHNEeWgtJmFnQKWjw" name="done_trigger" event="_OIRc85HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OIT5MZHNEeWgtJmFnQKWjw" name="results" source="_OIFPsJHNEeWgtJmFnQKWjw" target="_OIFPsJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OIUgQJHNEeWgtJmFnQKWjw" name="results$method$1" specification="_OITSI5HNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIVuYZHNEeWgtJmFnQKWjw" name="passed">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIVuYpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIVuY5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIWVdZHNEeWgtJmFnQKWjw" name="variation_number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIW8gJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIW8gZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIXjk5HNEeWgtJmFnQKWjw" name="label">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIXjlJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIXjlZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any test_case from instances of SEQ_TESTCASE where selected.test_case_number==param.variation_number;
  SEQ_TESTCASE test_case = SEQ_TESTCASE::instances().filter(selected:(selected.test_case_number==sigdata.variation_number)).one();
  // if not_empty test_case
  if(test_case!=null) {
    // generate SEQ_TESTCASE3:'results'passed: param.passed, label: param.label to test_case;
    send new SEQ_TESTCASE::results(passed=>sigdata.passed, label=>sigdata.label) to test_case;
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OIT5M5HNEeWgtJmFnQKWjw" name="results_trigger" event="_OIT5MJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OIYKpZHNEeWgtJmFnQKWjw" name="run" source="_OIFPsJHNEeWgtJmFnQKWjw" target="_OIFPsJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OIYxtJHNEeWgtJmFnQKWjw" name="run$method$1" specification="_OIYKoJHNEeWgtJmFnQKWjw">
                    <language>rALF</language>
                    <body>  // runAll();
  testfunctions::runAll();
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OIYxsZHNEeWgtJmFnQKWjw" name="run_trigger" event="_OIYKpJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OIZ_05HNEeWgtJmFnQKWjw" name="discover" source="_OIFPsJHNEeWgtJmFnQKWjw" target="_OIFPsJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OIam4ZHNEeWgtJmFnQKWjw" name="discover$method$1" specification="_OIZYwZHNEeWgtJmFnQKWjw">
                    <language>rALF</language>
                    <body>  // init();
  functions::init();
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OIZ_1ZHNEeWgtJmFnQKWjw" name="discover_trigger" event="_OIZ_0pHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OIbN8pHNEeWgtJmFnQKWjw" name="setup" source="_OIFPsJHNEeWgtJmFnQKWjw" target="_OIFPsJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OIb1AJHNEeWgtJmFnQKWjw" name="setup$method$1" specification="_OIam45HNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIccFJHNEeWgtJmFnQKWjw" name="variation_number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIdDIJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIdDIZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // assign n = test case::setup_tc(variation_number: param.variation_number);
  Integer n = TB_TESTCASE::setup_tc(variation_number=>sigdata.variation_number);
  // select any test_case from instances of TB_TESTCASE where selected.number==param.variation_number;
  TB_TESTCASE test_case = TB_TESTCASE::instances().filter(selected:(selected.number==sigdata.variation_number)).one();
  // if not_empty test_case
  if(test_case!=null) {
    // generate TB_TESTCASE1:'setup' to test_case;
    send new TB_TESTCASE::setup() to test_case;
  // else
  } else {
    // bridge LogFailure(message: &quot;PORT: SEQ, SIGNAL: setup, PARAM: variation number, REASON: select resulted in empty instance&quot;);
    LOG::LogFailure(message=>&quot;PORT: SEQ, SIGNAL: setup, PARAM: variation number, REASON: select resulted in empty instance&quot;);
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OIbN9JHNEeWgtJmFnQKWjw" name="setup_trigger" event="_OIbN8ZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OIdqM5HNEeWgtJmFnQKWjw" name="report" source="_OIFPsJHNEeWgtJmFnQKWjw" target="_OIFPsJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OIeRQ5HNEeWgtJmFnQKWjw" name="report$method$1" specification="_OIdDI5HNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIffY5HNEeWgtJmFnQKWjw" name="variation_number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIffZJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIffZZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any test_case from instances of TB_TESTCASE where selected.number==param.variation_number;
  TB_TESTCASE test_case = TB_TESTCASE::instances().filter(selected:(selected.number==sigdata.variation_number)).one();
  // if not_empty test_case
  if(test_case!=null) {
    // generate TB_TESTCASE4:'report' to test_case;
    send new TB_TESTCASE::report() to test_case;
  // else
  } else {
    // bridge LogFailure(message: &quot;PORT: SEQ, SIGNAL: report, PARAM: variation number, REASON: select resulted in empty instance&quot;);
    LOG::LogFailure(message=>&quot;PORT: SEQ, SIGNAL: report, PARAM: variation number, REASON: select resulted in empty instance&quot;);
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OIeRQJHNEeWgtJmFnQKWjw" name="report_trigger" event="_OIdqMpHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OIgtg5HNEeWgtJmFnQKWjw" name="execute" source="_OIFPsJHNEeWgtJmFnQKWjw" target="_OIFPsJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OIiisZHNEeWgtJmFnQKWjw" name="execute$method$1" specification="_OIgGcZHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIjw05HNEeWgtJmFnQKWjw" name="variation_number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIkX4JHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIkX4ZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any test_case from instances of TB_TESTCASE where selected.number==param.variation_number;
  TB_TESTCASE test_case = TB_TESTCASE::instances().filter(selected:(selected.number==sigdata.variation_number)).one();
  // if not_empty test_case
  if(test_case!=null) {
    // generate TB_TESTCASE2:'execute' to test_case;
    send new TB_TESTCASE::execute() to test_case;
  // else
  } else {
    // bridge LogFailure(message: &quot;PORT: SEQ, SIGNAL: execute, PARAM: variation number, REASON: select resulted in empty instance&quot;);
    LOG::LogFailure(message=>&quot;PORT: SEQ, SIGNAL: execute, PARAM: variation number, REASON: select resulted in empty instance&quot;);
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OIh7oJHNEeWgtJmFnQKWjw" name="execute_trigger" event="_OIgtgpHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OIm0IpHNEeWgtJmFnQKWjw" name="cleanup" source="_OIFPsJHNEeWgtJmFnQKWjw" target="_OIFPsJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OIoCQZHNEeWgtJmFnQKWjw" name="cleanup$method$1" specification="_OImNEZHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIpQYZHNEeWgtJmFnQKWjw" name="variation_number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIpQYpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIpQY5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any test_case from instances of TB_TESTCASE where selected.number==param.variation_number;
  TB_TESTCASE test_case = TB_TESTCASE::instances().filter(selected:(selected.number==sigdata.variation_number)).one();
  // if not_empty test_case
  if(test_case!=null) {
    // generate TB_TESTCASE3:'cleanup' to test_case;
    send new TB_TESTCASE::cleanup() to test_case;
  // else
  } else {
    // bridge LogFailure(message: &quot;PORT: SEQ, SIGNAL: cleanup, PARAM: variation number, REASON: select resulted in empty instance&quot;);
    LOG::LogFailure(message=>&quot;PORT: SEQ, SIGNAL: cleanup, PARAM: variation number, REASON: select resulted in empty instance&quot;);
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OInbMZHNEeWgtJmFnQKWjw" name="cleanup_trigger" event="_OIm0IZHNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OICMYJHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OIFPsJHNEeWgtJmFnQKWjw" name="Init"/>
              </region>
            </ownedBehavior>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OII6EpHNEeWgtJmFnQKWjw" name="register">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OINyk5HNEeWgtJmFnQKWjw" name="test_suite_name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIOZoJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIOZoZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIPAtJHNEeWgtJmFnQKWjw" name="test_suite_version">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIPAtZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIPAtpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIQO1JHNEeWgtJmFnQKWjw" name="variation_count">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIQO1ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIQO1pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OIRc8ZHNEeWgtJmFnQKWjw" name="done">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OISrE5HNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OISrFJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OISrFZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OITSJZHNEeWgtJmFnQKWjw" name="results">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIVHUZHNEeWgtJmFnQKWjw" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIVHUpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIVHU5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIWVcZHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIWVcpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIWVc5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIW8h5HNEeWgtJmFnQKWjw" name="label">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIXjkJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIXjkZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OIYKopHNEeWgtJmFnQKWjw" name="run"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OIZ_0JHNEeWgtJmFnQKWjw" name="discover"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OIam5ZHNEeWgtJmFnQKWjw" name="setup">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIccEJHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIccEZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIccEpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OIdqMJHNEeWgtJmFnQKWjw" name="report">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIe4VJHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIffYJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIffYZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OIgtgJHNEeWgtJmFnQKWjw" name="execute">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIjJxJHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIjw0JHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIjw0ZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OImNE5HNEeWgtJmFnQKWjw" name="cleanup">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIopUpHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIopU5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIopVJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OII6EJHNEeWgtJmFnQKWjw" name="register" method="_OINLgJHNEeWgtJmFnQKWjw" signal="_OII6EpHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OINLgpHNEeWgtJmFnQKWjw" name="test_suite_name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OINykJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OINykZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIPAsJHNEeWgtJmFnQKWjw" name="test_suite_version">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIPAsZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIPAspHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIQO0JHNEeWgtJmFnQKWjw" name="variation_count">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIQO0ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIQO0pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OIQ15ZHNEeWgtJmFnQKWjw" name="done" method="_OISEA5HNEeWgtJmFnQKWjw" signal="_OIRc8ZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OISEBZHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OISrEJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OISrEZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OITSI5HNEeWgtJmFnQKWjw" name="results" method="_OIUgQJHNEeWgtJmFnQKWjw" signal="_OITSJZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIUgQpHNEeWgtJmFnQKWjw" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIUgQ5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIUgRJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIVuZZHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIVuZpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIVuZ5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIW8g5HNEeWgtJmFnQKWjw" name="label">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIW8hJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIW8hZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OIYKoJHNEeWgtJmFnQKWjw" name="run" method="_OIYxtJHNEeWgtJmFnQKWjw" signal="_OIYKopHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OIZYwZHNEeWgtJmFnQKWjw" name="discover" method="_OIam4ZHNEeWgtJmFnQKWjw" signal="_OIZ_0JHNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OIam45HNEeWgtJmFnQKWjw" name="setup" method="_OIb1AJHNEeWgtJmFnQKWjw" signal="_OIam5ZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIb1ApHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIb1A5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIb1BJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OIdDI5HNEeWgtJmFnQKWjw" name="report" method="_OIeRQ5HNEeWgtJmFnQKWjw" signal="_OIdqMJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIe4UJHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIe4UZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIe4UpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OIgGcZHNEeWgtJmFnQKWjw" name="execute" method="_OIiisZHNEeWgtJmFnQKWjw" signal="_OIgtgJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIjJwJHNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIjJwZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIjJwpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OImNEZHNEeWgtJmFnQKWjw" name="cleanup" method="_OIoCQZHNEeWgtJmFnQKWjw" signal="_OImNE5HNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIoCQ5HNEeWgtJmFnQKWjw" name="variation_number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIoCRJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIopUJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OIp3cJHNEeWgtJmFnQKWjw" name="DBPort" classifierBehavior="_OIqegZHNEeWgtJmFnQKWjw" isActive="true">
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OIqegZHNEeWgtJmFnQKWjw" name="DBPortStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OIrFkJHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OIrsoZHNEeWgtJmFnQKWjw" name="tr_init" source="_OIrFkpHNEeWgtJmFnQKWjw" target="_OIrFlJHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_OIs6wZHNEeWgtJmFnQKWjw" name="AddUserIfNotExist" source="_OIrFlJHNEeWgtJmFnQKWjw" target="_OIrFlJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OIuI4JHNEeWgtJmFnQKWjw" name="AddUserIfNotExist$method$1" specification="_OIrso5HNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIvXAJHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIvXAZHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIvXApHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIwlIZHNEeWgtJmFnQKWjw" name="UserId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIwlIpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIwlI5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any user from instances of UserMock where selected.userId==param.UserId;
  UserMock user = UserMock::instances().filter(selected:(selected.userId==sigdata.UserId)).one();
  // if empty user
  if(user==null) {
    // create object instance user of UserMock;
    user = new UserMock();
    // assign user.userId = param.UserId;
    user.userId = sigdata.UserId;
    // assign user.isBusy = FALSE;
    user.isBusy = false;
    // assign user.serviceId = param.ServiceId;
    user.serviceId = sigdata.ServiceId;
    // send DBPort::AddUserResponse(ServiceId: user.serviceId, UserId: user.userId, isSuccessfull: TRUE);
    send new DBPort::AddUserResponse(ServiceId=>user.serviceId, UserId=>user.userId, isSuccessfull=>true) to DBPort::instances().one();
    // return;
    return;
  // end if;
  }
  // send DBPort::AddUserResponse(ServiceId: param.ServiceId, UserId: param.UserId, isSuccessfull: FALSE);
  send new DBPort::AddUserResponse(ServiceId=>sigdata.ServiceId, UserId=>sigdata.UserId, isSuccessfull=>false) to DBPort::instances().one();
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OIs6w5HNEeWgtJmFnQKWjw" name="AddUserIfNotExist_trigger" event="_OIs6wJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OIxzQpHNEeWgtJmFnQKWjw" name="GetUserStatus" source="_OIrFlJHNEeWgtJmFnQKWjw" target="_OIrFlJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OIyaUZHNEeWgtJmFnQKWjw" name="GetUserStatus$method$1" specification="_OIwlJZHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIzocZHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIzocpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIzoc5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI02lJHNEeWgtJmFnQKWjw" name="UserId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI1doJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI1doZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any userMock from instances of UserMock where selected.userId==param.UserId;
  UserMock userMock = UserMock::instances().filter(selected:(selected.userId==sigdata.UserId)).one();
  // if empty userMock
  if(userMock==null) {
    // send DBPort::UserStatus(ServiceId: param.ServiceId, UserId: param.UserId, isBusy: FALSE, isKnown: FALSE);
    send new DBPort::UserStatus(ServiceId=>sigdata.ServiceId, UserId=>sigdata.UserId, isBusy=>false, isKnown=>false) to DBPort::instances().one();
    // return;
    return;
  // end if;
  }
  // send DBPort::UserStatus(ServiceId: userMock.serviceId, UserId: userMock.userId, isBusy: userMock.isBusy, isKnown: TRUE);
  send new DBPort::UserStatus(ServiceId=>userMock.serviceId, UserId=>userMock.userId, isBusy=>userMock.isBusy, isKnown=>true) to DBPort::instances().one();
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OIxzRJHNEeWgtJmFnQKWjw" name="GetUserStatus_trigger" event="_OIxzQZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OI2EspHNEeWgtJmFnQKWjw" name="SetUserStatus" source="_OIrFlJHNEeWgtJmFnQKWjw" target="_OIrFlJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OI3S0ZHNEeWgtJmFnQKWjw" name="SetUserStatus$method$1" specification="_OI1do5HNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI4g8ZHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI4g8pHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI4g85HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI5vEZHNEeWgtJmFnQKWjw" name="UserId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI5vEpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI5vE5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI69MZHNEeWgtJmFnQKWjw" name="isBusy">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI69MpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI69M5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI8LUpHNEeWgtJmFnQKWjw" name="isRemovingNow">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI8LU5HNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI8LVJHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any userMock from instances of UserMock where selected.userId==param.UserId;
  UserMock userMock = UserMock::instances().filter(selected:(selected.userId==sigdata.UserId)).one();
  // if empty userMock
  if(userMock==null) {
    // send DBPort::SetUserStatusResponse(ServiceId: param.ServiceId, UserId: param.UserId, isSuccessfull: FALSE);
    send new DBPort::SetUserStatusResponse(ServiceId=>sigdata.ServiceId, UserId=>sigdata.UserId, isSuccessfull=>false) to DBPort::instances().one();
    // return;
    return;
  // end if;
  }
  // assign userMock.isBusy = param.isBusy;
  userMock.isBusy = sigdata.isBusy;
  // assign userMock.serviceId = param.ServiceId;
  userMock.serviceId = sigdata.ServiceId;
  // send DBPort::SetUserStatusResponse(ServiceId: userMock.serviceId, UserId: userMock.userId, isSuccessfull: TRUE);
  send new DBPort::SetUserStatusResponse(ServiceId=>userMock.serviceId, UserId=>userMock.userId, isSuccessfull=>true) to DBPort::instances().one();
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OI2rwZHNEeWgtJmFnQKWjw" name="SetUserStatus_trigger" event="_OI2EsZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OI9ZcpHNEeWgtJmFnQKWjw" name="RemoveUserIfExist" source="_OIrFlJHNEeWgtJmFnQKWjw" target="_OIrFlJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OI-AgZHNEeWgtJmFnQKWjw" name="RemoveUserIfExist$method$1" specification="_OI8yYZHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI_OoZHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI_OopHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI_Oo5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJAcwZHNEeWgtJmFnQKWjw" name="UserId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJAcwpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJAcw5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>;</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OI9ZdJHNEeWgtJmFnQKWjw" name="RemoveUserIfExist_trigger" event="_OI9ZcZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJ-GEpHNEeWgtJmFnQKWjw" name="AddUserResponse" source="_OIrFlJHNEeWgtJmFnQKWjw" target="_OIrFlJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJ_UMZHNEeWgtJmFnQKWjw" name="AddUserResponse$method$1" specification="_OJ838JHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKAiUZHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKAiUpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKAiU5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKBwcZHNEeWgtJmFnQKWjw" name="UserId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKBwcpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKBwc5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKC-kZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKC-kpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKC-k5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // if param.ServiceId!=Service::GetServiceId() and param.ServiceId!=0
  if(((sigdata.ServiceId!=Service::GetServiceId())&amp;&amp;(sigdata.ServiceId!=0))) {
    // return;
    return;
  // end if;
  }
  // select any unregsub from instances of UnregisteredSubscriber where selected.PhoneNumber==param.UserId;
  UnregisteredSubscriber unregsub = UnregisteredSubscriber::instances().filter(selected:(((Subscriber)(selected)).PhoneNumber==sigdata.UserId)).one();
  // if empty unregsub
  if(unregsub==null) {
    // bridge LogFailure(message: &quot;PhoneX/DBPort/AddUserResponse - Registration result (AddUserResponse) received for unknown user&quot;);
    LOG::LogFailure(message=>&quot;PhoneX/DBPort/AddUserResponse - Registration result (AddUserResponse) received for unknown user&quot;);
    // return;
    return;
  // end if;
  }
  // select one regproc related by unregsub->RegistrationProcess[R4];
  RegistrationProcess regproc = unregsub->'is registered through'.one();
  // if param.isSuccessfull==TRUE
  if((sigdata.isSuccessfull==true)) {
    // generate RegistrationProcess2:'RegistrationConfirmed' to regproc;
    send new RegistrationProcess::RegistrationConfirmed() to regproc;
  // else
  } else {
    // generate RegistrationProcess3:'RegistrationNotConfirmed' to regproc;
    send new RegistrationProcess::RegistrationNotConfirmed() to regproc;
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJ-tIZHNEeWgtJmFnQKWjw" name="AddUserResponse_trigger" event="_OJ-GEZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OKEMsJHNEeWgtJmFnQKWjw" name="UserStatus" source="_OIrFlJHNEeWgtJmFnQKWjw" target="_OIrFlJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OKEzwZHNEeWgtJmFnQKWjw" name="UserStatus$method$1" specification="_OKDloZHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKFa1JHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKFa1ZHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKFa1pHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKGo8JHNEeWgtJmFnQKWjw" name="UserId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKGo8ZHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKGo8pHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKHQBZHNEeWgtJmFnQKWjw" name="isBusy">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKHQBpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKHQB5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKIeJZHNEeWgtJmFnQKWjw" name="isKnown">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKJFMJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKJFMZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // if param.ServiceId!=Service::GetServiceId() and param.ServiceId!=0
  if(((sigdata.ServiceId!=Service::GetServiceId())&amp;&amp;(sigdata.ServiceId!=0))) {
    // return;
    return;
  // end if;
  }
  // select any subscriber from instances of Subscriber where selected.PhoneNumber==param.UserId;
  Subscriber subscriber = Subscriber::instances().filter(selected:(selected.PhoneNumber==sigdata.UserId)).one();
  // if empty subscriber
  if(subscriber==null) {
    // bridge LogFailure(message: &quot;PhoneX/DBPort/UserStatus - UserStatus signal missrouted!&quot;);
    LOG::LogFailure(message=>&quot;PhoneX/DBPort/UserStatus - UserStatus signal missrouted!&quot;);
    // return;
    return;
  // end if;
  }
  // if param.isKnown==FALSE
  if((sigdata.isKnown==false)) {
    // generate Subscriber3:'UserStatusUnknown' to subscriber;
    send new Subscriber::UserStatusUnknown() to subscriber;
  // elif param.isBusy==FALSE
  } else if((sigdata.isBusy==false)) {
    // generate Subscriber1:'UserStatusFree' to subscriber;
    send new Subscriber::UserStatusFree() to subscriber;
  // else
  } else {
    // generate Subscriber2:'UserStatusBusy' to subscriber;
    send new Subscriber::UserStatusBusy() to subscriber;
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OKEMspHNEeWgtJmFnQKWjw" name="UserStatus_trigger" event="_OKDlpZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OKJsQpHNEeWgtJmFnQKWjw" name="SetUserStatusResponse" source="_OIrFlJHNEeWgtJmFnQKWjw" target="_OIrFlJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OKKTUZHNEeWgtJmFnQKWjw" name="SetUserStatusResponse$method$1" specification="_OKJFM5HNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKK6ZZHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKK6ZpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKK6Z5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKMIgZHNEeWgtJmFnQKWjw" name="UserId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKMIgpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKMIg5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKMvk5HNEeWgtJmFnQKWjw" name="isSuccessfull">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKMvlJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKMvlZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // if param.ServiceId!=Service::GetServiceId() and param.ServiceId!=0
  if(((sigdata.ServiceId!=Service::GetServiceId())&amp;&amp;(sigdata.ServiceId!=0))) {
    // return;
    return;
  // end if;
  }
  // select any subscriber from instances of Subscriber where selected.PhoneNumber==param.UserId;
  Subscriber subscriber = Subscriber::instances().filter(selected:(selected.PhoneNumber==sigdata.UserId)).one();
  // if empty subscriber
  if(subscriber==null) {
    // bridge LogFailure(message: &quot;PhoneX/DBPort/SetUserStatusResponse - UserStatus signal missrouted!&quot;);
    LOG::LogFailure(message=>&quot;PhoneX/DBPort/SetUserStatusResponse - UserStatus signal missrouted!&quot;);
    // return;
    return;
  // end if;
  }
  // if param.isSuccessfull==TRUE
  if((sigdata.isSuccessfull==true)) {
    // generate Subscriber4:'UserUpdateSuccess' to subscriber;
    send new Subscriber::UserUpdateSuccess() to subscriber;
  // else
  } else {
    // generate Subscriber5:'UserUpdateFail' to subscriber;
    send new Subscriber::UserUpdateFail() to subscriber;
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OKJsRJHNEeWgtJmFnQKWjw" name="SetUserStatusResponse_trigger" event="_OKJsQZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OKNWpJHNEeWgtJmFnQKWjw" name="RemoveUserResponse" source="_OIrFlJHNEeWgtJmFnQKWjw" target="_OIrFlJHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OKN9spHNEeWgtJmFnQKWjw" name="RemoveUserResponse$method$1" specification="_OKMvl5HNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKOkxZHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKOkxpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKOkx5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKPy4ZHNEeWgtJmFnQKWjw" name="UserId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKPy4pHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKPy45HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKQZ9ZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKRBAJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKRBAZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // if param.ServiceId!=Service::GetServiceId() and param.ServiceId!=0
  if(((sigdata.ServiceId!=Service::GetServiceId())&amp;&amp;(sigdata.ServiceId!=0))) {
    // return;
    return;
  // end if;
  }
  // select any regsub from instances of RegisteredSubscriber where selected.PhoneNumber==param.UserId;
  RegisteredSubscriber regsub = RegisteredSubscriber::instances().filter(selected:(((Subscriber)(selected)).PhoneNumber==sigdata.UserId)).one();
  // if empty regsub
  if(regsub==null) {
    // bridge LogFailure(message: &quot;PhoneX/DBPort/RemoveUserResponse - Unregistration result (RemoveUserResponse) received for unknown user&quot;);
    LOG::LogFailure(message=>&quot;PhoneX/DBPort/RemoveUserResponse - Unregistration result (RemoveUserResponse) received for unknown user&quot;);
    // return;
    return;
  // end if;
  }
  // select one unregproc related by regsub->UnregistrationProcess[R5];
  UnregistrationProcess unregproc = regsub->'is unregistered through'.one();
  // if param.isSuccessfull==TRUE
  if((sigdata.isSuccessfull==true)) {
    // generate UnregistrationProcess2:'UnregistrationConfirmed' to unregproc;
    send new UnregistrationProcess::UnregistrationConfirmed() to unregproc;
  // else
  } else {
    // generate UnregistrationProcess3:'UnregistrationNotConfirmed' to unregproc;
    send new UnregistrationProcess::UnregistrationNotConfirmed() to unregproc;
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OKNWppHNEeWgtJmFnQKWjw" name="RemoveUserResponse_trigger" event="_OKNWo5HNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OIrFkpHNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OIrFlJHNEeWgtJmFnQKWjw" name="Init"/>
              </region>
            </ownedBehavior>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OIsTsZHNEeWgtJmFnQKWjw" name="AddUserIfNotExist">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIuv8ZHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIuv8pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIuv85HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIv-EZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIv-EpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIv-E5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OIxMMZHNEeWgtJmFnQKWjw" name="GetUserStatus">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OIzBY5HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIzBZJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIzBZZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OI02kJHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI02kZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI02kpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OI1dpZHNEeWgtJmFnQKWjw" name="SetUserStatus">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OI3545HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI355JHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI355ZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OI5IA5HNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI5IBJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI5IBZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OI6WIpHNEeWgtJmFnQKWjw" name="isBusy">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI6WI5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI6WJJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OI7kQ5HNEeWgtJmFnQKWjw" name="isRemovingNow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI7kRJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI8LUJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OI8yY5HNEeWgtJmFnQKWjw" name="RemoveUserIfExist">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OI-nk5HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI-nlJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI-nlZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OI_1s5HNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI_1tJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI_1tZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJ9fAZHNEeWgtJmFnQKWjw" name="AddUserResponse">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJ_7RZHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJ_7RpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJ_7R5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKBJZZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKBJZpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKBJZ5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKCXhZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKCXhpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKCXh5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OKDlo5HNEeWgtJmFnQKWjw" name="UserStatus">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKFa0JHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKFa0ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKFa0pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKGB5ZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKGB5pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKGB55HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKHQAZHNEeWgtJmFnQKWjw" name="isBusy">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKHQApHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKHQA5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKIeIZHNEeWgtJmFnQKWjw" name="isKnown">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKIeIpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKIeI5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OKJFNZHNEeWgtJmFnQKWjw" name="SetUserStatusResponse">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKK6YZHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKK6YpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKK6Y5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKLhdZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKLhdpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKLhd5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKMIiZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKMvkJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKMvkZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OKNWoZHNEeWgtJmFnQKWjw" name="RemoveUserResponse">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKOkwZHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKOkwpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKOkw5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKPL1ZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKPL1pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKPL15HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OKQZ8ZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKQZ8pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKQZ85HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OIrso5HNEeWgtJmFnQKWjw" name="AddUserIfNotExist" method="_OIuI4JHNEeWgtJmFnQKWjw" signal="_OIsTsZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIuI4pHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIuI45HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIuI5JHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIvXBJHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIvXBZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIvXBpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OIwlJZHNEeWgtJmFnQKWjw" name="GetUserStatus" method="_OIyaUZHNEeWgtJmFnQKWjw" signal="_OIxMMZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OIyaU5HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OIzBYJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OIzBYZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI0PgZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI0PgpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI0Pg5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OI1do5HNEeWgtJmFnQKWjw" name="SetUserStatus" method="_OI3S0ZHNEeWgtJmFnQKWjw" signal="_OI1dpZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI3S05HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI354JHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI354ZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI4g9ZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI5IAJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI5IAZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI5vFZHNEeWgtJmFnQKWjw" name="isBusy">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI5vFpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI6WIJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI69NZHNEeWgtJmFnQKWjw" name="isRemovingNow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI7kQJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI7kQZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OI8yYZHNEeWgtJmFnQKWjw" name="RemoveUserIfExist" method="_OI-AgZHNEeWgtJmFnQKWjw" signal="_OI8yY5HNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI-Ag5HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI-nkJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI-nkZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI_OpZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OI_1sJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI_1sZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJ838JHNEeWgtJmFnQKWjw" name="AddUserResponse" method="_OJ_UMZHNEeWgtJmFnQKWjw" signal="_OJ9fAZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJ_7QZHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJ_7QpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJ_7Q5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKBJYZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKBJYpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKBJY5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKCXgZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKCXgpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKCXg5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OKDloZHNEeWgtJmFnQKWjw" name="UserStatus" method="_OKEzwZHNEeWgtJmFnQKWjw" signal="_OKDlo5HNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKEzw5HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKEzxJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKEzxZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKGB4ZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKGB4pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKGB45HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKGo9JHNEeWgtJmFnQKWjw" name="isBusy">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKGo9ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKGo9pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKH3EZHNEeWgtJmFnQKWjw" name="isKnown">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKH3EpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKH3E5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OKJFM5HNEeWgtJmFnQKWjw" name="SetUserStatusResponse" method="_OKKTUZHNEeWgtJmFnQKWjw" signal="_OKJFNZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKKTU5HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKKTVJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKKTVZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKLhcZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKLhcpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKLhc5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKMIhZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKMIhpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKMIh5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OKMvl5HNEeWgtJmFnQKWjw" name="RemoveUserResponse" method="_OKN9spHNEeWgtJmFnQKWjw" signal="_OKNWoZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKN9tJHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKN9tZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKN9tpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKPL0ZHNEeWgtJmFnQKWjw" name="UserId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKPL0pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKPL05HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OKPy5ZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OKPy5pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKPy55HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OJBq4JHNEeWgtJmFnQKWjw" name="PhoneXPort" classifierBehavior="_OJCR8ZHNEeWgtJmFnQKWjw" isActive="true">
            <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_OJCR8ZHNEeWgtJmFnQKWjw" name="PhoneXPortStateMachine" isReentrant="false">
              <region xmi:type="uml:Region" xmi:id="_OJC5AZHNEeWgtJmFnQKWjw" name="DefaultRegion">
                <transition xmi:type="uml:Transition" xmi:id="_OJDgE5HNEeWgtJmFnQKWjw" name="tr_init" source="_OJC5A5HNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw"/>
                <transition xmi:type="uml:Transition" xmi:id="_OJEuMJHNEeWgtJmFnQKWjw" name="UnknownNumber" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJFVQJHNEeWgtJmFnQKWjw" name="UnknownNumber$method$1" specification="_OJEHIJHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJF8VZHNEeWgtJmFnQKWjw" name="UserID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJGjYJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJGjYZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any tc from instances of TB_TESTCASE;
  TB_TESTCASE tc = TB_TESTCASE::instances().one();
  // generate TB_TESTCASE9:'unknownNumber'userId: param.UserID to tc;
  send new TB_TESTCASE::unknownNumber(userId=>sigdata.UserID) to tc;
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJEuMpHNEeWgtJmFnQKWjw" name="UnknownNumber_trigger" event="_OJEHJJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJHxgZHNEeWgtJmFnQKWjw" name="LineIsBusy" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJIYkZHNEeWgtJmFnQKWjw" name="LineIsBusy$method$1" specification="_OJGjY5HNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJJms5HNEeWgtJmFnQKWjw" name="UserID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJJmtJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJJmtZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any tc from instances of TB_TESTCASE;
  TB_TESTCASE tc = TB_TESTCASE::instances().one();
  // generate TB_TESTCASE5:'lineIsBusy'userId: param.UserID to tc;
  send new TB_TESTCASE::lineIsBusy(userId=>sigdata.UserID) to tc;
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJHxg5HNEeWgtJmFnQKWjw" name="LineIsBusy_trigger" event="_OJHxgJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJK00pHNEeWgtJmFnQKWjw" name="CalledBy" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJLb45HNEeWgtJmFnQKWjw" name="CalledBy$method$1" specification="_OJKNwZHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJMqApHNEeWgtJmFnQKWjw" name="CallerID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJMqA5HNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJMqBJHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJN4I5HNEeWgtJmFnQKWjw" name="CalledID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJN4JJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJN4JZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJPGQ5HNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJPGRJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJPGRZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any tc from instances of TB_TESTCASE;
  TB_TESTCASE tc = TB_TESTCASE::instances().one();
  // generate TB_TESTCASE6:'calledBy'callerId: param.CallerID, calledId: param.CalledID, serviceId: param.ServiceId to tc;
  send new TB_TESTCASE::calledBy(callerId=>sigdata.CallerID, calledId=>sigdata.CalledID, serviceId=>sigdata.ServiceId) to tc;
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJLb4JHNEeWgtJmFnQKWjw" name="CalledBy_trigger" event="_OJK00ZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJQUYpHNEeWgtJmFnQKWjw" name="InitiateCall" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJQ7cpHNEeWgtJmFnQKWjw" name="InitiateCall$method$1" specification="_OJPtUZHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJSJkpHNEeWgtJmFnQKWjw" name="UserID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJSJk5HNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJSJlJHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJTXs5HNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJTXtJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJT-wJHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any tc from instances of TB_TESTCASE;
  TB_TESTCASE tc = TB_TESTCASE::instances().one();
  // generate TB_TESTCASE7:'initiateCall'userId: param.UserID, serviceId: param.ServiceId to tc;
  send new TB_TESTCASE::initiateCall(userId=>sigdata.UserID, serviceId=>sigdata.ServiceId) to tc;
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJQUZJHNEeWgtJmFnQKWjw" name="InitiateCall_trigger" event="_OJQUYZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJUl0pHNEeWgtJmFnQKWjw" name="TerminateCall" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJVM4pHNEeWgtJmFnQKWjw" name="TerminateCall$method$1" specification="_OJT-wpHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJWbAZHNEeWgtJmFnQKWjw" name="UserID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJWbApHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJWbA5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any tc from instances of TB_TESTCASE;
  TB_TESTCASE tc = TB_TESTCASE::instances().one();
  // generate TB_TESTCASE8:'terminateCall'userId: param.UserID to tc;
  send new TB_TESTCASE::terminateCall(userId=>sigdata.UserID) to tc;
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJUl1JHNEeWgtJmFnQKWjw" name="TerminateCall_trigger" event="_OJUl0ZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJXCFJHNEeWgtJmFnQKWjw" name="RegistrationResult" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJYQMZHNEeWgtJmFnQKWjw" name="RegistrationResult$method$1" specification="_OJWbBZHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJZeUZHNEeWgtJmFnQKWjw" name="UserID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJZeUpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJZeU5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJbTgJHNEeWgtJmFnQKWjw" name="isSuccessfull">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJbTgZHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJbTgpHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any tc from instances of TB_TESTCASE;
  TB_TESTCASE tc = TB_TESTCASE::instances().one();
  // generate TB_TESTCASE10:'registrationResult'userId: param.UserID, isSuccessfull: param.isSuccessfull to tc;
  send new TB_TESTCASE::registrationResult(userId=>sigdata.UserID, isSuccessfull=>sigdata.isSuccessfull) to tc;
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJXpIZHNEeWgtJmFnQKWjw" name="RegistrationResult_trigger" event="_OJXCE5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJb6lJHNEeWgtJmFnQKWjw" name="UnregistrationResult" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJcho5HNEeWgtJmFnQKWjw" name="UnregistrationResult$method$1" specification="_OJbThJHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJdvw5HNEeWgtJmFnQKWjw" name="UserID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJdvxJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJdvxZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJe94ZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJe94pHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJe945HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>;</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJchoJHNEeWgtJmFnQKWjw" name="UnregistrationResult_trigger" event="_OJb6k5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJgMAJHNEeWgtJmFnQKWjw" name="AllUserUnregistered" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJgzEJHNEeWgtJmFnQKWjw" name="AllUserUnregistered$method$1" specification="_OJfk8ZHNEeWgtJmFnQKWjw">
                    <language>rALF</language>
                    <body>;</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJgMApHNEeWgtJmFnQKWjw" name="AllUserUnregistered_trigger" event="_OJfk9ZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJiBMZHNEeWgtJmFnQKWjw" name="AcceptCall" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJioQZHNEeWgtJmFnQKWjw" name="AcceptCall$method$1" specification="_OJhaIJHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJj2YJHNEeWgtJmFnQKWjw" name="UserID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJj2YZHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJj2YpHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJkddZHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJlEgJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJlEgZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any called from instances of Called where selected.PhoneNumber==param.UserID;
  Called called = Called::instances().filter(selected:(((Subscriber)(selected)).PhoneNumber==sigdata.UserID)).one();
  // if empty called
  if(called==null) {
    // bridge LogFailure(message: &quot;AcceptCall: no such called subscriber&quot;);
    LOG::LogFailure(message=>&quot;AcceptCall: no such called subscriber&quot;);
    // return;
    return;
  // end if;
  }
  // select one call related by called->Call[R3];
  Call call = called->'joins'.one();
  // generate Call10:'CallRequestAccepted' to call;
  send new Call::CallRequestAccepted() to call;
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJiBM5HNEeWgtJmFnQKWjw" name="AcceptCall_trigger" event="_OJiBMJHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJlrlJHNEeWgtJmFnQKWjw" name="EndCall" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJmSoZHNEeWgtJmFnQKWjw" name="EndCall$method$1" specification="_OJlEg5HNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJm5tJHNEeWgtJmFnQKWjw" name="UserID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJm5tZHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJm5tpHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJngx5HNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJngyJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJngyZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // select any subscriber from instances of Subscriber where selected.PhoneNumber==param.UserID;
  Subscriber subscriber = Subscriber::instances().filter(selected:(selected.PhoneNumber==sigdata.UserID)).one();
  // if empty subscriber
  if(subscriber==null) {
    // bridge LogFailure(message: &quot;EndCall: no such EndCall subscriber/UserId&quot;);
    LOG::LogFailure(message=>&quot;EndCall: no such EndCall subscriber/UserId&quot;);
    // return;
    return;
  // end if;
  }
  // select one caller related by subscriber->Caller[R1];
  Caller caller = ((Caller)(subscriber));
  // if not empty caller
  if(!(caller==null)) {
    // select one call related by caller->Call[R2];
    Call call = caller->'initiates'.one();
    // generate Call7:'EndCallRcvd' to call;
    send new Call::EndCallRcvd() to call;
  // else
  } else {
    // select one called related by subscriber->Called[R1];
    Called called = ((Called)(subscriber));
    // select one call related by called->Call[R3];
    Call call = called->'joins'.one();
    // generate Call7:'EndCallRcvd' to call;
    send new Call::EndCallRcvd() to call;
  // end if;
  }
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJlrlpHNEeWgtJmFnQKWjw" name="EndCall_trigger" event="_OJlrk5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJoH1pHNEeWgtJmFnQKWjw" name="CallSignal" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJou5JHNEeWgtJmFnQKWjw" name="CallSignal$method$1" specification="_OJoH0ZHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJp9AJHNEeWgtJmFnQKWjw" name="CallerID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJp9AZHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJp9ApHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJqkEZHNEeWgtJmFnQKWjw" name="CalledID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJqkEpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJqkE5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJryMZHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJryMpHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJryM5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // Call::create(CallerID: param.CallerID, CalledID: param.CalledID, ServiceId: param.ServiceId);
  Call::create(CallerID=>sigdata.CallerID, CalledID=>sigdata.CalledID, ServiceId=>sigdata.ServiceId);
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJou4ZHNEeWgtJmFnQKWjw" name="CallSignal_trigger" event="_OJoH1ZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJsZRJHNEeWgtJmFnQKWjw" name="RegisterUser" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJtAU5HNEeWgtJmFnQKWjw" name="RegisterUser$method$1" specification="_OJryNZHNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJtnZZHNEeWgtJmFnQKWjw" name="UserID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJuOcJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJuOcZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJu1hJHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJvckJHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJvckZHNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // RegistrationProcess::create(ServiceId: param.ServiceId, UserID: param.UserID);
  RegistrationProcess::create(ServiceId=>sigdata.ServiceId, UserID=>sigdata.UserID);
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJtAUJHNEeWgtJmFnQKWjw" name="RegisterUser_trigger" event="_OJsZQ5HNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJwDopHNEeWgtJmFnQKWjw" name="UnregisterUser" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJwqsZHNEeWgtJmFnQKWjw" name="UnregisterUser$method$1" specification="_OJvck5HNEeWgtJmFnQKWjw">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJyf4ZHNEeWgtJmFnQKWjw" name="UserID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJyf4pHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJyf45HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJzuAZHNEeWgtJmFnQKWjw" name="ServiceId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJzuApHNEeWgtJmFnQKWjw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJzuA5HNEeWgtJmFnQKWjw" value="1"/>
                    </ownedParameter>
                    <language>rALF</language>
                    <body>  // UnregistrationProcess::create(UserID: param.UserID);
  UnregistrationProcess::create(UserID=>sigdata.UserID);
</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJwDpJHNEeWgtJmFnQKWjw" name="UnregisterUser_trigger" event="_OJwDoZHNEeWgtJmFnQKWjw"/>
                </transition>
                <transition xmi:type="uml:Transition" xmi:id="_OJ08IJHNEeWgtJmFnQKWjw" name="EndAllCall" source="_OJDgEZHNEeWgtJmFnQKWjw" target="_OJDgEZHNEeWgtJmFnQKWjw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_OJ4mgJHNEeWgtJmFnQKWjw" name="EndAllCall$method$1" specification="_OJ0VEZHNEeWgtJmFnQKWjw">
                    <language>rALF</language>
                    <body>;</body>
                  </effect>
                  <trigger xmi:type="uml:Trigger" xmi:id="_OJ3_cZHNEeWgtJmFnQKWjw" name="EndAllCall_trigger" event="_OJ0VFZHNEeWgtJmFnQKWjw"/>
                </transition>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_OJC5A5HNEeWgtJmFnQKWjw" name="initial_ps"/>
                <subvertex xmi:type="uml:State" xmi:id="_OJDgEZHNEeWgtJmFnQKWjw" name="Init"/>
              </region>
            </ownedBehavior>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJEHIpHNEeWgtJmFnQKWjw" name="UnknownNumber">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJF8UZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJF8UpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJF8U5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJHKcZHNEeWgtJmFnQKWjw" name="LineIsBusy">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJI_pZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJJmsJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJJmsZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJKNw5HNEeWgtJmFnQKWjw" name="CalledBy">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJMC9ZHNEeWgtJmFnQKWjw" name="CallerID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJMC9pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJMqAJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJNRFZHNEeWgtJmFnQKWjw" name="CalledID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJN4IJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJN4IZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJOfNZHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJPGQJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJPGQZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJPtU5HNEeWgtJmFnQKWjw" name="InitiateCall">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJRihZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJRihpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJSJkJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJSwpZHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJTXsJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJTXsZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJT-xJHNEeWgtJmFnQKWjw" name="TerminateCall">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJVz9JHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJVz9ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJVz9pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJXCEZHNEeWgtJmFnQKWjw" name="RegistrationResult">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJY3QpHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJY3Q5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJY3RJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJaFZZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJaFZpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJascJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJb6kZHNEeWgtJmFnQKWjw" name="UnregistrationResult">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJdItZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJdvwJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJdvwZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJeW1ZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJeW1pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJeW15HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJfk85HNEeWgtJmFnQKWjw" name="AllUserUnregistered"/>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJhaIpHNEeWgtJmFnQKWjw" name="AcceptCall">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJjPUZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJjPUpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJjPU5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJkdcZHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJkdcpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJkdc5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJlrkZHNEeWgtJmFnQKWjw" name="EndCall">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJm5sJHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJm5sZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJm5spHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJngw5HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJngxJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJngxZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJoH05HNEeWgtJmFnQKWjw" name="CallSignal">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJpV9JHNEeWgtJmFnQKWjw" name="CallerID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJpV9ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJpV9pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJp9CJHNEeWgtJmFnQKWjw" name="CalledID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJp9CZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJp9CpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJrLJJHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJrLJZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJrLJpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJsZQZHNEeWgtJmFnQKWjw" name="RegisterUser">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJtnYZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJtnYpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJtnY5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJu1gJHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJu1gZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJu1gpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJvclZHNEeWgtJmFnQKWjw" name="UnregisterUser">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJx40ZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJx40pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJx405HNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_OJzG85HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJzG9JHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJzG9ZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedAttribute>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Signal" xmi:id="_OJ0VE5HNEeWgtJmFnQKWjw" name="EndAllCall"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJEHIJHNEeWgtJmFnQKWjw" name="UnknownNumber" method="_OJFVQJHNEeWgtJmFnQKWjw" signal="_OJEHIpHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJFVQpHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJFVQ5HNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJFVRJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJGjY5HNEeWgtJmFnQKWjw" name="LineIsBusy" method="_OJIYkZHNEeWgtJmFnQKWjw" signal="_OJHKcZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJI_oZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJI_opHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJI_o5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJKNwZHNEeWgtJmFnQKWjw" name="CalledBy" method="_OJLb45HNEeWgtJmFnQKWjw" signal="_OJKNw5HNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJMC8ZHNEeWgtJmFnQKWjw" name="CallerID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJMC8pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJMC85HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJNREZHNEeWgtJmFnQKWjw" name="CalledID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJNREpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJNRE5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJOfMZHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJOfMpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJOfM5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJPtUZHNEeWgtJmFnQKWjw" name="InitiateCall" method="_OJQ7cpHNEeWgtJmFnQKWjw" signal="_OJPtU5HNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJRigZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJRigpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJRig5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJSwoZHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJSwopHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJSwo5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJT-wpHNEeWgtJmFnQKWjw" name="TerminateCall" method="_OJVM4pHNEeWgtJmFnQKWjw" signal="_OJT-xJHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJVz8JHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJVz8ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJVz8pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJWbBZHNEeWgtJmFnQKWjw" name="RegistrationResult" method="_OJYQMZHNEeWgtJmFnQKWjw" signal="_OJXCEZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJYQM5HNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJYQNJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJY3QJHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJaFYZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJaFYpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJaFY5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJbThJHNEeWgtJmFnQKWjw" name="UnregistrationResult" method="_OJcho5HNEeWgtJmFnQKWjw" signal="_OJb6kZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJdIsZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJdIspHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJdIs5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJeW0ZHNEeWgtJmFnQKWjw" name="isSuccessfull">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJeW0pHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJeW05HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJfk8ZHNEeWgtJmFnQKWjw" name="AllUserUnregistered" method="_OJgzEJHNEeWgtJmFnQKWjw" signal="_OJfk85HNEeWgtJmFnQKWjw"/>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJhaIJHNEeWgtJmFnQKWjw" name="AcceptCall" method="_OJioQZHNEeWgtJmFnQKWjw" signal="_OJhaIpHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJioQ5HNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJioRJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJioRZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJj2ZJHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJj2ZZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJj2ZpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJlEg5HNEeWgtJmFnQKWjw" name="EndCall" method="_OJmSoZHNEeWgtJmFnQKWjw" signal="_OJlrkZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJmSo5HNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJmSpJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJmSpZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJm5uJHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJngwJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJngwZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJoH0ZHNEeWgtJmFnQKWjw" name="CallSignal" method="_OJou5JHNEeWgtJmFnQKWjw" signal="_OJoH05HNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJpV8JHNEeWgtJmFnQKWjw" name="CallerID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJpV8ZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJpV8pHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJp9BJHNEeWgtJmFnQKWjw" name="CalledID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJp9BZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJp9BpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJrLIJHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJrLIZHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJrLIpHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJryNZHNEeWgtJmFnQKWjw" name="RegisterUser" method="_OJtAU5HNEeWgtJmFnQKWjw" signal="_OJsZQZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJtAVZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJtAVpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJtAV5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJuOc5HNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJuOdJHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJuOdZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJvck5HNEeWgtJmFnQKWjw" name="UnregisterUser" method="_OJwqsZHNEeWgtJmFnQKWjw" signal="_OJvclZHNEeWgtJmFnQKWjw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJxRwZHNEeWgtJmFnQKWjw" name="UserID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJxRwpHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJxRw5HNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OJyf5ZHNEeWgtJmFnQKWjw" name="ServiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OJzG8JHNEeWgtJmFnQKWjw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJzG8ZHNEeWgtJmFnQKWjw" value="1"/>
              </ownedParameter>
            </ownedReception>
            <ownedReception xmi:type="uml:Reception" xmi:id="_OJ0VEZHNEeWgtJmFnQKWjw" name="EndAllCall" method="_OJ4mgJHNEeWgtJmFnQKWjw" signal="_OJ0VE5HNEeWgtJmFnQKWjw"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_ib2D0JHNEeWvyKzsGTpJ3A">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ib2D0ZHNEeWvyKzsGTpJ3A" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://modelexecution.eltesoft.hu/xumlrt/#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://XUMLRT_PROFILE/xumlrt.profile.uml#_HaqtUBDoEeWE3_d6VQejPQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_mhTsMJKwEeWXXYnhMmBcWw">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_mhVhYJKwEeWXXYnhMmBcWw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
  </uml:Model>
  <xumlrt:ExternalEntity xmi:id="_OKWgkpHNEeWgtJmFnQKWjw" class="TIMEE" base_Class="_OKWgkZHNEeWgtJmFnQKWjw"/>
  <xumlrt:ExternalEntity xmi:id="_OKXusZHNEeWgtJmFnQKWjw" class="ARCHEE" base_Class="_OKXusJHNEeWgtJmFnQKWjw"/>
  <xumlrt:ExternalEntity xmi:id="_OKYVwZHNEeWgtJmFnQKWjw" class="LOGEE" base_Class="_OKYVwJHNEeWgtJmFnQKWjw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_nQGfUJLFEeWDo4xPRuN6gw" language="com.incquerylabs.uml.ralf.ReducedAlfLanguage"/>
  <ActionLanguage:TextualRepresentation xmi:id="_sZc-wJLFEeWDo4xPRuN6gw" language="com.incquerylabs.uml.ralf.ReducedAlfLanguage"/>
</xmi:XMI>
